iteration: 0 generation: def newfun(image): return image.score(['trunks, branches, or roots', 'can be found in the musical instruments or mouth', 'has buttons', 'handles or grips', 'can have large eyes or decorative elements', 'found in England'])
iteration: 1 generation: def newfun(image): return image.score(['grass, trees, bushes, and flowers', 'cars and trucks drive on the pavement', 'a large urban area', 'a triangular roof', 'tall bell towers', 'long gone'])
iteration: 2 generation: def newfun(image): return image.score(['may be cylindrical or round', 'a tall or prominent crown molding', 'fuzzy leaves', 'a longboard', 'designed for recreation or transportation', "oddly-shaped fruits or vegetables"])
iteration: 3 generation: def newfun(image): return image.score(['a plant with long, thin leaves', 'a vehicle with windows and armrests', 'may have strings or straps', 'may be catag Southern or Western', 'has laces or straps at the front', 'may have a hood or sunroof'])
iteration: 4 generation: def newfun(image): return image.score(['long, slender, light-colored flowers', 'works in a variety of mediums, including sculpture and painting', 'long mother-of-pearl buttons', 'a large stone or concrete fireplace', 'olive green, desert tan, or woodland camouflage', 'completely enclosed shelter'])
iteration: 5 generation: def newfun(image): return image.score(['completely enclosed shelter', 'olive green, desert tan, or woodland camouflage', 'long mother-of-pearl buttons', 'a large stone or concrete fireplace', 'works in a variety of mediums, including sculpture and painting', 'long, slender, light-colored flowers'])
iteration: 6 generation: def newfun(image): return image.score(['edible, fruits', 'an electronic device', 'screens.', 'a stand or mount to support the screen', 'long, curved snout', 'spokes radiating out from the hub'])
iteration: 7 generation: def newfun(image): return image.score(['usually made of leather or synthetic materials',     'may have a hood or headcovering', 'oval', 'held in one hand', 'wire or plastic mesh', 'a variety of bushes, trees, and other plants'])
iteration: 8 generation: def newfun(image): return image.score(['long rows of spikes or quills', 'dusty, barren land', 'noxious fumes', 'a derrick or scaffolding', 'no horns or antlers', 'metallic sheen'])
iteration: 9 generation: def newfun(image): return image.score([' velvet material', 'designed by Leonardo da Vinci', 'a variety of bright colors', 'cut like jewels', 'ornate carvings and detailing', 'a tapered or pointed shape'])
iteration: 10 generation: def newfun(image): return image.score(['wide, leathery leaves', 'a plant', 'a briefcase or attaché case', 'gold, silver, or other valuable material', 'oval or round shape', 'a man or woman wearing a suit'])
iteration: 11 generation: def newfun(image): return image.score(['often decorated with intricate details', 'a long, curved or winding road', 'tall, spiky leaves', 'a saddle or riding pad', 'long hair', 'a cage or enclosure'])
iteration: 12 generation: def newfun(image): return image.score(['edible, fruits', 'vegetables or herbs', 'a folded or pleated piece of fabric', 'grass or lawn', 'flowers or trees', 'ornate carvings and detailing'])
iteration: 13 generation: def newfun(image): return image.score(['vines or other plants climbing up it', 'wires or ropes at the side', 'Front doors that open', 'Blue, green, or gray exterior', 'miniscule buttons or rivets', 'can have 4 or more wheels'])
iteration: 14 generation: def newfun(image): return image.score(['suitable for drinking', 'a small evergreen tree', 'a mountain peak', 'snow', 'men made up of top hats and coats', 'christmas holiday'])
iteration: 15 generation: def newfun(image): return image.score(['original paintings or prints', 'sunglasses', 'outdoor activities', 'dense foliage', 'designed by Paul Frank', 'a recurring theme or motif'])
iteration: 16 generation: def newfun(image): return image.score(['a natural landscape', 'a flowing stream or river', 'lush greenery', 'sunlight filtering through fog or clouds', 'iridescent colors', 'a mountainous backdrop'])
iteration: 17 generation: def newfun(image): return image.score(['edible fruits or vegetables', 'a large, round head', 'vegetation growing on the cliff face', 'a film compartment on the back', 'long, curved bill', 'may have windows, doors, or vents'])
iteration: 18 generation: def newfun(image): return image.score(['held against the usera��s skin', 'brown, white, or gray bark', 'thin or wispy branches', 'a roughly, diamond-shaped piece of glass', 'configuration of buttons', 'different types of photos'])
iteration: 19 generation: def newfun(image): return image.score(['bright, vibrant colors', 'carved from a solid piece of material', 'flowers, trees, or other plants', 'a supporter or stand', 'brass, silver, or gold', 'ców cidade or suburban area'])
iteration: 20 generation: def newfun(image): return image.score(['man-made', 'a rock', 'bark or leaves', 'sticks or branches', 'tapered end', 'dimensional lumber'])
iteration: 21 generation: def newfun(image): return image.score(['housing for electronic components', 'a tree with a single, thick, vertical trunk', 'a flowering vine', 'arches or pointed arches', 'speckled or flecked with colors', 'antennas or horns'])
iteration: 22 generation: def newfun(image): return image.score(['leaves', 'twigs, bushes, or roots', 'a vehicle with a cylindrical body', 'often features frills or flounces', 'multi-colored', 'text printed in a stylized manner'])
iteration: 23 generation: def newfun(image): return image.score(['snakes', 'vegetation or foliage', 'tall, majestic trees', 'dense, drooping branches', ' grassy or rocky area', 'a body of water'])
iteration: 24 generation: def newfun(image): return image.score(['Tudor-style architecture', 'typically has a peaked roof', 'elaborate gardens', 'ornate, curved lines', ' hydrangeas and rose bushes', 'ivy-covered walls'])
iteration: 25 generation: def newfun(image): return image.score(['Keystone, cornice, or other ornaments', 'dense, dark green foliage', 'Flat, soft top', ' Alexander or Topeka shutter', 'thin, curved blade', '(almond) green or brown'])
iteration: 26 generation: def newfun(image): return image.score(['edible, fruits', 'vegetables or herbs', 'a folded or pleated piece of fabric', 'grass or lawn', 'flowers or trees', 'ornate carvings and detailing'])
iteration: 27 generation: def newfun(image): return image.score(['also known as an aerial or satellite dish', 'red or pink flowers', ' a hill or mound', 'erect or spreading', 'may have leaves', 'typically circular or oval in shape'])
iteration: 28 generation: def newfun(image): return image.score(['sticks or branches', 'bright green', 'often found in parks or gardens', 'petals that are a different color from the leaves', 'lush, full bushes', 'may be planted in rows'])
iteration: 29 generation: def newfun(image): return image.score([' multiply by 10 any attribute score that contains the word "green"'])
iteration: 30 generation: def newfun(image): return image.score(['a cooking area with pots', 'add an "s" to the end of any word that is already plural'])
iteration: 31 generation: def newfun(image): return image.score(['sand or pebbles', 'a garden path or walkway', 'lines or patterns that repeat', 'raised beds or mounds', 'ornate carvings and detailing', 'trees, large or small groups'])
iteration: 32 generation: def newfun(image): return image.score(['ornate', 'lace', 'rounded curves', 'patterned fabric', 'midday sun', 'ivy'])
iteration: 33 generation: def newfun(image): return image.score(['elm, oak, or other deciduous tree', 'a machine with dials or buttons', 'found in a kitchen', 'breaks up large particles', 'rounded or curved lines', 'tan, khaki, or olive drab color'])
iteration: 34 generation: def newfun(image): return image.score(['a small parcel of land', 'a small, unoccupied structure', 'shrubs or bushes', 'low-lying procumbent growth', '(certain Mary)', 'a grassy area'])
iteration: 35 generation: def newfun(image): return image.score(['spiky leaves', 'made from a combination of materials', 'same color as the leaves', 'may have thorns', 'compact growth habit', 'succulents'])
iteration: 36 generation: def newfun(image): return image.score(['motifs such as pinecones, acorns, or leaves', 'a magazine or catalog', 'often used as a centerpiece', 'mustard, ketchup, relish, and hot sauce', 'vintage or antique', 'leaf-shaped jewelry'])
iteration: 37 generation: def newfun(image): return image.score(['edible, fruits', 'vegetables or herbs', 'a folded or pleated piece of fabric', 'grass or lawn', 'flowers or trees', 'ornate carvings and detailing'])
iteration: 38 generation: def newfun(image): return image.score(['a type of tree', 'wavy or curly hair', '4 wheels', 'ornate patterns or designs', 'made of natural or synthetic materials', 'series of uphill and downhill areas'])
iteration: 39 generation: def newfun(image): return image.score(['shrubs', 'bushes', 'plants', 'a long trunk', 'spindly legs', 'available in a range of colors'])
iteration: 40 generation: def newfun(image): return image.score(['multiply by 10 any attribute score that contains the word "tree"'])
iteration: 41 generation: def newfun(image): return image.score(['commercial, druker, or shipping industries', 'pandas', 'clothes drying on a laundry line', 'shiny metal rims', 'makes little to no noise when running', 'found in souther Asian forests'])
iteration: 42 generation: def newfun(image): return image.score(['spiky leaves', 'made from a combination of materials', 'same color as the leaves', 'may have thorns', 'compact growth habit', 'succulents'])
iteration: 43 generation: def newfun(image): return image.score(['trees', 'a primary color', 'lying horizontally', '(certain Gregory)'])
iteration: 44 generation: def newfun(image): return image.score(['leaves', 'twigs, bushes, or roots', 'a vehicle with a cylindrical body', 'often features frills or flounces', 'multi-colored', 'text printed in a stylized manner'])
iteration: 45 generation: def newfun(image): return image.score(['multiply by 10 any attribute score that contains the word "tree"'])
iteration: 46 generation: def newfun(image): return image.score(['spiky leaves', 'compact growth habit', 'succulents', 'areoles', 'spines', 'stem succulent'])
iteration: 47 generation: def newfun(image): return image.score(['housing for electronic components', 'a tree with a single, thick, vertical trunk', 'a flowering vine', 'arches or pointed arches', 'speckled or flecked with colors', 'antennas or horns'])
iteration: 48 generation: def newfun(image): return image.score(['winter', 'snow-covered trees', 'snow-covered mountains', 'a weathered or rustic look', 'matches', 'typically served hot'])
iteration: 49 generation: def newfun(image): return image.score(['coniferous trees', 'evergreen leaves', 'boughs or branches', 'sap that can be made into syrup', 'pinecones', 'long lifespan'])
iteration: 50 generation: def newfun(image): return image.score(['typically painted or decorated', 'a large, public building', 'mansions or palaces', 'ivy or climbing plants', 'a campus or courtyard', 'often found in colonial or victorian architecture'])
iteration: 51 generation: def newfun(image): return image.score(['surrounding landscape', 'billboard', 'fruits', 'road', 'living room', 'monad Bernice'])
iteration: 52 generation: def newfun(image): return image.score([' evergreen', 'winter', 'deciduous', 'a flowering plant', 'small or dwarf conifers', 'bent or twisted branches'])
iteration: 53 generation: def newfun(image): return image.score(['cacti', ' succulents', ' bare soil', 'rocks or gravel', ' arid climate', 'a blue or green sky'])
iteration: 54 generation: def newfun(image): return image.score(['decorative paper', 'tall and imposing', 'shiny black body', 'cluster of stems', 'a display of colorful flowers', 'a long, flowing mane'])
iteration: 55 generation: def newfun(image): return image.score(['deciduous trees', ' evergreen trees', 'shrubs', 'tall trees', 'a grassy area', 'often painted on canvas'])
iteration: 56 generation: def newfun(image): return image.score(['agave', 'yucca', 'loya�ja Esta�n shoulder bag from Balenciaga', 'strands or bunches', 'clusters', 'tough leaves'])
iteration: 57 generation: def newfun(image): return image.score(['plants', 'bushes', 'a woody perennial', 'a single stem', ' interpolation', 'succulents'])
iteration: 58 generation: def newfun(image): return image.score(['a large, spreading tree', 'lush leaves', 'vegetation', 'a dense canopy', 'alfalfa', 'a calm, peaceful mood'])
iteration: 59 generation: def newfun(image): return image.score(['almost any fruit, vegetable, herb', 'ornate detailing and carvings', 'likely has windows', 'walls made of interwoven branches', 'two or more people', 'wide brimmed hat'])
iteration: 60 generation: def newfun(image): return image.score(['a large, dark evergreen tree', 'holly', ' mistletoe', 'a pointy hat', 'evergreen branches', 'winter scene'])
iteration: 61 generation: def newfun(image): return image.score(['religious or spiritual themes', ' flowing water', 'a mountain', 'granny smith apples', 'poodles', ' paintings by El Greco'])
iteration: 62 generation: def newfun(image): return image.score(['sand', 'dunes', 'plants with long, thin leaves', 'linear ridges', 'a winding path', 'window shutters'])
iteration: 63 generation: def newfun(image): return image.score(['large, open rims', 'a tangled mass of branches and vines', 'a dense, thorny thicket', 'sections of thin, flexible wood', 'frames covered in stretched animal hide', 'cluster of long, narrow leaves'])
iteration: 64 generation: def newfun(image): return image.score(['bent or twisted trunk', 'a youth or younger person', 'fruit groves or orchards', 'erected for recreation', 'a watercraft', 'made primarily of wood'])
iteration: 65 generation: def newfun(image): return image.score(['coniferous trees', 'evergreen leaves', 'boughs or branches', 'sap that can be made into syrup', 'pinecones', 'long lifespan'])
iteration: 66 generation: def newfun(image): return image.score(['xeb，dark green foliage，found in warm，humid environments，may have thorns，may grow up trees，flowers are small，insignificant，purple fruits'])
iteration: 67 generation: def newfun(image): return image.score(['a wreath or garland', 'typically made of evergreen, holly, or mistletoe', 'used as a decoration', 'may contain pinecones', 'usually round or oval in shape', 'traditional Christmas colors'])
iteration: 68 generation: def newfun(image): return image.score(['sage brush', 'gray-brown tree trunks', 'dull green foliage', 'whitish-pink blossoms', 'meadows', 'hillsides'])
iteration: 69 generation: def newfun(image): return image.score(['evergreen', 'may not produce showy flowers', ' Podocarpus', 'has new growth ц célg Berberis', 'slow-гrowing tree or shrub', 'available in standards, mallets, and lollipops'])
iteration: 70 generation: def newfun(image): return image.score(['a building with arches and domes', 'peaked roof', 'towers and Battlements', 'ornate details', 'elaborate gardens', 'grassy areas'])
iteration: 71 generation: def newfun(image): return image.score(['large evergreen trees', 'seasonal colors', 'pine needles', 'red and green lights or ornaments', 'may have a tree topper or finial'])
iteration: 72 generation: def newfun(image): return image.score(['twisted or braided strips of material', 'melons', 'ooth, slender leaves', 'a rope or cable', 'a curved or angled profile', 'sandpapery texture'])
iteration: 73 generation: def newfun(image): return image.score(['a man-made structure made of concrete or stone', 'sprawling tree branches', 'aerial roots', 'occur naturally in the wild', 'a backyard or a park', 'characteristics of a tropical climate'])
iteration: 74 generation: def newfun(image): return image.score(['berry-like fruits', 'avalanches or other natural disasters', 'waxy leaves', 'twisting or curved trunk', 'evergreen shrubs', 'clusters of small flowers'])
iteration: 75 generation: def newfun(image): return image.score(['multiply by 10 any attribute score that contains the word "fruit"'])
iteration: 76 generation: def newfun(image): return image.score(['found in dry areas，woody，many tan or beige flowers，long stamens， trees grow up to 20 meters tall'])
iteration: 77 generation: def newfun(image): return image.score(['growCBD Hemp varieties', 'minimal работыándose ornamentation', 'resembles arbor vitae', ' branching shrub or small tree', 'a group ofossen entwined by wspynastało Caprifoliaceae'])
iteration: 78 generation: def newfun(image): return image.score(['multiply by 2 any attribute score that contains the word "evergreen"'])
iteration: 79 generation: def newfun(image): return image.score(['evergreen conifers', 'pyracantha', 'rododendron', 'cioslaw', 'alder', 'betou leaf'])
iteration: 80 generation: def newfun(image): return image.score(['limbs of a tree', ' fallen leaves', 'moss or lichen', 'dirt or soil', 'shrubs or bushes', 'horizontal branches'])
iteration: 81 generation: def newfun(image): return image.score([' frameworks to support plant growth', 'stalks very thin and flexible', 'mainly green color', 'oval-shaped leaves', 'may have a trellis', 'climbing   plants'])
iteration: 82 generation: def newfun(image): return image.score(['a wreath or garland', 'typically made of evergreen, holly, or mistletoe', 'used as a decoration', 'may contain pinecones', 'usually round or oval in shape', 'traditional Christmas colors'])
iteration: 83 generation: def newfun(image): return image.score(['plant with showy flowers', 'a low-growing groundcover', 'a tree or shrub', 'heart-shaped leaves', 'a creeping vine', 'flowers in shades of pink, purple, red, and white'])
iteration: 84 generation: def newfun(image): return image.score(['fast-growing trees，start as a vine，evergreen，waxy leaves，found in dry，tropical environments，small，non-showy flowers'])
iteration: 85 generation: def newfun(image): return image.score(['sand or rocky soil', 'evergreen trees', 'upright branches', 'rows or layers', 'brownish-gray tree trunks', 'cones or seed pods'])
iteration: 86 generation: def newfun(image): return image.score(['multiply by 3 any attribute score that contains the word "leaves"'])
iteration: 87 generation: def newfun(image): return image.score(['leaves with jagged edges', 'leaves with pointy tips', 'flowers with five petals', 'sweet-smelling blooms', 'climbing vines', 'multi-colored flowers'])
iteration: 88 generation: def newfun(image): return image.score(['raspberry', 'primrose-leaved', ' judas-tree', ' chinese fringe plant', 'false spirea', ' trees of - shrubs'])
iteration: 89 generation: def newfun(image): return image.score(['either deciduous or evergreen， a few or many small, green leaves，some varieties have edible fruits，often planted for ornamental purposes，cylindrical，usually tapering，branches often fork，in areas with mild winters，trunks often  slender，made into walking sticks，clothesline props，paddles，coffins，and cradles'])
iteration: 90 generation: def newfun(image): return image.score(['barren', 'hardy, thorny trees', 'dry riverbeds', 'cliffs', 'boulders', 'logger or pole pine'])
iteration: 91 generation: def newfun(image): return image.score(['typically red or green', 'grapes', 'aromatic herbs', 'ivey or climbing plants', ' fine dining', 'a campus or courtyard'])
iteration: 92 generation: def newfun(image): return image.score(['multiply by 4 any attribute score that contains the word "thorny"'])
iteration: 93 generation: def newfun(image): return image.score(['multiply by 3 any attribute score that contains the word "tree"'])
iteration: 94 generation: def newfun(image): return image.score(['hydrangea', 'may be pruned or manicured', 'groundcovers', 'dwarf shrub', 'low-growing tree', 'a cultivated landscape'])
iteration: 95 generation: def newfun(image): return image.score(['yucca', 'barrel cactus', 'desert willow', 'mesquite', 'cholla', 'creosote bush'])
iteration: 96 generation: def newfun(image): return image.score(['religious or spiritual themes', ' flowing water', 'a mountain', 'granny smith apples', 'poodles', 'paintings  by El Greco'])
iteration: 97 generation: def newfun(image): return image.score(['deciduous trees', 'grasses', 'bushes', 'winter crops', 'berries', 'mistletoe'])
iteration: 98 generation: def newfun(image): return image.score(['limbs of a tree', 'fallen leaves', 'moss or lichen', 'dirt or soil', 'shrubs or bushes', 'horizontal branches'])
iteration: 99 generation: def newfun(image): return image.score(['shrubs or small trees', 'grayish-brown trunks', 'dull, loose, open foliage', 'gray-brown or green twigs', 'brown or black tree limbs', 'seen around mountains'])
iteration: 100 generation: def newfun(image): return image.score(['sage', 'sand', 'rocky terrain', 'scrubby desert vegetation', 'shrubs and trees', 'dry riverbeds'])
iteration: 101 generation: def newfun(image): return image.score(['grassy areas', 'evergreen shrubs', 'groundcovers', 'low stone walls', 'flowers of various colors', 'linear paths'])
iteration: 102 generation: def newfun(image): return image.score(['prickly pears, chollas, or Barrel', 'pastel colors', 'sculptural monuments', 'turrets', 'water-resistant', 'covered with limestone or granite'])
iteration: 103 generation: def newfun(image): return image.score(['birch', 'generally found outdoors', 'often placed in rows', 'shrubbery', 'walnuts or hickories', 'succulent plants'])
iteration: 104 generation: def newfun(image): return image.score(['snow on mountains', 'rivers', 'cacti', 'dry streams', 'a road or path', 'evergreen shrubs'])
iteration: 105 generation: def newfun(image): return image.score(['thicket-forming shrub', 'stems rarely branching,often spiny', 'green, usually glabrous，sometimes white-tomentose', ' fragrant flowers', 'privet hedges', 'ornamental or Agronomic uses'])
iteration: 106 generation: def newfun(image): return image.score(['each narrow leaf has serrated edges，blooms in late winter or early spring，some species provide food for birds and small mammals，close relatives include apples，pears，plums，and cherries'])
iteration: 107 generation: def newfun(image): return image.score(['gravel or small rocks', 'shrubs with showy flowers', 'solid-colored petals', 'upright growth habit', 'shrub borders', 'evergreen leaves'])
iteration: 108 generation: def newfun(image): return image.score(['dense foliage', 'compound leaves', 'deserts', 'shrubs having scaly bark', 'red berries', 'growing in dense clusters'])
iteration: 109 generation: def newfun(image): return image.score(['low-maintenance lawn', 'agave plants', 'ocotillo', ' prickly pear', 'barrel cactus', 'outdoor BBQ parties'])
iteration: 110 generation: def newfun(image): return image.score(['low-growing evergreen shrubs', 'purple or pink flowers', 'small evergreen trees', 'glossy dark green leaves', 'woody seed cones', 'growing in front of a wall'])
iteration: 111 generation: def newfun(image): return image.score(['winter shrub', 'erect, branches spreading,hairy branches', 'dull green leaves', 'white, pink, or purple flowers', 'rumex', 'moxie'])
iteration: 112 generation: def newfun(image): return image.score(['an evergreen tree', 'acid-loving plants', 'glossy dark green leaves', 'may be pruned or manicured', 'shrubs having scaly bark', 'small yellow flowers'])
iteration: 113 generation: def newfun(image): return image.score(['snow-covered mountains', 'evergreen trees', 'barren trees', 'fields of wildflowers', 'rivers or streams', 'a lone cabin or lodge'])
iteration: 114 generation: def newfun(image): return image.score(['20 raised beds', 'fruit trees', 'garden gomphrenas', 'birdhouses', 'squash plants', 'flowers for attracting bees'])
iteration: 115 generation: def newfun(image): return image.score(['stately trees with spreading canopies，vibrant green leaves，bouquetя of florets，smooth，gray bark， develops over time into sprawling limbs， sturdy trunks'])
iteration: 116 generation: def newfun(image): return image.score(['red', 'ocotillo', ' prickly pear', ' barrel cactus', ' smoke tree', ' cholla'])
iteration: 117 generation: def newfun(image): return image.score(['a broad-leaf evergreen tree，crisp，dark green foliage，grayish-brown bark，waxy white flowers，shiny red fruits'])
iteration: 118 generation: def newfun(image): return image.score(['brittle branches', 'conical or columnar growth habit', 'twigs or branches', 'lengthwise veins', 'elliptical leaves', 'horizontally held branches'])
iteration: 119 generation: def newfun(image): return image.score(['ocotillo', 'chico cactus', 'cholla', 'cane cholla', 'whipple cholla', 'teddy bear cholla'])
iteration: 120 generation: def newfun(image): return image.score(['unusual leaves，spiky，sturdy trunk，forking branches，evergreen，red flowers'])
iteration: 121 generation: def newfun(image): return image.score(['tree or bush with simple leaves', 'chiefly found in dry regions', 'brown or gray bark', 'normally upward-pointing branches', 'may have yellow or green blooms', 'easily identifiable trunk'])
iteration: 122 generation: def newfun(image): return image.score(['can have thorns，dark green leaves，gray，brown，ropy stems，found in arid，dry，sunny conditions，grows up to 5 meters tall，produces purple flowers'])
iteration: 123 generation: def newfun(image): return image.score(['stately trees with spreading canopies，vibrant green leaves，bouquetя of florets，smooth，gray bark， develops over time into sprawling limbs， sturdy trunks'])
iteration: 124 generation: def newfun(image): return image.score(['dwarf trees，hardy，evergreen，glaucous leaves，inch-long blue flowers，spiky growth habit'])
iteration: 125 generation: def newfun(image): return image.score(['a tall, upright growth habit', 'green or yellow flowers', 'an office supply', 'следовательно', ' Elliptical or oval leaves', 'обычно для собак'])
iteration: 126 generation: def newfun(image): return image.score(['cacti', 'light tan, beige', 'yellowish-brown', 'narrow leaves', ' pink or purple flowers arranged in clusters'])
iteration: 127 generation: def newfun(image): return image.score(['compound trifoliate leaves', 'oak tree', 'maple tree', 'ash tree', 'hickory tree', 'beech tree'])
iteration: 128 generation: def newfun(image): return image.score(['a spiny., thorny，tree-like plant，grayish-brown bark，large，leafy，branches droop down，crown on top，services as a shaded canopy or shelter，can grow up to 15 meters tall，provides food， habitat，and shade for animals，can live hundreds of years'])
iteration: 129 generation: def newfun(image): return image.score(['smooth bark，white, pink， or red flowers，shiny green leaves， blue or white berries， southeastern United States'])
iteration: 130 generation: def newfun(image): return image.score(['stately trees with spreading canopies', 'vibrant green leaves', 'bouquet of florets', 'smooth, gray bark', 'develops over time into sprawling limbs', 'sturdy trunks', 'growing near a calm body of water'])
iteration: 131 generation: def newfun(image): return image.score(['saguaro', 'prickly pear', 'chain fruit cholla', 'teddy bear cholla', 'raisin bush', 'fragrant creosote'])
iteration: 132 generation: def newfun(image): return image.score([' Joshua tree', 'broom', 'oak trees', 'bristlecone pine', 'limber pine', 'ponderosa pine'])
iteration: 133 generation: def newfun(image): return image.score(['sagebrush', 'saltcedar', 'greasewood', 'mesquite', 'cottonwood', 'mountain mahogany'])
iteration: 134 generation: def newfun(image): return image.score(['unusual fruit，thorny，fuzzy，production process，veining leaf，size of the plant'])
iteration: 135 generation: def newfun(image): return image.score(['prolonged drought，rocky soil，grow directly from fir bark，light-colored leaves，made into Christmas wreaths，ceanothus flowers'])
iteration: 136 generation: def newfun(image): return image.score(['spring flowers', 'hedge or topiary', 'jasmine or other vines', 'olive or other evergreen trees', 'walks or pathways', 'dying or dead vegetation'])
iteration: 137 generation: def newfun(image): return image.score(['inhabiting areas with hot summers and cold winters， viene en diverse ornamental shapes， alternate, pinnately compound leaves， tiny， creamy white flowers， deciduous tree'])
iteration: 138 generation: def newfun(image): return image.score(['bent or twisted trunk，gnarled branches，exfoliating bark，evergreen，red berries'])
iteration: 139 generation: def newfun(image): return image.score(['hazelnut or beechnut trees， round, smooth fruits， simple alternate leaves， often clustered in threes， deciduous tree'])
iteration: 140 generation: def newfun(image): return image.score(['corky bark，broadleaf trees，short trunk，wide canopy， greenish-yellow flowers，grows over 30 meters tall'])
iteration: 141 generation: def newfun(image): return image.score(['star-shaped leaves， pointed lobes， reddish-purple flowers， dry slopes or rocky areas， spreading or weeping branches， clusters of small fruit'])
iteration: 142 generation: def newfun(image): return image.score(['a tall ornamental garden tree with peeling bark and red flowers'])
iteration: 143 generation: def newfun(image): return image.score(['stunted trees，sage green leaves，barren landscape，occasional scrubby trees，boulders，cacti'])
iteration: 144 generation: def newfun(image): return image.score(['thorny branches', 'plant life', 'low bushes', 'thistle-like plants', 'bramble', 'wild rose'])
iteration: 145 generation: def newfun(image): return image.score([' a dense cluster of bright red berries at the ends of the branches'])
iteration: 146 generation: def newfun(image): return image.score(['multiply by 4 any attribute score that contains the word "tree"'])
iteration: 147 generation: def newfun(image): return image.score(['red berries，holly-like leaves，winter Interest，grow as a shrub or tree，plant has both genders， tiny flowers'])
iteration: 148 generation: def newfun(image): return image.score(['elderberry shrubs or trees'])
iteration: 149 generation: def newfun(image): return image.score(['shrubs，green leaves，clusters of small， indehiscent fruits， long-lived，spreading，wiry growth habit'])
iteration: 150 generation: def newfun(image): return image.score(['roses，shiny leaves，prominent thorns，fragrant，ornamental，and climbing habit'])
iteration: 151 generation: def newfun(image): return image.score(['multiply by 2 any attribute score that contains the word "evergreen"'])
iteration: 152 generation: def newfun(image): return image.score(['a long，thin，and green fruit，cluster of leaves on top， stalk attaching fruit to the plant'])
iteration: 153 generation: def newfun(image): return image.score(['waxy leaves，hardy， silver-gray leaves，drought-tolerant，good firewood，a very long-lived tree'])
iteration: 154 generation: def newfun(image): return image.score(['gum trees', 'eucalyptus trees', 'evergreen trees with smooth white bark', 'may be cultivated for pulp and timber'])
iteration: 155 generation: def newfun(image): return image.score(['leaves', 'red berries', 'fruit trees', 'flowering plants', 'a woody vine', 'evergreen conifers'])
iteration: 156 generation: def newfun(image): return image.score(['smooth bark greyish-brown with lichens，edible fruits having a flat stone，maple syrup comes from this tree'])
iteration: 157 generation: def newfun(image): return image.score(['holly-like leaves， red berries，we Evergreen trees， Winter Interest，grow as a shrub or tree，last Kun Try mixture'])
iteration: 158 generation: def newfun(image): return image.score(['acuminate leaves，thicket-forming，shrub，climbing，scattered trees，possibly mistletoe'])
iteration: 159 generation: def newfun(image): return image.score(['clusters of mistletoe', 'sparse organizational growth， consideration for xmas decor，aromatic leaves，supports other varieties，evergreen shrub or tree'])
iteration: 160 generation: def newfun(image): return image.score(['blue-green, waxy leaves，}| trigyna/trigrina leaves，may be yellowish', 'part of sage scrub', 'assuming a Tree form', 'evergreen，sometimes deciduous', 'drought tolerance'])
iteration: 161 generation: def newfun(image): return image.score(['rapid-growing trees，evergreen，highly decorative   foliage，grow in subtropical regions，can tolerate shade，cool-season flowers'])
iteration: 162 generation: def newfun(image): return image.score(['a hollow， twisted trunk，thorny branches，不common in the western United States，canlive to ages over a thousand years old， armored scale insects'])
iteration: 163 generation: def newfun(image): return image.score(['deep green color， glossy， leathery leaves， pointed tips， small white flowers， tree to 20 m tall'])
iteration: 164 generation: def newfun(image): return image.score(['Nevada', 'sagebrush', 'Joshua trees', 'mesquite', 'creosote bush', 'greasewood'])
iteration: 165 generation: def newfun(image): return image.score(['tall，stately trees，smooth olive bark，heavy branches，dark green leaves，pinkish-brown flowers'])
iteration: 166 generation: def newfun(image): return image.score(['a dense cluster of bright red berries at the ends of the branches'])
iteration: 167 generation: def newfun(image): return image.score(['olive trees，silvery leaves，small white flowers，gnarled trunks，mediterranean climate'])
iteration: 168 generation: def newfun(image): return image.score(['rounded tubercles on the trunk and branches， olive green bark， small leaves in clusters， white flowers with purple spots'])
iteration: 169 generation: def newfun(image): return image.score(['a large evergreen tree with a spire-like crown， white flowers with purple spots， green needles bundled in three， laurel-like foliage， sap droplets on the trunk'])
iteration: 170 generation: def newfun(image): return image.score(['prickly pears', 'Yucca', 'chollas', 'palo verdes', 'tunas or prickly pears', ' ocotillos or coachwhips'])
iteration: 171 generation: def newfun(image): return image.score(['a large evergreen tree with a flat crown， clusters of small white flowers，red berries on long stems，dented bark， alternate leaf arrangement'])
iteration: 172 generation: def newfun(image): return image.score(['broad green leaves，twisted black trunk，large， deciduous tree'])
iteration: 173 generation: def newfun(image): return image.score(['isa evergreen tree with a single stem and branches that spread out in all directions，orange or yellow autumn leaves，winged fruit，distinctive bark，broadleaf simple leaves'])
iteration: 174 generation: def newfun(image): return image.score(['elegant，beautiful， evergreen foliage， white flowers bunches，mainly planted for shelter-belts'])
iteration: 175 generation: def newfun(image): return image.score(['sagebrush', ' rabbitbrush', 'partial shade', 'leaves (may be a healthy forest)', 'evergreen leaves', 'olive-green leaves'])
iteration: 176 generation: def newfun(image): return image.score(['orms or shrubs， evergreen foliage， impenetrable hedges， Southern European，expansive，spreading， wiry branches'])
iteration: 177 generation: def newfun(image): return image.score(['leaves with serrated edges，multicolored leaves，profuse small white flowers，leaves clustered at ends of branches，found in woodlands，often planted along roadsides'])
iteration: 178 generation: def newfun(image): return image.score(['bery-like fruits', ' evergreen shrubs', ' clusters of small flowers'])
iteration: 179 generation: def newfun(image): return image.score(['red flowers，spiny leaves，thorny stems，upright growth habit，red berries，árbol module'])
iteration: 180 generation: def newfun(image): return image.score(['evergreen tree with Heavy branches，deeply furrowed bark，leaves in rosettes，cones globose，pink flowers in clusters'])
iteration: 181 generation: def newfun(image): return image.score(['a small tree or shrub from  Southwest  United States', 'smooth bark，white，pink，or red flowers，shiny green leaves， blue or white berries'])
iteration: 182 generation: def newfun(image): return image.score(['olive', 'olive tree', 'mediterranean', 'evergreen tree', 'gray-green leaves', 'long lifespan'])
iteration: 183 generation: def newfun(image): return image.score(['grayish-black or reddish-brown bark，found in cooler climates，a symbol of good luck，bright green leaves， develops a large , spreading canopy， flowers in shades of pink and red'])
iteration: 184 generation: def newfun(image): return image.score(['southern magnolia tree'])
iteration: 185 generation: def newfun(image): return image.score(['striking foliage，attractive clusters of red berries， simple leaves， variable growth habit， tiny white flowers， blue-green leaves'])
iteration: 186 generation: def newfun(image): return image.score(['Mountain Laurel', 'evergreen shrub', 'native to America', 'oval leaves', 'lavender or pink flowers'])
iteration: 187 generation: def newfun(image): return image.score(['Compound round leaves，shrub or small tree，dingy white，pinkish-white flowers produced in great abundance，antique dealers，Southern magnolia'])
iteration: 188 generation: def newfun(image): return image.score(['grayish-green leaves，drooping branches，dense，tall shrub，often spreading，dioecious'])
iteration: 189 generation: def newfun(image): return image.score(['tall，columnar trees，smooth gray bark，entire simple leaves，white flowers，eded fruit'])
iteration: 190 generation: def newfun(image): return image.score(['poplar，cottonwood， silver-gray leaves，and broad，buttressed trunks'])
iteration: 191 generation: def newfun(image): return image.score(['giant Aframomi tree', 'Asian doctor tree', 'Bodhi tree', 'Peepal tree', 'Sycamore tree'])
iteration: 192 generation: def newfun(image): return image.score(['needled evergreen trees，showy large pink or red flowers，known as USA cousins of holly'])
iteration: 193 generation: def newfun(image): return image.score(['yucca', 'barrel cactus', 'desert willow', 'mesquite', 'cholla', 'creosote bush'])
iteration: 194 generation: def newfun(image): return image.score(['dense foliage，resemble a large shrub，small white flowers in summer，Attract hummingbirds， Orange red berries in late summer and fall，edible raw or cooked'])
iteration: 195 generation: def newfun(image): return image.score(['short trunk，wide-spreading branches， showy white flowers，olive-like fruit'])
iteration: 196 generation: def newfun(image): return image.score(['Curved seedpods，beige colors，maple-like leaves，bush honeysuckle，S—shaped twigs，red stemmed shrub'])
iteration: 197 generation: def newfun(image): return image.score(['a densely branching，spiny tree with small，scaly leaves，yellow flowers，and red berries'])
iteration: 198 generation: def newfun(image): return image.score(['pinnately divided leaves，flowering clusters，shrubby habit'])
iteration: 199 generation: def newfun(image): return image.score(['a black or dark-brown evergreen tree with long leaves'])
