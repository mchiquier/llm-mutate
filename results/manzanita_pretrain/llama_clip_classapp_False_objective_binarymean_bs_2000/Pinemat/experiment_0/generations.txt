iteration: 0 generation: def newfun(image): return image.score(['rows of leaves', 'often colored red, white, or black', 'playing cards', 'typically made from wood or plastic', 'found in a kitchen', 'used for hitting a golf ball'])
iteration: 1 generation: def newfun(image): return image.score(['a castle or fortress', 'may be worn by both men and women', 'a number printed on a label', 'a plastic or metal bag attached to a handle', 'a jacket with many pockets and compartments', 'leaves arranged in a whorled or spiral arrangement'])
iteration: 2 generation: def newfun(image): return image.score(['plants with leaves whose margins are smooth or have shallow teeth', 'usually cylindrical or conical', 'a winding staircase or ramp', 'pointed or rounded ends', 'modelled on real world types like dogs', 'developed by scientists in labs'])
iteration: 3 generation: def newfun(image): return image.score(['rows of small bumps or spikes', 'Many consider it a pest', 'a line on a graph paper', 'shrub with green, pointed leaves', 'Chinese New Year parade', 'a plastic container with a screw top'])
iteration: 4 generation: def newfun(image): return image.score(['rows of spikes, with each spike containing a small metal ball', 'may have viral or bacterial components', 'reviewing or grading papers', 'soldiers or police officers wearing uniforms', 'a snake with a large, distinctive pattern', 'a person relaxing and reading a book'])
iteration: 5 generation: def newfun(image): return image.score(['a plant with red berries', 'animal hides or artificial fur', 'thin strings or cords', 'a pouch for storing coins', 'soldiers or police officers standing in a line', 'having many bright colors'])
iteration: 6 generation: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory'])
iteration: 7 generation: def newfun(image): return image.score(['sandy dunes ', 'a window on the side', 'wires or tubing running from it', 'a small, leaved plant with showy flowers', 'a ring or border around the edge', 'reflective glass or plastic'])
iteration: 8 generation: def newfun(image): return image.score(['a soldier wearing a green jacket and carrying a rifle', 'a grid of brightly colored stars on a dark background', 'covered in a fine layer of mist or dew', 'may have a small trail leading up to it', 'shiny metal handlebars', 'a set of parallel bars or pipes'])
iteration: 9 generation: def newfun(image): return image.score(['a single white rose', 'a bridge with two or more arches', 'a red heart symbol', 'a birdhouse with a round entrance hole', 'often depicted with a bow tie or ascot', 'has pipes that are often decorated with ivy or other plants'])
iteration: 10 generation: def newfun(image): return image.score(['grassy hillside', 'snow-covered peak', 'library with books', 'gold-colored details', 'violin on a stand', 'stairs leading up to a grand entrance'])
iteration: 11 generation: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves'])
iteration: 12 generation: def newfun(image): return image.score(['hair pulled back into a ponytail', 'brown tree bark', 'icy mint chocolate', 'red and green solar panels', 'used for essays', 'possibly found in ancient greek or roman civilizations'])
iteration: 13 generation: def newfun(image): return image.score(['dandelion green', 'yellow petals that are shed', 'many tiny seeds', 'fuzzy leaves', 'gas and diesel trucks', 'a light-colored wooden block'])
iteration: 14 generation: def newfun(image): return image.score(['Blue skin', 'abundant bear food', 'a stream of water', 'a tree with good shade', 'may have belt loops', 'rock climbing equipment'])
iteration: 15 generation: def newfun(image): return image.score(['wooden or plastic railings along the sides', 'very elderly person with a walking aid', 'a hill or other sloping landscape feature', 'a major award or trophy', 'iceskates or rollerblades', 'a ramp or other inclined surface'])
iteration: 16 generation: def newfun(image): return image.score(['pebbles or small rocks on the ground', 'unicellular organisms', 'metal looping nth end through a circular opening', 'long hair, either blonde or brunette', 'may have a handle or grip', 'thrown as a projectile'])
iteration: 17 generation: def newfun(image): return image.score(['spatulate leaves', 'weblike hairs on the leaves', 'bright orange flower clusters', 'feathery leaves', 'spiky, prickly fruit', 'struck repeatedly with a mallet'])
iteration: 18 generation: def newfun(image): return image.score(['plant leaves with veins', 'a window or opening', 'ivory colored teeth', 'bent at an angle', 'sand or other granular material', 'at least two tennis balls'])
iteration: 19 generation: def newfun(image): return image.score(['sand, rocks, and pebbles', ' waves', ' schools of small fish', 'coral reefs', 'minnows', 'prawns'])
iteration: 20 generation: def newfun(image): return image.score(['a dilapidated wooden shack in the forest', 'barnacles attached to rocks', 'lush, full vegetation in a tropical rainforest', 'boards nailed together', 'olive green and brown colors', 'hiking boots'])
iteration: 21 generation: def newfun(image): return image.score(['olive green', 'dense spines', 'part of an electric fence', 'cluster of white, pink, or red flowers', 'a dark stripe down the middle', ' found in new mexico'])
iteration: 22 generation: def newfun(image): return image.score(['dirt road winding through mountains', 'a log or branch', 'destroyed or abandoned buildings', 'monochromatic color scheme', 'cobblestone pavers', 'dew covered spider webs'])
iteration: 23 generation: def newfun(image): return image.score(['holes or pores along the length', 'grayish-white or pinkish-brown bark', 'brown or gray', 'stalks with clusters of tiny', 'usually deciduous', 'a nut also known for its medicinal properties'])
iteration: 24 generation: def newfun(image): return image.score(['brown and round with seeds', 'caterpillar crawling on a leaf', 'a garden hose', 'patches of colorful flowers', 'may have a bow tie or necktie', 'chessboard with pieces arranged in a pattern'])
iteration: 25 generation: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links'])
iteration: 26 generation: def newfun(image): return image.score(['sunflowers, zinnias, and other bright flowers', 'curved, pointed tips on shoes', 'lattice-like sides or back', 'large, decorative wreaths', 'flowing, long hair', 'a princess wearing a long, flowing gown'])
iteration: 27 generation: def newfun(image): return image.score(['Five petals', 'shorts or skirts with belt loops', 'collection of stamps', 'snowboarding equipment', 'Christmas ornaments', 'Dark green foliage with white flowers'])
iteration: 28 generation: def newfun(image): return image.score(['plant from the monocot family', 'oval fruit', 'leaf veins that are parallel', 'stem with a green garland or wreath', 'veins that converge at the base of the leaf', 'eaten as is or used as a component in various dishes'])
iteration: 29 generation: def newfun(image): return image.score(['plants with flowers that bloom for only one day', 'dark-colored, opaque rocks', 'green leaves with pointed tips', 'square or rectangular shape', 'bright colors, such as pink, blue, or yellow', 'a single, long antenna on the head'])
iteration: 30 generation: def newfun(image): return image.score(['Multicolored stripes', 'Multicolored, petaled flowers', 'hydrangea blossoms', 'ornate, carved designs', 'opaque, frosted, or stained glass', 'cleats or spikes on the bottom'])
iteration: 31 generation: def newfun(image): return image.score(['webbed bottom', 'vines climbing up the sides', 'freckles or spots on the skin', 'may have hooves or claws', 'andromeda bushes', 'columns for support'])
iteration: 32 generation: def newfun(image): return image.score(['a plant with red berries', 'animal hides or artificial fur', 'thin strings or cords', 'a pouch for storing coins', 'soldiers or police officers standing in a line', 'having many bright colors'])
iteration: 33 generation: def newfun(image): return image.score(['a tie or cravat', 'lais or rais', 'aluminum or plastic frame',      'grass or other plants', 'young pine tree', 'anvil'])
iteration: 34 generation: def newfun(image): return image.score(['feldspar minerals', 'may have concentric circles', 'holes in the ground', 'a magnet', 'made by firing clay', 'herbs or flowers in pots'])
iteration: 35 generation: def newfun(image): return image.score(['a pool of water', 'an area with a large amount of plant life', 'animals eating food', 'dew on spider webs', 'a bush with bright red or orange berries', ' trees leaning inward and tangling their branches together'])
iteration: 36 generation: def newfun(image): return image.score(['sorrel or geranium', 'logs or branches laid across a river', 'rope, chain, or cable', 'a small amount of water', 'views of the surrounding landscape', '(0, 0)'])
iteration: 37 generation: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface'])
iteration: 38 generation: def newfun(image): return image.score(['pointed tops', 'miniature shapes', 'curved or angled lines', 'a small pool of water', 'various patterns', 'a long wall with a window or doorway'])
iteration: 39 generation: def newfun(image): return image.score(['monochromatic image of sand', 'rows of potatoes', 'curved black surface', 'compact, spiky, evergreen shrub', 'various animals', 'minimalist composition'])
iteration: 40 generation: def newfun(image): return image.score(['shallow water', 'low-lying plants', 'rocks or cobblestones', 'moss or lichen', 'built for speed, not comfort', 'bent, curved, or twisted'])
iteration: 41 generation: def newfun(image): return image.score(['pointed tops on mountains or hills', 'typically covered in brightly colored round objects', 'a seasonal activity', 'rabbit ears', 'a frog with a long tongue', 'a fox with a bushy tail'])
iteration: 42 generation: def newfun(image): return image.score(['railroad tracks', 'a purple cone-shaped wildflower', 'metal fasteners', 'concentric circles or spirals', 'a clown or jester', 'can be played by two or four people'])
iteration: 43 generation: def newfun(image): return image.score(['red and white striped candy canes', 'small pink flowers', 'sand or pebbles', 'works on plants or small animals', 'black and white photograph', 'tall evergreen trees'])
iteration: 44 generation: def newfun(image): return image.score(['long legs', 'wires or cables connecting devices', 'raindrops on flowers or leaves', 'unripe fruit', 'colorful shapes and patterns', 'human hair styled into afro or braids'])
iteration: 45 generation: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian'])
iteration: 46 generation: def newfun(image): return image.score(['sunflowers', 'groundcovers', 'pampas grass', 'golden, globe-shaped flowers', 'grasses that turn a brilliant red or orange in fall', 'barren, rocky landscapes'])
iteration: 47 generation: def newfun(image): return image.score(['red rocks or soil', 'bright blue water', 'worn or eroded areas', 'trees with no leaves, branches, or bark', 'a식ate design', 'produced by millions of tiny coral exoskeletons'])
iteration: 48 generation: def newfun(image): return image.score(['an area where vehicles can park', 'a substance used to cover floors or surfaces', 'pollen or seeds carried by the wind', 'aprons or other cloth worn around the waist', 'a mound of dirt', 'serfless'])
iteration: 49 generation: def newfun(image): return image.score(['dew-covered spider webs', 'glistening droplets of dew on leaves', 'sculptural forms', 'strange pink plants', 'systems of veins', 'marshmallow puffs'])
iteration: 50 generation: def newfun(image): return image.score(['roses, carnations, lilies, or sunflowers', 'olive or mustard colored uniform', 'frankincense', 'typically metal and has holes', 'place where people may sleep', 'brown or tan colored rock'])
iteration: 51 generation: def newfun(image): return image.score(['a series of raised circular platforms', 'plants that have flowers', 'covered in thorns', 'a few gnarled branches', 'typically found by rivers', 'heart-shaped leaves'])
iteration: 52 generation: def newfun(image): return image.score(['thin, papery layers', 'a round or oval wall', 'ornamental plants with small', 'a small keyboard or buttons', 'red fruit', 'freestanding structure'])
iteration: 53 generation: def newfun(image): return image.score(['bushy trees', 'red and pink flowers', 'a bed of soil or gravel', 'prickly bark', 'brown or gray furrows', 'single-leafed branches'])
iteration: 54 generation: def newfun(image): return image.score(['leaves that are shaped like hands', 'fuzzy leaves or flowers', 'stacked circular layers of plant material', 'green seed pods that burst open', 'lacy texture', 'a tree with bare branches'])
iteration: 55 generation: def newfun(image): return image.score(['a grassland biome', 'a group of fawns', 'pollen or seeds carried by the wind', 'female with orange fur', 'a tiny plant surrounded by rocks', 'hanging from a tree'])
iteration: 56 generation: def newfun(image): return image.score(['angular lines', 'likes sunshine', 'foundations of pale stone', 'human footprints', 'brown or fawn coloring', 'low-growing evergreens'])
iteration: 57 generation: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines'])
iteration: 58 generation: def newfun(image): return image.score(['grassy hillside', 'snow-covered peak', 'library with books', 'gold-colored details', 'violin on a stand', 'stairs leading up to a grand entrance'])
iteration: 59 generation: def newfun(image): return image.score(['dense growth of evergreen trees', 'pyramidal or conical shape', 'chenille plant', 'rich, loamy soil', 'covered bridge', 'bentbranches'])
iteration: 60 generation: def newfun(image): return image.score(['hard outer shell', 'horseshoe-shaped fruit', 'typically contains seeds', 'straight edge used for cutting', 'used for digging and other yard work', 'a checkerboard pattern'])
iteration: 61 generation: def newfun(image): return image.score(['cylindrical containers', 'blue water', 'misty', 'algae covered rocks', 'rusty metal', 'petroglyphics'])
iteration: 62 generation: def newfun(image): return image.score(['animal tracks in the mud', 'footprints left in the sand', 'wavy hair', 'a cluster of red berries', 'apples or pears', 'dragonflies flying over a pond'])
iteration: 63 generation: def newfun(image): return image.score(['mainly green, but may have a bluish tint', 'pyramid shaped', 'trumpet-shaped flowers', 'area with no visible plants or animals', 'soil or dirt', 'fine, wispy clouds in a blue sky'])
iteration: 64 generation: def newfun(image): return image.score(['boards with engravings or paintings', 'rippling or wavy lines', 'nodes at the base of the leaves', 'store-bought, wrapped snacks', 'jade plants', 'animal tracks'])
iteration: 65 generation: def newfun(image): return image.score(['succulent-like leaves', 'icy-white surface', 'stripes', 'may have a pointed nose or snout', 'different shapes and sizes', 'soft petals or thin leaves'])
iteration: 66 generation: def newfun(image): return image.score(['a pool of water', 'an area with a large amount of plant life', 'animals eating food', 'dew on spider webs', 'a bush with bright red or orange berries', 'trees leaning inward and tangling their branches together'])
iteration: 67 generation: def newfun(image): return image.score(['plantable', 'mature showing stamens',  'gray-green leaves',  'fuzzy pink or red flowers',  'parallel veins',  'covering for a學校 entrance'])
iteration: 68 generation: def newfun(image): return image.score(['land with rolling hills', 'a variety of cacti', 'many small stones or pebbles', ' cumulus clouds', 'short, dry grass', 'orange-colored flowers'])
iteration: 69 generation: def newfun(image): return image.score(['veins on a leaf', 'heather plants with pink or purple flowers', 'low-growing, densely branched shrub', 'garden', 'damselflies', 'goldfish'])
iteration: 70 generation: def newfun(image): return image.score(['volcanic rock formations', 'pebbles', 'inflamed skin conditions', 'a harness with straps and buckles', 'hydrangea', 'ribbed fabric'])
iteration: 71 generation: def newfun(image): return image.score(['a metal grill or grating', 'decorative landscape stone', 'thin strips of wood', 'a coiled hose', 'models of atoms, molecules, or other organic compounds', 'a round or oval large stone or pebble'])
iteration: 72 generation: def newfun(image): return image.score(['veins on a leaf', 'heather plants with pink or purple flowers', 'low-growing, densely branched shrub', 'garden', 'damselflies', 'goldfish'])
iteration: 73 generation: def newfun(image): return image.score(['drooping branches with large, waxy leaves', 'naturally growing in the wild', 'flowers coming out of the ground', 'roots above ground', 'moss covering rocks and fallen logs', 'pinkish-purple flowers'])
iteration: 74 generation: def newfun(image): return image.score(['beautiful freshwater biomes', 'buttress roots', 'high water table', 'mineral deposits', 'ripples or waves', 'underwater vegetation'])
iteration: 75 generation: def newfun(image): return image.score(['hazelnut or almond tree', 'sage, thyme, or rosemary', 'African or Asian elephant', 'Red and green colors', ' lattice or trellis', 'Arabic music'])
iteration: 76 generation: def newfun(image): return image.score(['purple or white flowers', 'gray rock or soil', 'a hinge or joint that allows movement', 'pointed tip', 'long straight sections', 'cliffs'])
iteration: 77 generation: def newfun(image): return image.score(['a choppy body of water', 'grayish-brown leaves', 'white or light-colored flowers', 'may have a cliff or embankment', 'bends or curves in the path or road', 'a strongly-built dog with grayish-brown fur'])
iteration: 78 generation: def newfun(image): return image.score(['covered in pink or red flowers', 'sand or dirt beneath', 'found in deserts', 'stones or pebbles', 'grass or similar vegetation', 'otters or beavers'])
iteration: 79 generation: def newfun(image): return image.score(['dark-colored trees', 'rows of cordwood', 'plants with green, waxy leaves', 'a stream flowing through', 'rocks worn smooth by water', 'aspects of woodland folk art'])
iteration: 80 generation: def newfun(image): return image.score(['crisp romaine lettuce leaves', 'layered doilies', 'antique silverware in a velvet case', 'shiny black obsidian', 'wild herb in an Italian meadow', 'rustic bench'])
iteration: 81 generation: def newfun(image): return image.score(['brown or grayish-brown', 'usually covered with soil', ' CIMMYT, Mexico', 'seedbed', 'stems may be branched or unbranched', ' nodes may be present or absent'])
iteration: 82 generation: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links'])
iteration: 83 generation: def newfun(image): return image.score(['rosy pink blooms', 'pointy leaves', 'dark green leaves with veins', 'a watering can or other gardening tool', 'rough bark on the side', 'log cabin or other rustic structure'])
iteration: 84 generation: def newfun(image): return image.score(['curved and twisted vines', 'sand dollars', 'middle aged woman with a perm', 'a blue or green glass bottle', 'a pink salmon fillet', 'eddying whirlpools'])
iteration: 85 generation: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover'])
iteration: 86 generation: def newfun(image): return image.score(['crisp romaine lettuce leaves', 'layered doilies', 'antique silverware in a velvet case', 'shiny black obsidian', 'wild herb in an Italian meadow', 'rustic bench'])
iteration: 87 generation: def newfun(image): return image.score(['occasional standing water', 'purplish-red flowers', 'brownish-gray ground', 'species of tree with groups of 3-5 needles', 'low-growing shrub', 'loose, gravelly soil'])
iteration: 88 generation: def newfun(image): return image.score(['grayish-green, pointed leaves', 'spiky stems', 'white, showy flowers', 'masses of bright green foliage', 'low-maintenance', 'may be used as an ornamental'])
iteration: 89 generation: def newfun(image): return image.score(['mint', 'basil', 'marigold', 'chive', 'lavender', 'schefflera'])
iteration: 90 generation: def newfun(image): return image.score(['snowfields', 'evergreen leaves', 'long hair', 'kneeling or prostrate posture', 'flowers around a vase', 'branches extending from a central stem'])
iteration: 91 generation: def newfun(image): return image.score(['flowering mint', 'rose bushes', 'clinging vines', 'thrives in shade', 'tall trees with leaves that drop', 'a round lantern'])
iteration: 92 generation: def newfun(image): return image.score(['may obtain livelihood through frozen fish', 'may symbolize despair or hopelessness', 'rows of large stones', 'reindeer moss', 'rock slides', 'stone, gravel, or shingle beach'])
iteration: 93 generation: def newfun(image): return image.score(['candles', 'hedges', 'trimmed bushes', 'garden gnomes', 'fences', 'brightly colored flowers'])
iteration: 94 generation: def newfun(image): return image.score(['spires reaching towards the sky', 'stones for sharpening knives', 'knots on a rope', 'topiary trees or bushes', 'openings that are circular or arched', 'patterns that repeat in a specific way'])
iteration: 95 generation: def newfun(image): return image.score(['white, powdery patches', 'greenish-brown stems', 'a dense, rounded crown', 'may be covered in lichen', 'found in temperate regions', 'associated with mistletoe'])
iteration: 96 generation: def newfun(image): return image.score(['plants with dark green leaves', 'bent or winding courses or paths', 'fall foliage', 'skeins of geese flying overhead', 'vegetables in raised beds', 'sliced through the middle'])
iteration: 97 generation: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars'])
iteration: 98 generation: def newfun(image): return image.score(['groundcovers', 'low growing shrubs', 'hardy plants', 'usually a park or other outdoor area with landscaping', 'loads of leaves', 'cedar shake shingles'])
iteration: 99 generation: def newfun(image): return image.score(['found in california', 'rows of grapevines', 'long red bell peppers', 'shells on the beach', 'granny smith apples', 'azaleas'])
iteration: 100 generation: def newfun(image): return image.score(['twisting vines', 'lobed leaves', 'summer blooming flowers', 'clustered flowerheads', 'ornamental ponds', 'short-lived plants'])
iteration: 101 generation: def newfun(image): return image.score(['candles', 'hedges', 'trimmed bushes', 'garden gnomes', 'fences', 'brightly colored flowers'])
iteration: 102 generation: def newfun(image): return image.score(['natural landscapes with large boulders or rock formations', 'petals with five distinct points', 'shrubs with showy flowers', 'beautiful places to visit', 'scenery dominated by large rocky cliffs', 'ivory white petals'])
iteration: 103 generation: def newfun(image): return image.score(['puffy white clouds', 'low to the ground plants with waxy leaves', 'sticks of driftwood', 'pink or orange or yellow flowers', 'heavy mist', 'stones or rocks'])
iteration: 104 generation: def newfun(image): return image.score(['dew-covered spider webs', 'glistening droplets of dew on leaves', 'sculptural forms', 'strange pink plants', 'systems of veins', 'marshmallow puffs'])
iteration: 105 generation: def newfun(image): return image.score(['evergreen tree', 'brown or tan bark', 'glossy, smooth leaves', 'cones', 'sweet alyssum white flowers', 'cluster flies'])
iteration: 106 generation: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian'])
iteration: 107 generation: def newfun(image): return image.score(['sand covered with pebbles or small rocks', 'sparse greenery', 'stacked layers of sedimentary rock', 'raisedfx soil', 'limestoneFormations', 'worn-looking surfaces'])
iteration: 108 generation: def newfun(image): return image.score(['wavy hair', 'a granite mountain', 'a circular pond', 'a piece of fabric with a paisley print', 'gray, weathered rocks', 'stalks of barley'])
iteration: 109 generation: def newfun(image): return image.score(['curved and twisted vines', 'sand dollars', 'middle aged woman with a perm', 'a blue or green glass bottle', 'a pink salmon fillet', 'eddying whirlpools'])
iteration: 110 generation: def newfun(image): return image.score(['saguaro cactus', 'prickly pear cactus', 'cholla cactus', 'ocotillo', 'creosote bush', 'caliche soil'])
iteration: 111 generation: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses'])
iteration: 112 generation: def newfun(image): return image.score(['a meadow', 'grasses and wildflowers', 'tan or golden grasses', 'a single tree in the center', 'shadows of people or objects', 'mist rising from the ground'])
iteration: 113 generation: def newfun(image): return image.score(['dead animals', 'moss hanging from tree branches', 'eroded gullies', 'a rocky shoreline', 'tentacles', 'brown or gray tree trunks'])
iteration: 114 generation: def newfun(image): return image.score(['glossy, smooth leaves', 'clustered flowerheads', 'twisting vines', 'lobed leaves', 'shortlived plants', 'ornamental ponds'])
iteration: 115 generation: def newfun(image): return image.score(['green and red berries', 'low shrubs', 'evergreen trees', 'waxy green leaves', 'clustered red berries', 'a perennial shrub'])
iteration: 116 generation: def newfun(image): return image.score(['tracks made by tyres', 'moss or lichen covering rocks', 'dripping water', 'lichen covered rocks', 'moss on rocks and trees', 'snow on mountain peaks'])
iteration: 117 generation: def newfun(image): return image.score(['standing on a sunny rocky outcrop', 'stones or rocks in the foreground', 'light-colored foliage', 'sprouting red flowers', 'upright dbritish plant', 'terminal clusters of lavender flowers'])
iteration: 118 generation: def newfun(image): return image.score(['fields of wildflowers', 'wildflowers swaying in the wind', 'perfume or potpourri', 'periwinkle flowers', 'grapevines', 'cow manure'])
iteration: 119 generation: def newfun(image): return image.score(['has pores', 'decorative rocks', 'saplings or seedlings', 'jagged points', 'drip irrigation', 'fuzzy leaves'])
iteration: 120 generation: def newfun(image): return image.score(['splintered or rotting wood', 'speckled red and white paint', 'cheese', 'sand that may feel damp or wet', 'clams or other shellfish', 'watercress'])
iteration: 121 generation: def newfun(image): return image.score(['peonies', 'strawberries', 'raspberries', 'geraniums', 'asparagus', 'sage'])
iteration: 122 generation: def newfun(image): return image.score(['Indian paintbrush', 'sword fern', 'mullein', 'mint', 'ground ivy', 'dandelion'])
iteration: 123 generation: def newfun(image): return image.score(['stripes or other patterns', 'planters made of plastic or clay', 'ropes or chains', 'flowers with long, thin petals', 'lattice or trellis work', 'raisins or other dried fruit'])
iteration: 124 generation: def newfun(image): return image.score(['a road or path', 'tall evergreen trees', 'miniature', 'ring mold', 'moss and lichen', 'lichen covered rocks'])
iteration: 125 generation: def newfun(image): return image.score(['water lilies', 'sunflowers', 'daisies', 'dandelions', 'black-eyed susans', 'pansies'])
iteration: 126 generation: def newfun(image): return image.score(['dandelions', 'mallows', 'violets', 'clover', 'daisies', 'pansies'])
iteration: 127 generation: def newfun(image): return image.score(['thin, pointed leaves', 'compound leaves', 'reniform leaves', 'Yucca', 'succulents', 'leaves with red or purple veins'])
iteration: 128 generation: def newfun(image): return image.score(['dahlias', 'ruscus', 'forget-me-nots', 'creeping jenny', 'daffodils', 'forsythia'])
iteration: 129 generation: def newfun(image): return image.score(['jade plant', 'usually with sharp spines', 'a type of succulent', 'shaped like a tiny, greenegoog', 'pointed, upward curve', 'growing from rocks'])
iteration: 130 generation: def newfun(image): return image.score(['cedar shake shingles', 'loads of leaves', 'hardy plants', 'usually a park or other outdoor area with landscaping', 'groundcovers', 'low growing shrubs'])
iteration: 131 generation: def newfun(image): return image.score(['wisteria', 'oriental lilies', 'variegated hostas', 'orange daylilies', 'peonies', 'boxwood shrubs'])
iteration: 132 generation: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks'])
iteration: 133 generation: def newfun(image): return image.score(['hydrangeas', 'clematis', 'azaleas', 'forsythia', 'fountain grass', 'coral bells'])
iteration: 134 generation: def newfun(image): return image.score(['aspen trees', 'lupine', 'daisies', 'dahlias', ' currants or gooseberries', ' splitting wood'])
iteration: 135 generation: def newfun(image): return image.score(['has thorns or spines', ' pricklypear', 'stunted desert shrub', 'ocotillo', 'desert marigold', 'tolerant of drought'])
iteration: 136 generation: def newfun(image): return image.score(['a fence or barrier', 'topiary', 'spiky plant with small flowers', 'a herb garden', 'a path or trail', 'a delicate, vining plant'])
iteration: 137 generation: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy'])
iteration: 138 generation: def newfun(image): return image.score(['grass', 'ground ivy', 'pachysandra', 'periwinkle', 'English ivy', 'bunches of purple flowers'])
iteration: 139 generation: def newfun(image): return image.score(['fast-growing climber with showy blooms', 'bleeding hearts', 'hostas', 'coral-colored bells', 'hellebores', 'sword ferns'])
iteration: 140 generation: def newfun(image): return image.score(['violet', 'lavender', 'pansies', 'petunias', 'dusty miller', 'queen anne s lace'])
iteration: 141 generation: def newfun(image): return image.score(['rows of vines Planted in trenches', 'mimosa trees', 'shrubby, perennial herbs', 'orange Poppies', 'inosculate flowers', 'sword-shaped leaves'])
iteration: 142 generation: def newfun(image): return image.score(['superstar flowers', 'petunias', 'sweet potato vines', ' geraniums', 'moss rose', 'portulaca'])
iteration: 143 generation: def newfun(image): return image.score(['a tree with sparse leaves or branches', 'moss growing on rocks', 'lichen growing on rocks', 'a river flowing through a rocky gorge', 'a large rock or boulder in the water', 'waves crashing against the shore'])
iteration: 144 generation: def newfun(image): return image.score(['maple leaves', 'elderberry', 'trillium', 'partridgeberry', 'purple flowering raspberry', 'quaking grass'])
iteration: 145 generation: def newfun(image): return image.score(['a variegated shrub', 'boxwood', 'roses', 'pachysandra', 'snowberry', 'ivy'])
iteration: 146 generation: def newfun(image): return image.score(['ivy', 'bryophytes', 'pebbles', 'grass', 'moss', 'patches of snow'])
iteration: 147 generation: def newfun(image): return image.score(['ring of mushrooms', 'mushrooms clustered on a fallen log', 'lichen', 'moss', 'tall trees', 'lichen covered rock'])
iteration: 148 generation: def newfun(image): return image.score(['bunches of green grapes', 'mixed berries including blueberries, strawberries, blackberries', 'plum', 'red apple', 'orange', 'pears'])
iteration: 149 generation: def newfun(image): return image.score(['hillsides with scattered trees', 'dew-covered spider webs', 'lupine flowers', 'sheep grazing', 'sandstone formations', 'red, pink, or peach flowers'])
iteration: 150 generation: def newfun(image): return image.score(['mat-forming perennial', 'creeping thyme', 'lilyturf', 'sweet woodruff', 'cut-leaved geranium', 'frequently found in lawns'])
iteration: 151 generation: def newfun(image): return image.score(['moss and ferns', 'dwarf tree', 'berries', 'lichen on rocks and trees', 'logs and branches breaking down', 'sage brush'])
iteration: 152 generation: def newfun(image): return image.score(['sitting amongst yellow flowers', 'ivy or other creeping plants', 'step pyramids', 'a small sitting area', 'menhir', 'rows of windows'])
iteration: 153 generation: def newfun(image): return image.score(['chartreuse leaves', 'white seedheads', 'bluish leaves', 'dense', 'furry leaves', 'mesclun'])
iteration: 154 generation: def newfun(image): return image.score(['green leaves that are hairy on the underside', 'white or yellow blooms', 'hedges or topiary', 'dusty miller', 'lambs ear', 'low growing shrubs'])
iteration: 155 generation: def newfun(image): return image.score(['azaleas', 'rhododendrons', 'peat moss', 'dwarf shrubs', 'tall trees', 'shrubs with showy flowers'])
iteration: 156 generation: def newfun(image): return image.score(['a view from a high place', 'jade plants', 'gray or white buildings', 'views of water with trees', 'stone structures', 'a curved line or road'])
iteration: 157 generation: def newfun(image): return image.score(['lupines', 'hollyhocks', 'columbines', 'peonies', 'bleeding hearts', 'lily of the valley'])
iteration: 158 generation: def newfun(image): return image.score(['very low-growing, spreading shrubs', 'sydney golden wattle', 'dwarf Mondo grass', 'azaleas', 'rhododendrons', ' blue-green needles'])
iteration: 159 generation: def newfun(image): return image.score(['holly', 'asters', 'thistles', 'violets', 'gentians', 'orpine or sedum'])
iteration: 160 generation: def newfun(image): return image.score(['shrubs with shiny green leaves', 'rabbits', 'goldfinches', 'blue flowers', 'downy mildew disease', 'variegated or mottled leaves'])
iteration: 161 generation: def newfun(image): return image.score(['landscape with hills in the distance', 'water lilies', 'sand or small rocks', 'a variety of ground covers', 'bushes with berries', 'ez2me spellings'])
iteration: 162 generation: def newfun(image): return image.score(['towering trees', 'moss hanging from branches', 'a dense thicket', 'purple-colored berries', 'blocks covered in moss', 'leafy branches'])
iteration: 163 generation: def newfun(image): return image.score(['stone structures', 'ivy covering a wall', 'brick or concrete', 'moss and lichen', 'stone or gravel paths', ' Hedera helix'])
iteration: 164 generation: def newfun(image): return image.score(['big pink or purple flowers', 'lichen', 'porous, rough surfaces', 'cliffs by the ocean', 'dense wildflowers', 'bald clients'])
iteration: 165 generation: def newfun(image): return image.score(['mounded or rounded forms', 'spiky plants with round yellow flowers', 'spiky plants with round purple flowers', 'spiky plants with round blue flowers', 'low-lying, spreading or creeping plants', 'plants with round green leaves'])
iteration: 166 generation: def newfun(image): return image.score(['reindeer lichen', 'cobbles', 'streams with slow-moving water', 'waxy red or pink flowers', 'Ponderosa or Jeffrey pine trees', 'rocks arranged in circles'])
iteration: 167 generation: def newfun(image): return image.score(['minerals containing iron', 'terminal clusters of bright red fruit', 'gray or tan rocks', 'silver or gray leaves', 'dark green leaves', 'regal facial expressions'])
iteration: 168 generation: def newfun(image): return image.score(['bell-shaped flowers', 'hazelnut', 'orange begonias', 'involucres that are spherical or egg-shaped', 'hellebores', 'greater stitchwort'])
iteration: 169 generation: def newfun(image): return image.score(['an annual plant with showy flowers', 'reddish stemmed shrubs', 'tough, fibrous stems', 'hairy or downy stems', 'screen-like leaves', 'purple, lavender, or pink flowers'])
iteration: 170 generation: def newfun(image): return image.score(['twinflowers', 'arrow-shaped leaves', 'dwarf shrubs', 'daisy-like flowers', 'groundcover', 'pink flowers'])
iteration: 171 generation: def newfun(image): return image.score(['may have small fruits or berries', 'smooth-leaved shrubs', 'sun-bleached branches', 'miniature shrubs', 'thin water flowing', 'tall, pointed grass'])
iteration: 172 generation: def newfun(image): return image.score([' ivy', 'roses', 'lily of the valley', 'pachysandra', 'boxwood', 'forest ferns'])
iteration: 173 generation: def newfun(image): return image.score(['whitish, granular seeds', 'azaleas or rhododendrons', 'reddish or pinkish branches or stems', 'mountains or hills', 'eventually produces small, inedible fruit', 'communication between devices'])
iteration: 174 generation: def newfun(image): return image.score(['reddish-purple or pink flowers', 'grayish-green leaves', 'dense growth habit', 'waxy flowers that last for a long time', 'a shrub used for landscaping', 'blooms in late summer'])
iteration: 175 generation: def newfun(image): return image.score(['shiny leaves', 'bedding plants', 'geraniums', 'potted geraniums', 'dahlias', 'pachysandra'])
iteration: 176 generation: def newfun(image): return image.score(['bladder Campion', 'red clover', 'white wild indigo', 'upright stems covered in thorns', 'harebell', 'ground ivy'])
iteration: 177 generation: def newfun(image): return image.score(['ivy', 'climbing ivy', 'ivy covering a stone wall', 'ivy on a wooden fence', 'ivy and moss', 'creeping fig vine'])
iteration: 178 generation: def newfun(image): return image.score(['dwarf shrubs', 'leaves covered in white, mealy insects', 'sage brush', 'spreading branches that take root', 'woolly leaves', 'threeseed mercury'])
iteration: 179 generation: def newfun(image): return image.score(['shrubs having small, pale flowers', 'rocky ground', 'twisted roots', 'lichen', 'dwarf trees', 'very small rocks or gravel'])
iteration: 180 generation: def newfun(image): return image.score(['a dirt road or path', 'grass with seed heads', 'small evergreen shrub', 'beach towels hung on a clothesline', 'bright blue flowers', 'white or light-colored flowers'])
iteration: 181 generation: def newfun(image): return image.score(['irregular spots', 'grass-like plants', 'ribbon-like leaves', 'feathery foliage', 'grouped fruits', 'stone containers'])
iteration: 182 generation: def newfun(image): return image.score(['crabgrass', 'dandelions', 'sorrel', 'chickweed', 'pigweed', 'prostrate knotweed'])
iteration: 183 generation: def newfun(image): return image.score(['blue-colored scrubby plants', 'limestone pavement', 'wavy edges', 'limestone blocks', 'scant vegetation', 'mudflats'])
iteration: 184 generation: def newfun(image): return image.score(['a strawberry blossom', 'alpine flowers', 'lupine', 'bluebells', 'cyclamen', 'heather'])
iteration: 185 generation: def newfun(image): return image.score(['juvenile oak trees', 'saplings with leaves', 'grasses with seedheads', 'bronze-colored leaves', 'oak leaves on the ground', 'moss growing on tree trunks'])
iteration: 186 generation: def newfun(image): return image.score(['rapidly flowing streams', 'pitted, weathered limestone', 'fast-growing annuals', 'a stipule on each leaf', 'bright blue or green', 'occuring naturally in the mountains'])
iteration: 187 generation: def newfun(image): return image.score(['found in tropical or subtropical regions', 'succulent plants', 'waxy leaves', 'jade plants', 'snake plants', 'pothos plants'])
iteration: 188 generation: def newfun(image): return image.score([' moss hanging from trees', 'green moss covering a bank', 'moss growing on rocks', 'logs or branches submerged in a stream', 'moss growing on a fallen tree', 'lichen covered rocks'])
iteration: 189 generation: def newfun(image): return image.score(['tall grass', 'flowers with five petals', 'plants with five-petaled flowers', 'plants with six-petaled flowers', 'plants with seven-petaled flowers', 'flowers with three petals'])
iteration: 190 generation: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers'])
iteration: 191 generation: def newfun(image): return image.score(['a potted succulent', 'a collection of succulent plants', 'stones', 'gravel', 'a raised bed', 'a cactus'])
iteration: 192 generation: def newfun(image): return image.score(['evergreen shrub', 'moss on rocks and trees', 'holly bushes', 'thistle', 'tones of green', 'some kind of berry'])
iteration: 193 generation: def newfun(image): return image.score(['sunlit mist', 'granite rock', 'lichen or moss growing on rocks', 'a small waterfall', 'a mountain lake', 'a trail leading off into the distance'])
iteration: 194 generation: def newfun(image): return image.score(['lupines', 'Indian paintbrush', 'garden phlox', 'bee balm', 'Black-eyed Susan', 'chokecherry'])
iteration: 195 generation: def newfun(image): return image.score(['low-growing shrub', 'buckwheat', 'binding twine', 'harebell', 'wild licorice', 'sheep sorrel'])
iteration: 196 generation: def newfun(image): return image.score(['a cluster of evergreen trees', 'sumac', 'poison oak', 'poison ivy', 'ice plants', 'sea sprite'])
iteration: 197 generation: def newfun(image): return image.score(['dahlias', 'roses', 'hydrangeas', 'lilac bushes', 'ornamental kale', 'violas'])
iteration: 198 generation: def newfun(image): return image.score(['hellebores', 'snowdrops', 'daffodils', 'tulips', 'hyacinths', 'crocuses'])
iteration: 199 generation: def newfun(image): return image.score(['green leaves that are hairy on the underside', 'white or yellow blooms', 'hedges or topiary', 'dusty miller', 'lambs ear', 'low growing shrubs'])
