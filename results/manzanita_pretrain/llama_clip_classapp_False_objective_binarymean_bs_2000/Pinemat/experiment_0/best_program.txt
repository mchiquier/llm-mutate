iteration:  0 best program: def newfun(image): return image.score(['vegetation growing on the cliff face', 'often brightly colored or patterned', 'a garment worn by men, women, or children', 'black tear-like streaks on the face', 'a long handle for easy stirring and flipping of food', 'a lid to keep garbage from spilling out'])  
iteration:  1 best program: def newfun(image): return image.score(['vegetation growing on the cliff face', 'often brightly colored or patterned', 'a garment worn by men, women, or children', 'black tear-like streaks on the face', 'a long handle for easy stirring and flipping of food', 'a lid to keep garbage from spilling out'])  
iteration:  2 best program: def newfun(image): return image.score(['vegetation growing on the cliff face', 'often brightly colored or patterned', 'a garment worn by men, women, or children', 'black tear-like streaks on the face', 'a long handle for easy stirring and flipping of food', 'a lid to keep garbage from spilling out'])  
iteration:  3 best program: def newfun(image): return image.score(['vegetation growing on the cliff face', 'often brightly colored or patterned', 'a garment worn by men, women, or children', 'black tear-like streaks on the face', 'a long handle for easy stirring and flipping of food', 'a lid to keep garbage from spilling out'])  
iteration:  4 best program: def newfun(image): return image.score(['rows of small bumps or spikes', 'Many consider it a pest', 'a line on a graph paper', 'shrub with green, pointed leaves', 'Chinese New Year parade', 'a plastic container with a screw top']) 
iteration:  5 best program: def newfun(image): return image.score(['rows of small bumps or spikes', 'Many consider it a pest', 'a line on a graph paper', 'shrub with green, pointed leaves', 'Chinese New Year parade', 'a plastic container with a screw top']) 
iteration:  6 best program: def newfun(image): return image.score(['rows of small bumps or spikes', 'Many consider it a pest', 'a line on a graph paper', 'shrub with green, pointed leaves', 'Chinese New Year parade', 'a plastic container with a screw top']) 
iteration:  7 best program: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory']) 
iteration:  8 best program: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory']) 
iteration:  9 best program: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory']) 
iteration:  10 best program: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory']) 
iteration:  11 best program: def newfun(image): return image.score(['a soft, thick brim that can be folded up', 'a section of a garden with bushes, flowers, or other plants arranged for appearance or farming', 'a tool for cutting things', 'ocean waves', 'a crack or crevice', 'can be made sweet or savory']) 
iteration:  12 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  13 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  14 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  15 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  16 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  17 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  18 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  19 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  20 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  21 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  22 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  23 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  24 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  25 best program: def newfun(image): return image.score(['hooks at the ends of the tines', 'a straight shaft with a sharp point at the end', 'bay leaves', 'red fruit clusters', 'leaves with palmate veins', 'oak leaves']) 
iteration:  26 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  27 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  28 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  29 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  30 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  31 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  32 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  33 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  34 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  35 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  36 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  37 best program: def newfun(image): return image.score(['red berries', 'Two types of leaved plants', 'flowers that are also edible', 'a sword with a curved blade', 'brown fur', 'a chain with interlocking links']) 
iteration:  38 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  39 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  40 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  41 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  42 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  43 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  44 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  45 best program: def newfun(image): return image.score(['many pale pink or white flowers that might have fallen off a tree', 'may have patches of snow and ice', 'lush grass', 'low to the ground', 'square and rectangular windows', 'flowers and plants covering most of the surface']) 
iteration:  46 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  47 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  48 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  49 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  50 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  51 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  52 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  53 best program: def newfun(image): return image.score(['structure draped in vines or fabric', 'dozens of tiny, white flowers', 'strawberries or raspberries', 'stamin and pistils', 'a watering can or hose', ' És una collita Riemannian']) 
iteration:  54 best program: def newfun(image): return image.score(['bushy trees', 'red and pink flowers', 'a bed of soil or gravel', 'prickly bark', 'brown or gray furrows', 'single-leafed branches']) 
iteration:  55 best program: def newfun(image): return image.score(['bushy trees', 'red and pink flowers', 'a bed of soil or gravel', 'prickly bark', 'brown or gray furrows', 'single-leafed branches']) 
iteration:  56 best program: def newfun(image): return image.score(['bushy trees', 'red and pink flowers', 'a bed of soil or gravel', 'prickly bark', 'brown or gray furrows', 'single-leafed branches']) 
iteration:  57 best program: def newfun(image): return image.score(['bushy trees', 'red and pink flowers', 'a bed of soil or gravel', 'prickly bark', 'brown or gray furrows', 'single-leafed branches']) 
iteration:  58 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  59 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  60 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  61 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  62 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  63 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  64 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  65 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  66 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  67 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  68 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  69 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  70 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  71 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  72 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  73 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  74 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  75 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  76 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  77 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  78 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  79 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  80 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  81 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  82 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  83 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  84 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  85 best program: def newfun(image): return image.score(['covered in moss or lichen', 'rhododendron bushes', 'often used as landscape plants', 'a small bird or animal perched on a branch', 'dwarf varieties', 'quick-growing vines']) 
iteration:  86 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  87 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  88 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  89 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  90 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  91 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  92 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  93 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  94 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  95 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  96 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  97 best program: def newfun(image): return image.score(['smooth round fruits', 'mistletoe', 'a legal document', 'moss and lichen on the stones', 'may have vines or other climbing plants', 'low growing ground cover']) 
iteration:  98 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  99 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  100 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  101 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  102 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  103 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  104 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  105 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  106 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  107 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  108 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  109 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  110 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  111 best program: def newfun(image): return image.score(['pebbly--sand beach', 'dwarf shrubs or plants', 'grassy slopes', 'coastal dune vegetation', 'gravel or shingle', 'sand dollars']) 
iteration:  112 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  113 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  114 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  115 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  116 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  117 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  118 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  119 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  120 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  121 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  122 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  123 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  124 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  125 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  126 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  127 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  128 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  129 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  130 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  131 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  132 best program: def newfun(image): return image.score(['low-maintenance ground cover', 'pink dogwood', 'irises', 'long green beans', 'snowball hydrangea', 'moss roses']) 
iteration:  133 best program: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks']) 
iteration:  134 best program: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks']) 
iteration:  135 best program: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks']) 
iteration:  136 best program: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks']) 
iteration:  137 best program: def newfun(image): return image.score(['sage-covered hills', 'olive trees', 'drystone walls', 'upright, branching decurrent herbs', 'cistus or rockroses', 'hollyhocks']) 
iteration:  138 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  139 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  140 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  141 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  142 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  143 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  144 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  145 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  146 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  147 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  148 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  149 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  150 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  151 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  152 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  153 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  154 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  155 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  156 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  157 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  158 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  159 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  160 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  161 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  162 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  163 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  164 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  165 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  166 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  167 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  168 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  169 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  170 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  171 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  172 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  173 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  174 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  175 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  176 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  177 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  178 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  179 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  180 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  181 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  182 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  183 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  184 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  185 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  186 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  187 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  188 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  189 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  190 best program: def newfun(image): return image.score(['purple leaved plants', 'common garden plants', 'violas', 'fern leaves', 'pansies', 'ground ivy']) 
iteration:  191 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  192 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  193 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  194 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  195 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  196 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  197 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  198 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
iteration:  199 best program: def newfun(image): return image.score(['flowering plants with round red flowers', 'plants with round orange flowers', 'plants with round yellow flowers', 'swaying plants', 'olive-green plants', 'plants with five-petaled flowers']) 
