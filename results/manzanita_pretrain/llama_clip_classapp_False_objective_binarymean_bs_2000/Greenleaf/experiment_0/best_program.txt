iteration:  0 best program: def newfun(image): return image.score(['dark green leaves', 'often located in remote, rural areas', 'a boom for lifting vehicles', 'green coloration', 'a wide mouth', 'long, curved dorsal fin'])  
iteration:  1 best program: def newfun(image): return image.score(['can have pouches in which food is placed', 'small, cream-colored flowers', 'a flat front', 'a  bundle of notes tied up with a rubber band', 'may have a lead weights', 'a rounded knob in the center']) 
iteration:  2 best program: def newfun(image): return image.score(['can have pouches in which food is placed', 'small, cream-colored flowers', 'a flat front', 'a  bundle of notes tied up with a rubber band', 'may have a lead weights', 'a rounded knob in the center']) 
iteration:  3 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  4 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  5 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  6 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  7 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  8 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  9 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  10 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  11 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  12 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  13 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  14 best program: def newfun(image): return image.score(['white, yellow, pink, or red flowers', 'leafy green foliage', 'a giant sequoia', 'brown, grey, or black fur', 'can grow in a variety of shapes and sizes', 'usually found in wet, swampy areas']) 
iteration:  15 best program: def newfun(image): return image.score(['called moors or heaths', 'erics', 'low-growing shrubs', 'may have small purple, pink, or white flowers', 'cover large areas of land', 'found in acidic, nutrient-poor soil']) 
iteration:  16 best program: def newfun(image): return image.score(['called moors or heaths', 'erics', 'low-growing shrubs', 'may have small purple, pink, or white flowers', 'cover large areas of land', 'found in acidic, nutrient-poor soil']) 
iteration:  17 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  18 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  19 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  20 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  21 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  22 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  23 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  24 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  25 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  26 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  27 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  28 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  29 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  30 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  31 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  32 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  33 best program: def newfun(image): return image.score(['a reddish-brown tree with a large trunk', 'a typically small tree', 'linen-like flower petals', 'nuts arranged in an upright spiral', 'variegated leaves', 'grows in clusters']) 
iteration:  34 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  35 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  36 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  37 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  38 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  39 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  40 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  41 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  42 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  43 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  44 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  45 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  46 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  47 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  48 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  49 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  50 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  51 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  52 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  53 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  54 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  55 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  56 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  57 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  58 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  59 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  60 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  61 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  62 best program: def newfun(image): return image.score(['bright pink, purple, or red flowers', 'vines or woody stems', 'a climbing plant', 'can grow up other plants or structures', 'has a pleasant fragrance', 'blooms in late winter or early spring']) 
iteration:  63 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  64 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  65 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  66 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  67 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  68 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  69 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  70 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  71 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  72 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  73 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  74 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  75 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  76 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  77 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  78 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  79 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  80 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  81 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  82 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  83 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  84 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  85 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  86 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  87 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  88 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  89 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  90 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  91 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  92 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  93 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  94 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  95 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  96 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  97 best program: def newfun(image): return image.score(['waxy leaves', 'grows on rocks or trees', 'bell-shaped flowers', 'white or light-colored berries', 'glossy, black berries', 'often grows as a vine']) 
iteration:  98 best program: def newfun(image): return image.score(['powder puff tree', 'saucer magnolia', 'deciduous shrub or small tree', 'pink, deciduous flowers', 'smooth or waxy leaves', 'attracts butterflies and hummingbirds']) 
iteration:  99 best program: def newfun(image): return image.score(['powder puff tree', 'saucer magnolia', 'deciduous shrub or small tree', 'pink, deciduous flowers', 'smooth or waxy leaves', 'attracts butterflies and hummingbirds']) 
iteration:  100 best program: def newfun(image): return image.score(['powder puff tree', 'saucer magnolia', 'deciduous shrub or small tree', 'pink, deciduous flowers', 'smooth or waxy leaves', 'attracts butterflies and hummingbirds']) 
iteration:  101 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  102 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  103 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  104 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  105 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  106 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  107 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  108 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  109 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  110 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  111 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  112 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  113 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  114 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  115 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  116 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  117 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  118 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  119 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  120 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  121 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  122 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  123 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  124 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  125 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  126 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  127 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  128 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  129 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  130 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  131 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  132 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  133 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  134 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  135 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  136 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  137 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  138 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  139 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  140 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  141 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  142 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  143 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  144 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  145 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  146 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  147 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  148 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  149 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  150 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  151 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  152 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  153 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  154 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  155 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  156 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  157 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  158 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  159 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  160 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  161 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  162 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  163 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  164 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  165 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  166 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  167 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  168 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  169 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  170 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  171 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  172 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  173 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  174 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  175 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  176 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  177 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  178 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  179 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  180 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  181 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  182 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  183 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  184 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  185 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  186 best program: def newfun(image): return image.score(['clusters of black fruit', 'evergreen shrub with grayish leaves', 'small, star-shaped flowers', 'grows along walls or in rocky places']) 
iteration:  187 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  188 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  189 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  190 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  191 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  192 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  193 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  194 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  195 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  196 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  197 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  198 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
iteration:  199 best program: def newfun(image): return image.score(['panicle hydrangea', 'lacecap hydrangea', 'oakleaf hydrangea', 'bigleaf hydrangea', 'climbing hydrangea', 'hydrangea shrub']) 
