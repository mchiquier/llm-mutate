iteration:  0 best program: def newfun(image): return image.score(['long, dense coat', 'long, narrow wings', 'a long neck', 'a wide, flat head', 'a long, rectangular hood', 'a thin, green, edible skin'])  
iteration:  1 best program: def newfun(image): return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'a hard, inedible seed', 'a natural or synthetic fiber', 'performs a specific function']) 
iteration:  2 best program: def newfun(image): return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'a hard, inedible seed', 'a natural or synthetic fiber', 'performs a specific function']) 
iteration:  3 best program: def newfun(image): return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'a hard, inedible seed', 'a natural or synthetic fiber', 'performs a specific function']) 
iteration:  4 best program: def newfun(image): return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'a hard, inedible seed', 'a natural or synthetic fiber', 'performs a specific function']) 
iteration:  5 best program: def newfun(image): return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'a hard, inedible seed', 'a natural or synthetic fiber', 'performs a specific function']) 
iteration:  6 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  7 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  8 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  9 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  10 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  11 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  12 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  13 best program: def newfun(image): return image.score(['succulent, pungent leaves', 'may be curly or straight', ' possibly has a long, thin taproot', 'may be pickled', 'found in stir-fries', 'may have small, green flowers']) 
iteration:  14 best program: def newfun(image):     return image.score(['branching habit', 'smooth leaves', 'typically grows in shade', 'hard, inedible seed', 'a natural or synthetic fiber', 'long, thin leaves']) 
iteration:  15 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  16 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  17 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  18 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  19 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  20 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  21 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  22 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  23 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  24 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  25 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  26 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  27 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  28 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  29 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  30 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  31 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  32 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  33 best program: def newfun(image): return image.score(['twisted, tan-colored stalks', 'a bamboo cane with a curved handle', 'has fuzzy, green leaves', 'may have small round or oval fruits', 'a rope made from twisted plant fibers', 'may have sharp spines']) 
iteration:  34 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  35 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  36 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  37 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  38 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  39 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  40 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  41 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  42 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  43 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  44 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  45 best program: def newfun(image): return image.score(['smooth leaves with fine hairs', 'panicles of small, black seeds', 'green stalks', 'white or purplish flowers', 'also called bok choy', 'may be grown in aquaponic systems']) 
iteration:  46 best program: def newfun(image): return image.score(['planted in the fall', 'cultivated for its grain', 'a type of grass', 'brown kernels', 'used as fodder', 'looks similar to corn but has a different growth habit']) 
iteration:  47 best program: def newfun(image): return image.score(['dull or shiny black seeds', 'densely pubescent stems', 'grass-like leaves', 'grow in dense stands', 'annual or perennial herb', 'bluish green or greyish green']) 
iteration:  48 best program: def newfun(image): return image.score(['dull or shiny black seeds', 'densely pubescent stems', 'grass-like leaves', 'grow in dense stands', 'annual or perennial herb', 'bluish green or greyish green']) 
iteration:  49 best program: def newfun(image): return image.score(['dull or shiny black seeds', 'densely pubescent stems', 'grass-like leaves', 'grow in dense stands', 'annual or perennial herb', 'bluish green or greyish green']) 
iteration:  50 best program: def newfun(image): return image.score(['dull or shiny black seeds', 'densely pubescent stems', 'grass-like leaves', 'grow in dense stands', 'annual or perennial herb', 'bluish green or greyish green']) 
iteration:  51 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  52 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  53 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  54 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  55 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  56 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  57 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  58 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  59 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  60 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  61 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  62 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  63 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  64 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  65 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  66 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  67 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  68 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  69 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  70 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  71 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  72 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  73 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  74 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  75 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  76 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  77 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  78 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  79 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  80 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  81 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  82 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  83 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  84 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  85 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  86 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  87 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  88 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  89 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  90 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  91 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  92 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  93 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  94 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  95 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  96 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  97 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  98 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  99 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  100 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  101 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  102 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  103 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  104 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  105 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  106 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  107 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  108 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  109 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  110 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  111 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  112 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  113 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  114 best program: def newfun(image): return image.score([' leaves with serrated edges', 'grass-like habit', 'corn-like habit', 'may be growing in water', 'sugarcane plant', 'evil or poisonous connotations']) 
iteration:  115 best program: def newfun(image): return image.score(['woolly,stellungate hairs', 'bluish-green or grey-green leaves', 'peculiar whitish or yellowish scent', 'spiky leaves', 'stems hairy below the nodes']) 
iteration:  116 best program: def newfun(image): return image.score(['woolly,stellungate hairs', 'bluish-green or grey-green leaves', 'peculiar whitish or yellowish scent', 'spiky leaves', 'stems hairy below the nodes']) 
iteration:  117 best program: def newfun(image): return image.score(['woolly,stellungate hairs', 'bluish-green or grey-green leaves', 'peculiar whitish or yellowish scent', 'spiky leaves', 'stems hairy below the nodes']) 
iteration:  118 best program: def newfun(image): return image.score(['woolly,stellungate hairs', 'bluish-green or grey-green leaves', 'peculiar whitish or yellowish scent', 'spiky leaves', 'stems hairy below the nodes']) 
iteration:  119 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  120 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  121 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  122 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  123 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  124 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  125 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  126 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  127 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  128 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  129 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  130 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  131 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  132 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  133 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  134 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  135 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  136 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  137 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  138 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  139 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  140 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  141 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  142 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  143 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  144 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  145 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  146 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  147 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  148 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  149 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  150 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  151 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  152 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  153 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  154 best program: def newfun(image): return image.score(['like corn', 'looks similar to corn', 'grassy stalks', 'flowers are in a spike-like inflorescence', 'ears may be growing on the stalks',  'stems may have nodes']) 
iteration:  155 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  156 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  157 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  158 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  159 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  160 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  161 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  162 best program: def newfun(image):     return image.score(['annual or perennial grass', 'long, thin leaves', 'erect or spreading growth habit', 'oval or round shape', 'grassy or hay-like foliage', 'stems are slender and often curved']) 
iteration:  163 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  164 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  165 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  166 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  167 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  168 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  169 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  170 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  171 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  172 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  173 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  174 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  175 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  176 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  177 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  178 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  179 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  180 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  181 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  182 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  183 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  184 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  185 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  186 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  187 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  188 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  189 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  190 best program: def newfun(image): return image.score([' leaves with smooth edges',     'grass-like habit', 'corn-like habit', 'may be growing in water', 'bamboo-like stems', 'multitude of stems']) 
iteration:  191 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  192 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  193 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  194 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  195 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  196 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  197 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  198 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  199 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  200 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  201 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  202 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  203 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
iteration:  204 best program: def newfun(image): return image.score(['looks very similar to wheat', 'long stalks like wheat', 'grain-producing', 'ear may be growing on the stalk', 'golden wheat-like kernels', 'stems may have nodes']) 
