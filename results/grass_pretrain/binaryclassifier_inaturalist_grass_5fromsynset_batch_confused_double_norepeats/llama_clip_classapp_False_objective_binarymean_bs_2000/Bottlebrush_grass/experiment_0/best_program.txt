iteration:  0 best program: def newfun(image): return image.score(['black spots on a tan or light-colored coat', 'long, green leaves', 'a triangular head', 'long, thin tail', 'has multiple reeds that produce sound when air is blown through them', 'two wings'])  
iteration:  1 best program: def newfun(image): return image.score(['black spots on a tan or light-colored coat', 'long, green leaves', 'a triangular head', 'long, thin tail', 'has multiple reeds that produce sound when air is blown through them', 'two wings'])  
iteration:  2 best program: def newfun(image): return image.score(['black spots on a tan or light-colored coat', 'long, green leaves', 'a triangular head', 'long, thin tail', 'has multiple reeds that produce sound when air is blown through them', 'two wings'])  
iteration:  3 best program: def newfun(image): return image.score(['black spots on a tan or light-colored coat', 'long, green leaves', 'a triangular head', 'long, thin tail', 'has multiple reeds that produce sound when air is blown through them', 'two wings'])  
iteration:  4 best program: def newfun(image): return image.score(['may have clusters of grapes', 'thin, flexible branches', 'a metal cage', 'a flattop', 'a long, thin tail', 'often coated with a white, creamy substance']) 
iteration:  5 best program: def newfun(image): return image.score(['a group of tall, deciduous trees', 'several small, white flowers', 'a teapot with a curved spout', 'a show with three-pronged leaves', 'a thick, round trunk', 'usually brown or tan']) 
iteration:  6 best program: def newfun(image): return image.score(['a group of tall, deciduous trees', 'several small, white flowers', 'a teapot with a curved spout', 'a show with three-pronged leaves', 'a thick, round trunk', 'usually brown or tan']) 
iteration:  7 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  8 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  9 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  10 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  11 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  12 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  13 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  14 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  15 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  16 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  17 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  18 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  19 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  20 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  21 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  22 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  23 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  24 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  25 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  26 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  27 best program: def newfun(image): return image.score(['oval-shaped fruit', 'smooth, waxy leaves', 'tall, pale flowers', 'PUTS OUT LEAVES IN THE SPRING', 'PRODUCES RICH COMPOST', 'history of being used in traditional medicine']) 
iteration:  28 best program: def newfun(image): return image.score(['a low, neat hedge or border', 'radial engine', 'a brush or small branches', 'webs spun between plants or structures', 'rod with rings at intervals', 'disc-shaped seeds']) 
iteration:  29 best program: def newfun(image): return image.score(['a low, neat hedge or border', 'radial engine', 'a brush or small branches', 'webs spun between plants or structures', 'rod with rings at intervals', 'disc-shaped seeds']) 
iteration:  30 best program: def newfun(image): return image.score(['a low, neat hedge or border', 'radial engine', 'a brush or small branches', 'webs spun between plants or structures', 'rod with rings at intervals', 'disc-shaped seeds']) 
iteration:  31 best program: def newfun(image): return image.score(['a low, neat hedge or border', 'radial engine', 'a brush or small branches', 'webs spun between plants or structures', 'rod with rings at intervals', 'disc-shaped seeds']) 
iteration:  32 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  33 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  34 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  35 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  36 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  37 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  38 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  39 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  40 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  41 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  42 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  43 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  44 best program: def newfun(image): return image.score(['long, strap-like leaves', 'found in tropical areas', 'grown in clusters', 'thin, flexible stems', 'trellises or other supports', 'blue-colored flowers']) 
iteration:  45 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  46 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  47 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  48 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  49 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  50 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  51 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  52 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  53 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  54 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  55 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  56 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  57 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  58 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  59 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  60 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  61 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  62 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  63 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  64 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  65 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  66 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  67 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  68 best program: def newfun(image): return image.score(['thin, wiry stems', 'clusters of small, dark green leaves', 'has a tomato plant', 'pink or red flowers', 'typically grown in gardens', 'brown, edible seeds']) 
iteration:  69 best program: def newfun(image): return image.score(['eight or more petals', 'may have petals that form a cup or bowl', 'cluster of cream-colored flowers', 'trailing stems', 'a person holding the stem or stalk of a flower', 'spines or thorns on stems or leaves']) 
iteration:  70 best program: def newfun(image): return image.score(['eight or more petals', 'may have petals that form a cup or bowl', 'cluster of cream-colored flowers', 'trailing stems', 'a person holding the stem or stalk of a flower', 'spines or thorns on stems or leaves']) 
iteration:  71 best program: def newfun(image): return image.score(['tall,arching stems', 'pointy leaves with or without teeth', 'Found in swamps or marshes', 'terrestrialleaves', 'awl-shaped leaves', ' longconnected leaves']) 
iteration:  72 best program: def newfun(image): return image.score(['tall,arching stems', 'pointy leaves with or without teeth', 'Found in swamps or marshes', 'terrestrialleaves', 'awl-shaped leaves', ' longconnected leaves']) 
iteration:  73 best program: def newfun(image): return image.score(['tall,arching stems', 'pointy leaves with or without teeth', 'Found in swamps or marshes', 'terrestrialleaves', 'awl-shaped leaves', ' longconnected leaves']) 
iteration:  74 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  75 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  76 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  77 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  78 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  79 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  80 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  81 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  82 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  83 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  84 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  85 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  86 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  87 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  88 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  89 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  90 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  91 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  92 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  93 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  94 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  95 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  96 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  97 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  98 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  99 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  100 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  101 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  102 best program: def newfun(image): return image.score(['pointed, lobed leaves', 'long, thin stems', 'grows in dense clusters', 'pale-colored flowers', 'spiky or prickly texture', 'seed used in cooking']) 
iteration:  103 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  104 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  105 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  106 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  107 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  108 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  109 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  110 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  111 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  112 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  113 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  114 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  115 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  116 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  117 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  118 best program: def newfun(image): return image.score([' many clusters of bright red or orange berries', 'sparsely-leaved branches', 'long, thin, sinuous branches', 'green leaves with saw-toothed edges', 'thorns or spines', 'waxy leaves']) 
iteration:  119 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  120 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  121 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  122 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  123 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  124 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  125 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  126 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  127 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  128 best program: def newfun(image): return image.score(['covered in needle-like leaves', 'long, pointed shoots', 'tightly curled leaves', ' needle-like leaves', 'compound leaves with serrated edges', 'aromatic leaves']) 
iteration:  129 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  130 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  131 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  132 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  133 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  134 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  135 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  136 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  137 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  138 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  139 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  140 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  141 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  142 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  143 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  144 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  145 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  146 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  147 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  148 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  149 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  150 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  151 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  152 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  153 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  154 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  155 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  156 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  157 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  158 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  159 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  160 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  161 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  162 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  163 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  164 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  165 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  166 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  167 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  168 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  169 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  170 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  171 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  172 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  173 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  174 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  175 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  176 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  177 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  178 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  179 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  180 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  181 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  182 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  183 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  184 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  185 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  186 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  187 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  188 best program: def newfun(image): return image.score(['spiky leaves', 'whitish, powdery coating on leaves and stems', 'identical leaves on either side of stem', 'fuzzy or hairy leaves', 'round clusters of small, white flowers', 'grows along banks of water']) 
iteration:  189 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  190 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  191 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  192 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  193 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  194 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  195 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  196 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  197 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  198 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  199 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  200 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  201 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  202 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  203 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  204 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  205 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  206 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  207 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  208 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  209 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  210 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  211 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  212 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  213 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  214 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  215 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  216 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  217 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  218 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  219 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  220 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  221 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  222 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  223 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  224 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  225 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  226 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  227 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  228 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  229 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  230 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  231 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  232 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  233 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  234 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  235 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  236 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  237 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  238 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  239 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  240 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  241 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  242 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  243 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  244 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  245 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  246 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  247 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  248 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
iteration:  249 best program: def newfun(image): return image.score(['spiky blue-green leaves', 'curved, spiky leaves', 'tall, columnar plant', ' produces tall flower spikes', 'hairy stems and leaves', 'may have red flowers']) 
