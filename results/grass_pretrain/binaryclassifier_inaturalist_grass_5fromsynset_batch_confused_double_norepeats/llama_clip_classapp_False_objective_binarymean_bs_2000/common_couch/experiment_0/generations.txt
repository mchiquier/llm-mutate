iteration: 0 generation: def newfun(image): return image.score(['long neck', 'actions performed with speed and precision', 'a stylized design or logo on the side', 'a blade with a curved or hooked shape', 'long snout', 'green grass or foliage'])
iteration: 1 generation: def newfun(image): return image.score(['throws small discs or other objects', 'a spindle or other narrow, rod-like part', 'may have a planter or other container on top', 'holes for threading', 'long, flexible tube', 'may have coils or springs'])
iteration: 2 generation: def newfun(image): return image.score(['a flagpole', 'smokestacks', 'a rack or other carrier to hold the communications equipment', 'caterpillar or chain tracks', 'a kitchen appliance used for heating and cooking', 'a small bed of straw or other soft material'])
iteration: 3 generation: def newfun(image): return image.score(['a black ribbon or strap', 'a device with a flexible band that winds onto a reel', 'a tripod or other support for a camera or binoculars', 'spikes or thorns on the stem', 'frilly lavender edges', 'can be found in a Caribbean island setting'])
iteration: 4 generation: def newfun(image): return image.score(['a single reed', 'a flat, rectangular base', 'a long handle', 'thumbhole in the grip', 'a long, thin neck', 'hair like ears'])
iteration: 5 generation: def newfun(image): return image.score(['a woven or fabric cover', 'a latch or other mechanism for opening the device', 'long blades of grass or weeds', 'smooth, pale skin', 'a delicate or ornate structure', 'a winking, blinking, or flashing light'])
iteration: 6 generation: def newfun(image): return image.score(['a shield or crest', 'a trigger', 'green or blue plastic or metal', 'long, thin, pointed leaves', 'often seen on kitchen countertops or in cabinets', 'metal or plastic wires or cords'])
iteration: 7 generation: def newfun(image): return image.score(['diagonal lines', 'a handle or loop for holding it', 'long tail', 'quantity of liquid'])
iteration: 8 generation: def newfun(image): return image.score(['long, thin cylinder', 'often has a pointed tip', 'diagonal lines on it', 'a small drum', 'made of firm, smooth leather', 'a block or platform'])
iteration: 9 generation: def newfun(image): return image.score(['shiny, hard surface', 'a long, thin shaft', 'filled with beads, seeds, or other materials to create a rattling sound', 'lush vegetation', 'large eyes', 'a power cord'])
iteration: 10 generation: def newfun(image): return image.score(['straight or nearly straight lines', 'a plastic or rubber cup', 'open at the top', 'the bristles are either soft and thick or stiff and thin', 'a clamp or grip', 'long cord'])
iteration: 11 generation: def newfun(image): return image.score(['a single flute or reed', 'ornamental loops of wire on the handle', 'a needle on the end', 'a piece of fabric covering the keys', 'a decorative rack for displaying objects', 'a horseshoe or other lucky object'])
iteration: 12 generation: def newfun(image): return image.score(['a single reed', 'a flat, rectangular base', 'futuristic or high tech', 'hair like ears', 'spines', 'a hyperbolic curve'])
iteration: 13 generation: def newfun(image): return image.score(['a single flute or reed', 'ornamental loops of wire on the handle', 'a needle on the end', 'a piece of fabric covering the keys', 'a decorative rack for displaying objects', 'a horseshoe or other lucky object'])
iteration: 14 generation: def newfun(image): return image.score(['weaving or woven object', ' against the grain', 'long, thin tube with holes in it', 'rabbit or hare', 'hare', 'a razor or other sharp object'])
iteration: 15 generation: def newfun(image): return image.score(['a cross or crucifix', 'long, hanging ears', 'PTT boom', 'device or implement to eliminate a shorter length of too. much hanging track', 'long thin object with a point at one end', 'may have a small ring at the other end'])
iteration: 16 generation: def newfun(image): return image.score(['a tall, vertical base or support', 'may have a distinctive curve or bend', 'a rope, cable, or chain', 'coolant vents on the side', 'often found near water', 'a rod with a hook or other type of end fitting'])
iteration: 17 generation: def newfun(image): return image.score(['long', 'thin', 'a paper or cardboard tube', 'strings that are plucked or strummed', 'a shoe with a laces or Velcro closure', 'hollow, allowing sound to pass through'])
iteration: 18 generation: def newfun(image): return image.score(['two parallel long boards', 'metallic rope', 'cabbage and onions', 'a pushcart', 'a musical instrument',  'a thin, round cord'])
iteration: 19 generation: def newfun(image): return image.score(['fastened to the ground with a chain or rope', 'corrugated', 'long handle', 'covered in wax or resin', 'long thin shoots', 'a glass tube'])
iteration: 20 generation: def newfun(image): return image.score(['may have a pattern or design', 'long neck', 'long tail', 'a reed or double reed', 'has a handle or loop for holding it', 'a clamp or grip'])
iteration: 21 generation: def newfun(image): return image.score(['a set of thin, parallel bars', 'pairs of wheels', 'long, white, flowing material', 'a symbol or decoration on the side', 'a supporting rod or handle', 'stick or sniff'])
iteration: 22 generation: def newfun(image): return image.score(['garnished with parsley', 'long tail', 'a pointed tip', 'filled with beads, seeds, or other materials to create a rattling sound', 'a stalk connecting the body to the ground', 'smokestacks'])
iteration: 23 generation: def newfun(image): return image.score(['a rounded, flat object', 'long, thin, pointed leaves', ' a narrow or confined space', ' frameworks made of bars or tubes', 'found in places with high foot traffic', 'a shallow divot or depression'])
iteration: 24 generation: def newfun(image): return image.score(['a beaded or decorated shaft', 'curved or bent shape', 'may have a pointed tip', 'long, thin feathers', 'a long, thin device', 'a small propeller'])
iteration: 25 generation: def newfun(image): return image.score(['thin, round wire', 'made of food', 'a long, flexible stalk', 'holes with thin, flexible tabs', 'two parts that fit together', 'may have a bend in the middle'])
iteration: 26 generation: def newfun(image): return image.score(['a rack or holder', 'long, thin leaves', 'occasions where food is served', 'pairs of curved, pointed ends', 'a ball', 'striations or pairs of points'])
iteration: 27 generation: def newfun(image): return image.score(['stripes', 'split in the middle', 'long, thin leaves', 'a round, protruding bulb', 'a rotating handle on top', 'a sharp, pointed beak'])
iteration: 28 generation: def newfun(image): return image.score(['a metal frame', 'spikes or thorns on the stem', 'curved line', 'at least one saddle'])
iteration: 29 generation: def newfun(image): return image.score(['hard, smooth surface', 'typically cylindrical or spherical in shape', 'rails or tracks', 'a long, flexible filament', 'black, but may have other colors'])
iteration: 30 generation: def newfun(image): return image.score(['covered in wax or resin', 'long, thin shoots', 'a single reed', 'a long handle', 'found in places with fire', 'a metal collar'])
iteration: 31 generation: def newfun(image): return image.score(['frilly lavender edges', 'spikes or thorns on the stem', 'may have a strap or other fastening device', 'a large, rectangular structure', 'a device with a flexible band that winds onto a reel', 'a small, handheld device'])
iteration: 32 generation: def newfun(image): return image.score(['holes or gaps in the fabric', 'lace or crocheted trim', 'a woven basket or container', 'a widely open mouth', 'dangling threads', 'a wooden or plastic dowel'])
iteration: 33 generation: def newfun(image): return image.score(['a thick, fibrous part of a plant', 'has eyelets', 'curved, handle-like part', 'a single line or crease', 'a thick central stem', 'long, thin blades'])
iteration: 34 generation: def newfun(image): return image.score(['spouts that can be hollow', 'a curved or hooked tip', 'long, thin stems', 'often has pointed or rounded prongs', 'a row of tiny, pear-shaped spots or a row of raised dots', 'a thin, rounded edge'])
iteration: 35 generation: def newfun(image): return image.score(['a flexible plastic or metal arm', 'cut along a curved or wavy pattern', 'long, thin leaves', 'sharp points or barbs', 'centered around a single, thin stem', 'a pair of scissors'])
iteration: 36 generation: def newfun(image): return image.score(['a long, curved tail', 'a pattern of dark spots or bands on the body', 'long, thin leaves', 'a round, protruding bulb', 'typically cylindrical or spherical in shape', 'may have a strap or other fastening device'])
iteration: 37 generation: def newfun(image): return image.score(['a wheel at one end', 'long, thin shoots', 'a pointed protrusion at the other end', 'a trigger or other mechanism to control the flow of gas', 'a rotating handle on top', 'no visible means of support'])
iteration: 38 generation: def newfun(image): return image.score(['looks like a pointed hat', 'long, thin leaves', 'shape of a crescent or crescent moon', 'open on two or three sides', 'circular or curved edges', 'found in kitchens or dining areas'])
iteration: 39 generation: def newfun(image): return image.score(['diagonal lines', 'a handle or loop for holding it', 'long tail', 'quantity of liquid'])
iteration: 40 generation: def newfun(image): return image.score(['thin, round wire', 'made of food', 'a long, flexible stalk', 'holes with thin, flexible tabs', 'two parts that fit together', 'may have a bend in the middle'])
iteration: 41 generation: def newfun(image): return image.score(['consumer product', 'stringed instrument', 'tuned wooden bars', 'long thin tube', 'pot/other container', 'heating element'])
iteration: 42 generation: def newfun(image): return image.score(['easel', 'tassels', 'a lid', 'a loop or rope for hanging', 'a short stalk', 'a paintbrush'])
iteration: 43 generation: def newfun(image): return image.score(['amiento wrapper', 'corn or wheat bread', 'a headdress', 'reeds or bamboo', 'motor or engine', 'rubber or plastic pellets'])
iteration: 44 generation: def newfun(image): return image.score(['a long, thin, flexible rod', 'a curl at the end of a long, thin rod', 'a paintbrush or roller', 'smooth', 'stir stick or mixer', 'translucent or semi-opaque'])
iteration: 45 generation: def newfun(image): return image.score(['a tightly curled design or pattern', 'a small hill or mound', 'a single person', 'a plowed field', 'long, curved tines', 'a narrow, winding road'])
iteration: 46 generation: def newfun(image): return image.score(['a short, flexible hose', 'a small handheld tool', 'looping curves', 'spiky or jagged edges', 'screws', 'a wrench or pliers'])
iteration: 47 generation: def newfun(image): return image.score(['layers of tissue', 'wires or tubes', 'a rack for holding something', 'a spiral shape', 'a line or cord', 'water droplets'])
iteration: 48 generation: def newfun(image): return image.score(['a single-edged blade', 'a hilt or handle', 'a crossguard', 'a curved or angled blade', 'a pommel', 'a sheath or scabbard'])
iteration: 49 generation: def newfun(image): return image.score(['holes for threading', 'a beaded or decorated shaft', 'curved or bent shape', 'filled with beads, seeds, or other materials to create a rattling sound', 'a stalk connecting the body to the ground', 'smokestacks'])
iteration: 50 generation: def newfun(image): return image.score(['a single reed', 'long, thin shoots', 'a stick or staff', 'hair like ears', 'tied with thongs or yarn', 'a long, flat base'])
iteration: 51 generation: def newfun(image): return image.score(['long, thin, and curved shape', 'holes for threading', 'a brass musical instrument', 'a green stem', 'a spine with the name of the binder', 'small, round seedpod'])
iteration: 52 generation: def newfun(image): return image.score(['long, thin stems', 'a dense, terminal flowerhead', 'strappy leaves', 'filled with dried plant material', 'a cardboard ring', 'may have a small nub at the tip'])
iteration: 53 generation: def newfun(image): return image.score(['a single reed', 'a double reed', 'long, thin shoots', 'a long, thin neck', 'hair like ears', 'a piece of jewelry'])
iteration: 54 generation: def newfun(image): return image.score(['long, thin, and curved shape', 'holes for threading', 'a brass musical instrument', 'a green stem', 'a spine with the name of the binder', 'small, round seedpod'])
iteration: 55 generation: def newfun(image): return image.score(['small, round seeds'])
iteration: 56 generation: def newfun(image): return image.score(['long, thin shoots'])
iteration: 57 generation: def newfun(image): return image.score(['spouts that can be open', 'spouts that can be tipped back', 'long, thin stems', 'often has pointed or rounded prongs', 'a row of tiny, pear-shaped spots or a row of raised dots', 'a thin, rounded edge'])
iteration: 58 generation: def newfun(image): return image.score(['spouts that can be hollow', 'a curved or hooked tip', 'long, thin stems', 'often has pointed or rounded prongs', 'a row of tiny, pear-shaped spots or a row of raised dots', 'a thin, rounded edge'])
iteration: 59 generation: def newfun(image): return image.score(['a wheel at one end', 'long, thin shoots'])
iteration: 60 generation: def newfun(image): return image.score(['long thin leaves', 'tanned human skin', 'a piece of jewelry with a large, round stone', 'rows of seeds', 'smooth or striated surface', 'may have detachable keyboard'])
iteration: 61 generation: def newfun(image): return image.score(['two equal-sized wheels side by side', 'short, furry plant stems'])
iteration: 62 generation: def newfun(image): return image.score(['long, thin stems',     'a terminal flowerhead with many florets',    'leafy bracts surrounding the flowerhead',    'white, yellow, or pink petals',    'may have leaves clasping the stem',    'the flowerhead opens flat'])
iteration: 63 generation: def newfun(image): return image.score(['rectangular shape', 'disk-shaped with a central hole', 'ring-shaped with a hanging loop', 'long, thin reeds', 'orb-weaving spiders', 'covered with barnacles'])
iteration: 64 generation: def newfun(image): return image.score(['two parallel bars', 'a curved or rounded upper edge', 'long, thin leaves',   'a stylus or pen', 'patterns or designs'])
iteration: 65 generation: def newfun(image): return image.score([' a square or rectangular base', ' wiry or cord-like strands', ' clusters of small, round seeds', ' ornate, curved or serrated edges', ' a single compact, rounded object', 'conical or hour-glass shaped'])
iteration: 66 generation: def newfun(image): return image.score(['spiky leaves'])
iteration: 67 generation: def newfun(image): return image.score(['spiky, thick leaves', 'a wooden or plastic handle', 'stored in a sheath', 'long and thin', 'ridges or grooves running along the length', 'has a cutting edge'])
iteration: 68 generation: def newfun(image): return image.score(['a single reed', 'a double reed', 'long, thin shoots', 'a long, thin neck', 'hair like ears', 'a piece of jewelry'])
iteration: 69 generation: def newfun(image): return image.score(['a closed, rounded shape with small openings at the top', 'a single flower or a cluster of flowers at the tip', 'marked with a line or lines near the base', 'long narrow leaves', 'tightly rolled leaves', 'thin, flexible branches'])
iteration: 70 generation: def newfun(image): return image.score(['spiky, thick leaves', 'a wooden or plastic handle', 'stored in a sheath', 'long and thin', 'ridges or grooves running along the length', 'has a cutting edge'])
iteration: 71 generation: def newfun(image): return image.score(['oars or paddles', ' long, thin, straight lines', 'a pointed tip', 'a rough or irregular surface', 'an animal head', 'animal fur or feathers'])
iteration: 72 generation: def newfun(image): return image.score(['a hose or tube', 'rubber', 'metal cord or chain', 'long, thin pieces of wood', 'seed pods'])
iteration: 73 generation: def newfun(image): return image.score(['a curved brim', 'a long, thin stem', 'spikes or thorns on the stem', 'may have tassels or fringe at the edges', 'stitching along the brim', 'a small motif or design on the crown'])
iteration: 74 generation: def newfun(image): return image.score(['holes for threading', 'long, thin shoots', 'fastened to the ground with a chain or rope', 'smooth, curved surface', 'metal or plastic posts spaced evenly apart', 'a long handle'])
iteration: 75 generation: def newfun(image): return image.score(['a needle or needles'])
iteration: 76 generation: def newfun(image): return image.score(['a single stem', 'a cluster of two or more stems', 'a long, thin tube', 'may have a ring or other decorative element around the stem', 'typically made of glass', 'may have a label or other writing on the side'])
iteration: 77 generation: def newfun(image): return image.score(['two conical shapes', 'a flat top', 'ornamental basket weave pattern', 'thread or yarn', 'a needle', 'a double pointed needle'])
iteration: 78 generation: def newfun(image): return image.score(['an ear of corn'])
iteration: 79 generation: def newfun(image): return image.score(['a series of curved, outward extending petals', 'long, slender leaves', 'may have a long, thin stalk', 'shiny, hard surface', 'has a loop or handle at the top', 'split in the middle'])
iteration: 80 generation: def newfun(image): return image.score(['long and thin strips or fibers', 'keel-like structure', 'long, curved tube', 'linear or elongated appearance', 'a long, thin rod or stick', 'a clear, transparent material'])
iteration: 81 generation: def newfun(image): return image.score(['spouts that can be tipped back', 'long, thin stems', 'often has pointed or rounded prongs', 'a row of tiny, pear-shaped spots or a row of raised dots', 'a thin, rounded edge'])
iteration: 82 generation: def newfun(image): return image.score(['a sharp, pointed spine', 'covered in spiny quills', 'a decorative, curved handle', 'long, thin, pointed snout', 'prickly or thorny', 'red or pink fur or feathers'])
iteration: 83 generation: def newfun(image): return image.score(['spouts that can be hollow', 'a curved or hooked tip', 'long, thin stems', 'often has pointed or rounded prongs', 'a row of tiny, pear-shaped spots or a row of raised dots', 'a thin, rounded edge'])
iteration: 84 generation: def newfun(image): return image.score(['long, thin shoots'])
iteration: 85 generation: def newfun(image): return image.score(['a needle or needles'])
iteration: 86 generation: def newfun(image): return image.score(['long, thin leaves'])
iteration: 87 generation: def newfun(image): return image.score([' some farm crops'])
iteration: 88 generation: def newfun(image): return image.score(['holes for threading', 'a beaded or decorated shaft', 'curved or bent shape', 'filled with beads, seeds, or other materials to create a rattling sound', 'a stalk connecting the body to the ground', 'smokestacks'])
iteration: 89 generation: def newfun(image): return image.score(['pistils at the center'])
iteration: 90 generation: def newfun(image): return image.score(['a cluster of long stems', 'sometimes used for flowers', 'supported by a long stem or stalk', 'pointed tips', 'buds at the base of the stems', 'rows of small leaves running up the stem'])
iteration: 91 generation: def newfun(image): return image.score(['a cluster of long stems', 'sometimes used for flowers', 'supported by a long stem or stalk', 'pointed tips', 'buds at the base of the stems', 'rows of small leaves running up the stem'])
iteration: 92 generation: def newfun(image): return image.score([' long, thin stems'])
iteration: 93 generation: def newfun(image): return image.score(['can be found in rural or farm settings'])
iteration: 94 generation: def newfun(image): return image.score(['straight or nearly straight lines', 'a plastic or rubber cup', 'open at the top', 'the bristles are either soft and thick or stiff and thin', 'a clamp or grip', 'long cord'])
iteration: 95 generation: def newfun(image): return image.score(['spines that are not actually thorns', 'upright clusters of leaves'])
iteration: 96 generation: def newfun(image): return image.score(['a group of wheat stalks formed into a sheaf'])
iteration: 97 generation: def newfun(image): return image.score(['fuzzy leaves'])
iteration: 98 generation: def newfun(image): return image.score(['long, thin stems', 'seed pods or flowers', 'entered through a narrow opening', 'looks like bamboo', 'corks or stoppers', 'a long, curved blade'])
iteration: 99 generation: def newfun(image): return image.score(['a row of small, white clouds along the horizon'])
iteration: 100 generation: def newfun(image): return image.score(['long, thin strips'])
iteration: 101 generation: def newfun(image): return image.score(['a bundle of sticks or other plant material tied together', 'a single leaf or a small group of leaves'])
iteration: 102 generation: def newfun(image): return image.score(['a spindle or spool of thread'])
iteration: 103 generation: def newfun(image): return image.score(['a group of wheat stalks formed into a sheaf'])
iteration: 104 generation: def newfun(image): return image.score(['a needle or needles', 'long, thin shoots'])
iteration: 105 generation: def newfun(image): return image.score(['a knob or handle on top', 'a long, thin stem', 'a wishbone shape', 'white or cream-colored', 'decorative chains or strings', 'can be hung on a wall or door'])
iteration: 106 generation: def newfun(image): return image.score(['a cluster of small flowers'])
iteration: 107 generation: def newfun(image): return image.score(['holes for threading', 'corrugated', 'long, thin shoots', 'long handle', 'a smooth, curved surface', 'metal or plastic posts spaced evenly apart'])
iteration: 108 generation: def newfun(image): return image.score(['absence of visible stems', 'hairy leaves', 'spikes or thorns on the stem', 'long, thin shoots'])
iteration: 109 generation: def newfun(image): return image.score(['spines that are actually thorns', 'upright clusters of leaves'])
iteration: 110 generation: def newfun(image): return image.score(['spiky leaves'])
iteration: 111 generation: def newfun(image): return image.score(['short and round', 'a series of finger holes', 'short stem', 'rows of small, round seeds', 'oval or teardrop shape', 'curved or arched lines'])
iteration: 112 generation: def newfun(image): return image.score(['leaf blades'])
iteration: 113 generation: def newfun(image): return image.score(['plaited or braided fibers'])
iteration: 114 generation: def newfun(image): return image.score(['threads or fibers that are not plaited or braided'])
iteration: 115 generation: def newfun(image): return image.score(['odorous particles', ' wiry hairs', '화 pattern', 'thin, flexible branches', 'spiny leaves', 'resembling a random scattering of small, irregular shapes'])
iteration: 116 generation: def newfun(image): return image.score(['a zipper or other fastener'])
iteration: 117 generation: def newfun(image): return image.score(['a stem or stalk with a flower at the top'])
iteration: 118 generation: def newfun(image): return image.score(['stalk supporting a single leaf'])
iteration: 119 generation: def newfun(image): return image.score(['enlarged coiled spring', 'a tapered, rectangular block', 'a spindle', 'long, thin uprights', 'a connecting rod', 'curved ends'])
iteration: 120 generation: def newfun(image): return image.score(['a fringe of long, thin strips'])
iteration: 121 generation: def newfun(image): return image.score(['rows of small, round seeds'])
iteration: 122 generation: def newfun(image): return image.score(['hairs or other small growths'])
iteration: 123 generation: def newfun(image): return image.score(['long thin deciduous leaves'])
iteration: 124 generation: def newfun(image): return image.score(['spikes of brightly colored flowers'])
iteration: 125 generation: def newfun(image): return image.score(['a large cluster of leaves', 'veins in the leaves', 'supported by a thin stem or stalk', 'smooth, green surface', 'there are tiny yellow flowers in the center of the leaves', 'may have some red coloration'])
iteration: 126 generation: def newfun(image): return image.score(['a single stem', 'a cluster of two or more stems', 'a long, thin tube', 'may have a ring or other decorative element around the stem', 'typically made of glass', 'may have a label or other writing on the side'])
iteration: 127 generation: def newfun(image): return image.score(['a single-edged blade', 'long, thin, pointed leaves', 'a curved or angled blade', 'a stalk connecting the body to the ground', 'frameworks made of bars or tubes', 'smokestacks'])
iteration: 128 generation: def newfun(image): return image.score(['rows of ripe grain'])
iteration: 129 generation: def newfun(image): return image.score(['spines that are actually thorns'])
iteration: 130 generation: def newfun(image): return image.score(['spiky or jagged leaves'])
iteration: 131 generation: def newfun(image): return image.score(['rows of small leaves'])
iteration: 132 generation: def newfun(image): return image.score(['may have variegated leaves'])
iteration: 133 generation: def newfun(image): return image.score(['a group of wheat stalks formed into a sheaf'])
iteration: 134 generation: def newfun(image): return image.score(['lily of the valley'])
iteration: 135 generation: def newfun(image): return image.score(['stems with green leaves'])
iteration: 136 generation: def newfun(image): return image.score(['hairy stem and leaves'])
iteration: 137 generation: def newfun(image): return image.score(['stalk has many tiny hairs'])
iteration: 138 generation: def newfun(image): return image.score(['a fringe of long, thin strips'])
iteration: 139 generation: def newfun(image): return image.score(['a single stalk with pairs of leaves sprouting alternately'])
iteration: 140 generation: def newfun(image): return image.score(['a single reed'])
iteration: 141 generation: def newfun(image): return image.score(['leaves or petioles merged around the stem'])
iteration: 142 generation: def newfun(image): return image.score(['a flower', 'long, thin stems', 'feathers', ' two long, thin sticks', 'шли ZuSpiel article', 'a narrow boat'])
iteration: 143 generation: def newfun(image): return image.score([' sprouting leaves or buds'])
iteration: 144 generation: def newfun(image): return image.score(['rows of flutes'])
iteration: 145 generation: def newfun(image): return image.score(['rows of crops'])
iteration: 146 generation: def newfun(image): return image.score(['long, thin shoots'])
iteration: 147 generation: def newfun(image): return image.score(['spikes or thorns on the stem'])
iteration: 148 generation: def newfun(image): return image.score(['structures of hand-woven reeds'])
iteration: 149 generation: def newfun(image): return image.score(['false thorns or spines'])
iteration: 150 generation: def newfun(image): return image.score(['tall and upright flower stalks'])
iteration: 151 generation: def newfun(image): return image.score(['flowers with long thin stamens'])
iteration: 152 generation: def newfun(image): return image.score(['caterpillar or chain tracks'])
iteration: 153 generation: def newfun(image): return image.score(['cords or narrow strips'])
iteration: 154 generation: def newfun(image): return image.score(['tapered or pointed ends'])
iteration: 155 generation: def newfun(image): return image.score(['rows of flutes'])
iteration: 156 generation: def newfun(image): return image.score(['a long, thin wand or rod', 'a strip of material with selvages', 'spirals or other curved shapes', 'Opened or unopened buds', 'a woven or braided border', 'a kind of fabric or other flexible material'])
iteration: 157 generation: def newfun(image): return image.score(['a group of wheat stalks formed into a sheaf'])
iteration: 158 generation: def newfun(image): return image.score(['a bundle of sticks or reeds'])
iteration: 159 generation: def newfun(image): return image.score(['a collection of grain stalks'])
iteration: 160 generation: def newfun(image): return image.score(['rows of tiny leaves'])
iteration: 161 generation: def newfun(image): return image.score(['a single long stem with small leaves'])
iteration: 162 generation: def newfun(image): return image.score(['long and thin flexible leaves'])
iteration: 163 generation: def newfun(image): return image.score(['long blades of grass'])
iteration: 164 generation: def newfun(image): return image.score(['long and thin stems'])
iteration: 165 generation: def newfun(image): return image.score(['a stalk made of a different material from the rest of the plant'])
iteration: 166 generation: def newfun(image): return image.score(['broad leaves'])
iteration: 167 generation: def newfun(image): return image.score(['stalks of grain'])
iteration: 168 generation: def newfun(image): return image.score(['a collection of short stems with leaves'])
iteration: 169 generation: def newfun(image): return image.score(['tufts of grass'])
iteration: 170 generation: def newfun(image): return image.score(['long, thin strip', 'ends curve back under the base', 'a row of buttons or other control interfaces along one side', 'used for swabbing', 'long handle, narrow head'])
iteration: 171 generation: def newfun(image): return image.score(['spring onion'])
iteration: 172 generation: def newfun(image): return image.score(['a ring having a circular cross section', 'a stiff flat strip', 'a pin at each end', 'a long rod', ' a straight or slightly curved, unbranched stem', 'orbital sockets'])
iteration: 173 generation: def newfun(image): return image.score(['leaves grow directly from the stem'])
iteration: 174 generation: def newfun(image): return image.score(['slender stem and pointy leaves'])
iteration: 175 generation: def newfun(image): return image.score(['stamens surrounding the pistils'])
iteration: 176 generation: def newfun(image): return image.score(['several thin stemmed flowers'])
iteration: 177 generation: def newfun(image): return image.score(['flowers on long stalks'])
iteration: 178 generation: def newfun(image): return image.score(['a model of DNA molecule'])
iteration: 179 generation: def newfun(image): return image.score(['elongated achenes with a tuft of hairs at the tip'])
iteration: 180 generation: def newfun(image): return image.score(['evenly spaced slits cut into a long strip of material'])
iteration: 181 generation: def newfun(image): return image.score(['long thin leaves', 'rows of small leaves running up the stem'])
iteration: 182 generation: def newfun(image): return image.score(['rows of Keystone-shaped seeds'])
iteration: 183 generation: def newfun(image): return image.score(['thin stems'])
iteration: 184 generation: def newfun(image): return image.score(['dried seed pods'])
iteration: 185 generation: def newfun(image): return image.score(['stalks of grain'])
iteration: 186 generation: def newfun(image): return image.score(['low altitude flying', 'upright or repeated character', 'spiky seed pods', 'shortgrass', 'ani. mal oral', 'candycane or striped candy'])
iteration: 187 generation: def newfun(image): return image.score(['a stalk with leaves or flowers at the top'])
iteration: 188 generation: def newfun(image): return image.score(['field grasses'])
iteration: 189 generation: def newfun(image): return image.score(['a single row of staves'])
iteration: 190 generation: def newfun(image): return image.score(['stems with spines on them'])
iteration: 191 generation: def newfun(image): return image.score(['spines that are actually thorns'])
iteration: 192 generation: def newfun(image): return image.score(['bent or curved at an angle'])
iteration: 193 generation: def newfun(image): return image.score(['a dense growth of grasses or weeds'])
iteration: 194 generation: def newfun(image): return image.score(['a single long leaf connected to a single stem'])
iteration: 195 generation: def newfun(image): return image.score(['hairy stem and leaves'])
iteration: 196 generation: def newfun(image): return image.score(['rows of circular seeds'])
iteration: 197 generation: def newfun(image): return image.score(['stalks with bumps along their length'])
iteration: 198 generation: def newfun(image): return image.score(['bracts or modified leaves'])
iteration: 199 generation: def newfun(image): return image.score(['a field of wheat or other grains'])
iteration: 200 generation: def newfun(image): return image.score(['hairy stems and leaves'])
iteration: 201 generation: def newfun(image): return image.score(['rows of ripe grain'])
iteration: 202 generation: def newfun(image): return image.score(['grass-like leaves'])
iteration: 203 generation: def newfun(image): return image.score(['grasslike plant'])
iteration: 204 generation: def newfun(image): return image.score([' long and thin stems'])
iteration: 205 generation: def newfun(image): return image.score(['a single broad leaf connected to a single stem'])
iteration: 206 generation: def newfun(image): return image.score(['rows of ripe grain'])
iteration: 207 generation: def newfun(image): return image.score(['short stems'])
iteration: 208 generation: def newfun(image): return image.score(['grain or seed heads'])
iteration: 209 generation: def newfun(image): return image.score(['an additional short stalk'])
iteration: 210 generation: def newfun(image): return image.score(['short stalks with terminal umbels'])
iteration: 211 generation: def newfun(image): return image.score(['a single stem with terminal leaves'])
iteration: 212 generation: def newfun(image): return image.score(['long blades of grass'])
iteration: 213 generation: def newfun(image): return image.score(['rows of lavender plants'])
iteration: 214 generation: def newfun(image): return image.score(['flowers or grasses with prominent stamens'])
iteration: 215 generation: def newfun(image): return image.score(['rows of distinctive seeds'])
iteration: 216 generation: def newfun(image): return image.score(['corn kernels in rows'])
iteration: 217 generation: def newfun(image): return image.score([' some grasses'])
iteration: 218 generation: def newfun(image): return image.score(['waxy leaves or stems'])
iteration: 219 generation: def newfun(image): return image.score(['long, narrow, winding strips'])
iteration: 220 generation: def newfun(image): return image.score(['rows of small round seeds'])
iteration: 221 generation: def newfun(image): return image.score(['thorns or spines'])
iteration: 222 generation: def newfun(image): return image.score([' long and thin leaves'])
iteration: 223 generation: def newfun(image): return image.score(['light-colored cultivated grasses'])
iteration: 224 generation: def newfun(image): return image.score(['cultivated grasses'])
iteration: 225 generation: def newfun(image): return image.score(['grasslike leaves'])
iteration: 226 generation: def newfun(image): return image.score(['short spikes of grass'])
iteration: 227 generation: def newfun(image): return image.score(['long, thin blades of grass'])
iteration: 228 generation: def newfun(image): return image.score(['nodes where leaves come off the stem'])
iteration: 229 generation: def newfun(image): return image.score(['grass or cereal grain'])
iteration: 230 generation: def newfun(image): return image.score(['rows of wheat plants'])
iteration: 231 generation: def newfun(image): return image.score(['pistils at the center', 'rows of distinctive seeds'])
iteration: 232 generation: def newfun(image): return image.score(['s stem of a plant or flower'])
iteration: 233 generation: def newfun(image): return image.score(['spring onion'])
iteration: 234 generation: def newfun(image): return image.score(['a bunch of long thin leaves'])
iteration: 235 generation: def newfun(image): return image.score(['hairless stem and shiny leaves'])
iteration: 236 generation: def newfun(image): return image.score(['grass-like leaves'])
iteration: 237 generation: def newfun(image): return image.score(['wheat sheaves'])
iteration: 238 generation: def newfun(image): return image.score(['a simple or compound umbel inflorescence'])
iteration: 239 generation: def newfun(image): return image.score(['variegated leaves'])
iteration: 240 generation: def newfun(image): return image.score(['long blades of sea grass'])
iteration: 241 generation: def newfun(image): return image.score(['stalks that have sheaths'])
iteration: 242 generation: def newfun(image): return image.score(['grass-like plants'])
iteration: 243 generation: def newfun(image): return image.score(['grass or cereal plants'])
iteration: 244 generation: def newfun(image): return image.score(['short stems with leaves and a long stem supporting a flower'])
iteration: 245 generation: def newfun(image): return image.score(['petioles that connect the leaf blades to the stems'])
iteration: 246 generation: def newfun(image): return image.score(['a thistle-like inflorescence'])
iteration: 247 generation: def newfun(image): return image.score(['a single stem or line', 'long terminal leaves'])
iteration: 248 generation: def newfun(image): return image.score(['green cultivated grasses'])
iteration: 249 generation: def newfun(image): return image.score(['recurved thorns along the stems'])
