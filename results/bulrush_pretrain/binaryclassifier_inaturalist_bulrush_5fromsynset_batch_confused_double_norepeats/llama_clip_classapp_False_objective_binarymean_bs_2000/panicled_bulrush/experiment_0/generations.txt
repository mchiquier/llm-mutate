iteration: 0 generation: def newfun(image): return image.score(['insects', 'a popular candy', 'grass', 'at least one wheel', 'long, thin branches', 'may have windows or a greenhouse'])
iteration: 1 generation: def newfun(image): return image.score(['ornamental nailheads', 'clockwise spiral', 'a couple of small, round recesses', 'panels', 'a pair of snaps or buttons', 'oval'])
iteration: 2 generation: def newfun(image): return image.score([' instructs members of a municipality', 'thin, flexible plastic or foil', 'a network of trails', 'green, leafy plants', 'does not have a back', '... tspaper'])
iteration: 3 generation: def newfun(image): return image.score(['pebbles or small stones in the background', 'perennial herb with long, flat leaves', 'window boxes with flowering plants', 'long neck and tail', 'a small, winged creature', 'a lambs tail'])
iteration: 4 generation: def newfun(image): return image.score(['a type of pastry or cake', 'small, round windows', 'a little door that opens to reveal the inside', 'compact, green plant', 'a type of fruit', 'a toothed wheel'])
iteration: 5 generation: def newfun(image): return image.score(['thin sticks called shrimp sticks', 'large bells or a carillon', 'long, wiggling tongue', ' Trumpet-shaped flowers', 'a metalanguage used in computer programming', 'a long, thin, flexible tube'])
iteration: 6 generation: def newfun(image): return image.score(['a well-known type of sparkling wine', 'may have pedals or buttons', 'dough that is usually leavened with yeast or baking powder', 'may have sprinkles or other toppings', 'puffed rice or corn cereal', 'sandals'])
iteration: 7 generation: def newfun(image): return image.score(['a young, smooth-leaved plant', 'a flowering plant with a single, large blossom on a long stem', 'made of wood or plastic', 'additional features like a fringe at the bottom', 'thin, waxy skin', 'a small, usually furry, animal'])
iteration: 8 generation: def newfun(image): return image.score(['round pieces of dough that are deep-fried', 'cilantro', 'shades of blue and green', 'wood', 'a style of cooking rice', 'steep, rocky cliffs or mountains'])
iteration: 9 generation: def newfun(image): return image.score(['a young, immature plant', 'typically found on fruits and vegetables', 'a section of baked dough', 'subsection of the Digimon anime', 'characterized by compound leaves', 'flies'])
iteration: 10 generation: def newfun(image): return image.score(['covered bridge', 'velvet ropes', 'a tube that covers the needle', 'long spikes or prickles', 'various Christian themes', 'hair growing on the face'])
iteration: 11 generation: def newfun(image): return image.score(['may be used for hay', 'a hood or hood-like structure', 'a leafy green vegetable', 'buttonhole stitching', 'a dark area for the eyes', 'spokes'])
iteration: 12 generation: def newfun(image): return image.score(['sweet or savory', 'about  1-2 inches tall', 'rows of small, white or blue flowers', 'a new plant grows from the crown of the old one', 'a shallow food dish', 'in the shape of a coffee mug'])
iteration: 13 generation: def newfun(image): return image.score(['looping vines', 'blue or purple flowers', 'long, slender fish', 'split peas', 'a Staffordshire knot', 'a small, round container for drinking'])
iteration: 14 generation: def newfun(image): return image.score(['arrowhead-shaped leaves', 'vines climb up posts or trellises', 'a variety of allium', ' Mongoose', 'thin, curled strips of wood', 'used for sewing and embroidery'])
iteration: 15 generation: def newfun(image): return image.score(['used in the kitchen', 'small seeds', 'decorative element in architecture', 'onions, garlic, or other flavorful vegetables', 'a real-estate development company', 'a wig'])
iteration: 16 generation: def newfun(image): return image.score(['a flowering vine with heart-shaped leaves', 'bell-shaped flower clusters', 'long legged wading bird', 'a white button', 'ribbon-like strands of ' 'grass', 'plots of irregularly-shaped land'])
iteration: 17 generation: def newfun(image): return image.score([' (A flowering plant)', 'sand or gravel', 'a popular game', 'honey production', 'long, narrow leaves', 'water-repellent feathers'])
iteration: 18 generation: def newfun(image): return image.score(['a crocodile or alligator', 'a musical note', 'swamp or marsh', 'brown or tan', 'a long, thin snake', 'a small, round, red, berry-like fruit'])
iteration: 19 generation: def newfun(image): return image.score(['pointed, elongated leaves', 'a mansion or large estate', 'brick red or tan', 'a flowering plant', 'an area of green grass', 'a textile made from sheep wool'])
iteration: 20 generation: def newfun(image): return image.score(['found in deserts, forests, plains, or ta Igas', 'an open channel or conduit for water or other fluids', 'any of numerous fungi that form aalfalfa-like mycelium', 'long, thin fingers', 'iron, copper, lead, tin, or zinc', ' elementary school'])
iteration: 21 generation: def newfun(image): return image.score(['hidden face behind slits in hood', 'can make many different animal sounds', 'a 5-pointed star or another shape', 'around flowers or shrubs', 'poisonous', 'found in tropical regions'])
iteration: 22 generation: def newfun(image): return image.score(['movable pulley system', 'conical or tulip-shaped', 'a plant of the genusomena erecta, commonly cultivated for its handsome flowers', 'made from an animal hide', 'saltwater or seawater', 'supports the load'])
iteration: 23 generation: def newfun(image): return image.score(['smells nice. similar to lavender', 'where shipmates relax or take meals', ' woven from reeds, grasses, and other materials', 'relatively small', 'made of bark', 'astringent to most swamp creatures'])
iteration: 24 generation: def newfun(image): return image.score(['instructs members of a municipality', 'thin, flexible plastic or foil', 'a network of trails', 'green, leafy plants', 'does not have a back', 'newspaper'])
iteration: 25 generation: def newfun(image): return image.score(['a plant that blooms flowers', 'pods', 'sticks or twigs', 'leaves arranged in pairs or whorls around the stem', 'waxy', 'root system'])
iteration: 26 generation: def newfun(image): return image.score(['ornamental nailheads', 'clockwise spiral', 'a couple of small, round recesses', 'panels', 'a pair of snaps or buttons', 'oval'])
iteration: 27 generation: def newfun(image): return image.score(['grass or other lawn-like plants', 'rows of sharp, chitinous teeth', 'white, foamy flowers', 'used in stringed instruments', ' combination of colors', 'woolly covering'])
iteration: 28 generation: def newfun(image): return image.score(['flowers grouped in clusters', ' atmosphere is very dark or gloomy', 'Person is either kneeling, bowing, or prostrating themselves', 'stems have tiny hairs', 'Crescent-shaped moon', 'puffed up chest and large eyes'])
iteration: 29 generation: def newfun(image): return image.score(['server rack', 'nodes in a farm', 'similar to an acorn', 'clusters of tall, Omega-3 fatty acids', 'in or near saltwater', 'portion of the alimentary canal'])
iteration: 30 generation: def newfun(image): return image.score(['spikes of purple flowers', 'drawn with the tip of a finger', 'leaves shaped like an elongated heart', 'a portable computer', 'a bright light', 'aromatic alphabetic herb'])
iteration: 31 generation: def newfun(image): return image.score(['chain thank', 'standard plant most commonly Person is either kneeling, bowing, or prostrating themselves', 'skeleton of an animal', 'grass', 'a club', 'used for cleaning surfaces'])
iteration: 32 generation: def newfun(image): return image.score(['indoor or outdoor device', ' a common perennial flower', 'a type of evergreen', 'edge of an ornamental border', 'a pointed or peaked shape', 'unbranched stem'])
iteration: 33 generation: def newfun(image): return image.score(['short, broad leaves', 'chiefly growing in sandy or rocky areas', 'long, slender leaves', 'used in determining directions', ' (A flowering plant)', 'ordinarily orange'])
iteration: 34 generation: def newfun(image): return image.score(['knots of hair', 'hedge maze', 'iceberg lettuce', 'low-lying vegetation', 'exceptionally large breasts', 'a space where two contiguous arches meet'])
iteration: 35 generation: def newfun(image): return image.score(['white, powdery coating on leaves', 'picked by gardeners for its lovely appearance', 'low-growing, woody plant', 'bluish-purple flower clusters', 'delicate, frilly edges', 'rich, well-cultivated soil'])
iteration: 36 generation: def newfun(image): return image.score(['spines or protective outer covering', 'flared, bell-shaped outer petals', 'stamens with large anthers', 'the plant produces showy, funnel-shaped flowers', 'a covering of fine, soft hairs', 'grown commercially in orchards'])
iteration: 37 generation: def newfun(image): return image.score(['rows of complex leaves', 'adapted to grow in saline environments', 'mites on ferns', 'sheds pollen through the air', 'produces berries', 'looks similar to a palm tree'])
iteration: 38 generation: def newfun(image): return image.score(['revolving around a central shaft', 'small, white flowers', 'such as hay, grass, or corn', 'ribs or ribbing', 'on a videocassette', 'mudpack'])
iteration: 39 generation: def newfun(image): return image.score(['panicles of small, green flowers', 'long, pointed leaves', 'minerals such as salt and copper', 'grows up to  2 meters tall', 'has a hard, bright red, single seed', 'makes a gentle humming or buzzing sound'])
iteration: 40 generation: def newfun(image): return image.score(['small evergreen tree', 'seed-producing cone', 'twisted, woolly hair', 'downy plants', 'groundcover', 'ground for burrowing animals'])
iteration: 41 generation: def newfun(image): return image.score(['a young, woolly-leaved plant', 'black and white spotted', 'a round, flat bread roll', 'compound leaves', ' may have a long neck', 'typically found on sandy or dusty ground'])
iteration: 42 generation: def newfun(image): return image.score(['has a long handle', 'sharp, jagged edges on the teeth', 'complete with grasses, mosses, lichens, fungi, and small shrubs', 'round and white', 'small, circular dial', 'long veil flows behind the wearer'])
iteration: 43 generation: def newfun(image): return image.score([' a perennial vine with showy purple flowers', 'present in pitcher plants', 'webbed feet', 'willow trees', 'the fluffy fruit of a dandelion', 'florets arranged in concentric circles'])
iteration: 44 generation: def newfun(image): return image.score(['a plant with prickly parts', 'spines (modified leaves)', 'fleshy, flexible, thorny stems', ' yellow flowers', 'a single point', 'long, slender stems'])
iteration: 45 generation: def newfun(image): return image.score(['supports a building or bridge', 'curved or twisted branches', 'shades of brown and gray', 'little or no undergrowth', 'goat-like features', 'a variety of evergreen trees'])
iteration: 46 generation: def newfun(image): return image.score(['leaves covered with fine whitish powder', 'towering, spreading tree', 'shiny black seeds', ' a long ridge or crest', 'arching branches', 'a long, slender tool'])
iteration: 47 generation: def newfun(image): return image.score(['spiked aquatic plant', 'features floral designs', 'fuzzy, white puffs', 'a prototype', 'type of fern', ' agreeable tune'])
iteration: 48 generation: def newfun(image): return image.score(['heart-shaped leaves', 'tall, upright habit', 'spiky leaves', 'orange-red flowers', ' small, rounded fruits', 'suitable for roasting or boiling'])
iteration: 49 generation: def newfun(image): return image.score(['incised leaves', 'Spartina species', 'a yellow substance', ' Spartina anglica', 'a green, sometimes salt-tolerant grass', 'sparteine'])
iteration: 50 generation: def newfun(image): return image.score(['a flowering plant with a single, large blossom on a long stem', 'clusters of tall, Omega-3 fatty acids', 'a variety of evergreen trees', 'spines (modified leaves)', 'fleshy, flexible, thorny stems', 'little or no undergrowth'])
iteration: 51 generation: def newfun(image): return image.score(['oval-shaped fruit', 'hair like grass', 'circular ring with interlocking sections', 'whitish or pale yellow flowers',  'square or rectangular sails', 'shade of red'])
iteration: 52 generation: def newfun(image): return image.score(['it has a series of gas-filled sacs in its body', 'a small boat or raft', 'enlarged part of a plant stem', 'recurved or curved down', 'a fibrous or grasslike plant', 'a kind of flower'])
iteration: 53 generation: def newfun(image): return image.score(['products containing sugar or sweetener', 'dark green, glossy leaves', 'a style of architectural columns', 'threadlike, spiral structures', ' став or spire', ' Evergreen trees'])
iteration: 54 generation: def newfun(image): return image.score(['odorous, edible plant', 'hinge', 'spring orfurnace', 'a hayfield', 'candytuft', 'a weaving shuttle'])
iteration: 55 generation: def newfun(image): return image.score(['lot income', 'made of bamboo', 'green, aromatic leaves', 'harmonically', 'the edge of each petal is wavy', ' checkerboard pattern'])
iteration: 56 generation: def newfun(image): return image.score(['edges covered with minute hairs', 'shiny black pods', 'tight cluster of red flowers', 'red and green silk-like fibers', 'hair growing in a tuft from the head', 'makes a crunching sound when bitten into'])
iteration: 57 generation: def newfun(image): return image.score(['a tall, spreading plant with showy flowers', 'a usually low, dense shrub', 'may have panicles or catkins', 'limbs covered in hair', 'tough woody stems', 'grows in acidic soil'])
iteration: 58 generation: def newfun(image): return image.score(['absent', 'cone or funnel-shaped', 'altered in honor of special occasions', 'trumpet-shaped flowers', 'leaves that grow directly from the stem', 'onions or other odorous plants'])
iteration: 59 generation: def newfun(image): return image.score(['lush foliage', 'striations on the bark', 'И atoms', 'purple fruits', 'terminal bud', 'downy leaves'])
iteration: 60 generation: def newfun(image): return image.score([' Pointed snout', 'Green leaves', 'Setting powder', 'Instructs members of a municipality', 'Goat-like features', 'Little or no undergrowth'])
iteration: 61 generation: def newfun(image): return image.score(['stalkless flowers', 'whorled branches', 'viny stems', 'seedlike fruit', ' pointed spines', 'a compound leaf'])
iteration: 62 generation: def newfun(image): return image.score(['a large man-made structure', 'linear elements', 'terminal clusters of ' 'small green leaves', 'tapering stems', 'trees and crops are often planted recover the land', ' precis permanence'])
iteration: 63 generation: def newfun(image): return image.score(['sandy beach', 'light green leaves', 'low shrubs', 'pink or red flowers', 'ordinarily reddish-brown', 'a type of evergreen tree'])
iteration: 64 generation: def newfun(image): return image.score([' Cortaderia selloana', 'trailing stems', 'conspicuous tufts of flowers', 'stamens are longer than the sepals', 'may have light-colored stripes', 'may be grown for ornamental purposes'])
iteration: 65 generation: def newfun(image): return image.score(['a characteristic flower', 'an aquatic plant', 'leaf-like structures', 'mistletoe', 'a climbing plant', 'a variety of unrelated plants'])
iteration: 66 generation: def newfun(image): return image.score([' branches that grow oppositely', 'compound leaves with pointed lobes', 'small clusters of green fruit', 'insecticidal soap', 'ligustrum', 'light purple flowers'])
iteration: 67 generation: def newfun(image): return image.score(['covered in short hairs', 'hollow, tubular stems', 'Produces showy flowers', 'Understory plant', 'tufted', 'loads or discharges materials in a vertical direction'])
iteration: 68 generation: def newfun(image): return image.score(['columns', 'spikes of purple flowers', 'reduplicated leaves', 'fuzzy leaves', 'zingiber officinale', 'pinkish-brown stems'])
iteration: 69 generation: def newfun(image): return image.score(['oval-shaped fruit', 'hair like grass', 'circular ring with interlocking sections', 'whitish or pale yellow flowers', 'square or rectangular sails', 'shade of red'])
iteration: 70 generation: def newfun(image): return image.score(['a characteristic flower', 'an aquatic plant', 'leaf-like structures', 'mistletoe', 'a climbing plant', 'a variety of unrelated plants'])
iteration: 71 generation: def newfun(image): return image.score([' goldenrod', 'ring-shaped flowers', 'hollow stem', 'beadlike', 'waxy leaves', 'smooth or hairy leaves'])
iteration: 72 generation: def newfun(image): return image.score(['flowers arranged in a spike or panicle', 'pink or red flowers', 'softly hairy or smooth leaves', 'south american animal', 'erect or spreading shrubs or small trees', 'papery or membranous bracts'])
iteration: 73 generation: def newfun(image): return image.score(['produces clusters of minute, white, floating flowers', 'needle-like leaves', 'powdery, white sub-stance covering the leaves', 'erect, straight stems', 'lichen grows on the rocks', 'non-browser animals'])
iteration: 74 generation: def newfun(image): return image.score(['grasslike plants', 'light green', 'purple flowers', ' leathery leaves', ' cordate leaf bases', 'oil-rich seeds'])
iteration: 75 generation: def newfun(image): return image.score(['willow leaves', 'upright, naked stems', 'catkins often suspended from twigs', 'found in water up to 10 m deep', 'water lilies', 'a swimming stroke'])
iteration: 76 generation: def newfun(image): return image.score(['dwarf birch', 'betula species', ' abundant clusters of small, yellow flowers', ' simple or pinnate leaves', 'small winged fruit', 'silver or golden clusters'])
iteration: 77 generation: def newfun(image): return image.score(['edges are jagged and rough like teeth', ' Pentagon shape', 'dull, drab colors', 'petiole has two or more leaflike projections', 'growsiums', 'articums'])
iteration: 78 generation: def newfun(image): return image.score(['dwarf shrubs', 'evergreen leaves', 'long, thin leaves', 'shiny black seeds', 'usually has a single straight stem', 'spherical flowers'])
iteration: 79 generation: def newfun(image): return image.score(['pink or red flowers', 'spiky leaves', 'upright habit of growth', 'numerous, densely arranged, radially symmetrical flowers', 'thorns or short, sharp spines', 'grows in or near water'])
iteration: 80 generation: def newfun(image): return image.score(['compound leaf', 'round umbels', 'pinnate leaves', 'rows of small, green leaves', 'submersible', 'a hollow stem'])
iteration: 81 generation: def newfun(image): return image.score(['a tree with sky-blue berries', 'evergreen foliage', 'ists on a sandy soil', 'tufted foliage', 'grows in arid regions', 'leaves modified as spines'])
iteration: 82 generation: def newfun(image): return image.score(['horseshoe shaped flowers', 'cluster of leaves', 'seed pods that rattle', 'tall grasses', 'dried flower arrangements', 'the outer covering of an organ or vegetable'])
iteration: 83 generation: def newfun(image): return image.score(['a plant with prickly parts', 'spines (modified leaves)', 'fleshy, flexible, thorny stems', 'yellow flowers', 'a single point', 'long, slender stems'])
iteration: 84 generation: def newfun(image): return image.score(['compound leaves with serrated margins', 'stems covered in tiny hairs', 'plants that are carnivorous', 'container water garden', 'stems that bear leaves and flowers', 'clusters of tiny white flowers'])
iteration: 85 generation: def newfun(image): return image.score(['goblet-shaped flowers', 'found on a prairie', 'bright orange or reddish-orange flowers', 'edible fruit', 'long, straight stems', 'prickly seed pods'])
iteration: 86 generation: def newfun(image): return image.score(['polyphyllum', 'trichomes', 'lime happpy green', 'гоlichen heads', 'bio- interruptible', 'skirt steak'])
iteration: 87 generation: def newfun(image): return image.score(['a flowering plant with large, showy flowers', 'elliptical leaves with serrated edges', 'a cup-shaped flower', 'oval or round leaves', 'growing in clusters on a stem', 'a hint of spice'])
iteration: 88 generation: def newfun(image): return image.score(['short spikes of small purple flowers', 'lower leaves have leaf stalks', 'sweet-smelling flowers', 'thin, wiry stems', 'a mat-forming plant', 'blue or purple flowers'])
iteration: 89 generation: def newfun(image): return image.score(['bluish-purple flowers', 'white or cream flowers', 'long, flexible tube', 'rhomboid shape', 'sparks of yellow light', 'grassy area'])
iteration: 90 generation: def newfun(image): return image.score(['flowers arranged in a spike or panicle', 'pink or red flowers', 'softly hairy or smooth leaves', 'south american animal', 'erect or spreading shrubs or small trees', 'papery or membranous bracts'])
iteration: 91 generation: def newfun(image): return image.score(['dense spikes of small, white or pink flowers', 'predominantly green', 'retuse leaves', 'numerous ovules in each flower', 'shrubs and small trees', 'doubly opposed leaves'])
iteration: 92 generation: def newfun(image): return image.score(['long, coarse grass', 'big bluestem', ' strong-scented herb with pinnately divided leaves', 'Indian grass', 'a native grass of southern United States', 'a tall, slender, perennial grass'])
iteration: 93 generation: def newfun(image): return image.score(['hydrangea-like flowers', 'leaves are heart-shaped or deeply lobed', 'thorns and prickles', 'sterile shoots with clusters of flowers', 'cluster of leaves', 'bark is grey-brown and peeling'])
iteration: 94 generation: def newfun(image): return image.score(['cultivated grasses', 'an ornamental plant', 'a multi-leaved green used in cooking', 'thorns', 'laces', 'a common weed with small white flowers'])
iteration: 95 generation: def newfun(image): return image.score(['a calyx with five lobes', 'branched clusters of flowers', 'African savannah grass', 'woven or braided leaves', 'whitish-pink flowers', 'a thatched roof'])
iteration: 96 generation: def newfun(image): return image.score(['angular branches', 'upright floral spikes', 'pinnatifid leaves', 'grayish-green leaves', 'interwoven twigs', 'loosely tufted perennial grass'])
iteration: 97 generation: def newfun(image): return image.score(['plant with irritating sap', 'shrub or small tree', 'paired or clustered leaves', 'produces leaves, flowers, and fruits', 'freesia', 'spatulate-shaped leaves'])
iteration: 98 generation: def newfun(image): return image.score(['forms dense swards', 'a grass of the genera Stipa and Erianthus', 'feather reed grass', 'annual grass', 'meadow foxtail grass', 'Zebra grass'])
iteration: 99 generation: def newfun(image): return image.score(['ligulate flowers', 'doubly toothed leaves', 'yellow, oval flowers', 'bunch-grass', 'seeds in a silky, white parachute', 'short, membranous stamens'])
iteration: 100 generation: def newfun(image): return image.score(['water lily', 'has leaves that float on the water', 'showy white or pink flowers', ' Common Moorhen and other birds feed on the fruits', 'a useful plant', 'hollow reed-like stem'])
iteration: 101 generation: def newfun(image): return image.score(['some have spines or horns', 'succulent leaves', 'clusters of tiny, yellow flowers', 'tapered leaves', 'a fragrant herb', 'drainage ditches'])
iteration: 102 generation: def newfun(image): return image.score(['codominant plants', 'hollow stem', 'thin leafstalks', 'grasses that spread', ' persistent foliage', 'Filipendula species'])
iteration: 103 generation: def newfun(image): return image.score(['overhang', '"pampas" grass', 'perennial grass that grows up to 6 feet tall', 'distinctive plume-like inflorescence', 'low-maintenance ornamental grass', '(Cortaderia selloana)'])
iteration: 104 generation: def newfun(image): return image.score(['bright green stems', 'velvety leaves', 'a small bird', 'velvety green leaves', 'little or no undergrowth', 'popular evergreen shrub'])
iteration: 105 generation: def newfun(image): return image.score(['broad green leaves', 'flowers typically in a cluster or inflorescence', 'serrated leaves', 'a whitish waxy substance', 'gymnosperms', 'crown-like involucre'])
iteration: 106 generation: def newfun(image): return image.score(['catkins', 'linear leaves', 'toothed margin of leaves', ' pubescent leaves and stems', 'woolly leaves', 'gray or bluish-green leaves'])
iteration: 107 generation: def newfun(image): return image.score(['viviparous', 'bluish green leaves', 'grassy, herbaceous, or woody plants', 'scattered or clustered inflorescence', 'may have small hairs on the leaves', 'usually has a conspicuous calyx'])
iteration: 108 generation: def newfun(image): return image.score(['legumes', 'may have halyards', 'annual or perennial herbs', 'often has one leaf at each stem node', 'whitish powder on leaves and stems', 'medium shrubs'])
iteration: 109 generation: def newfun(image): return image.score(['oat-like flower clusters', 'blade shape leaves', 'hairs on leaves and sheaths', 'low-growing, spreading habit', 'may have purple or pink flowers', 'acts as a ground cover'])
iteration: 110 generation: def newfun(image): return image.score(['inland water', 'spikes of purple flowers', ' cypress', 'hardy plant', 'ring-necked duck', 'This plant grows best along streams'])
iteration: 111 generation: def newfun(image): return image.score(['hollow stem', 'stand of timber', 'ivory-colored flowers', 'seed pods', 'food plant of livestock', 'leaves are usually opposite'])
iteration: 112 generation: def newfun(image): return image.score(['spore-bearing organ', 'sporophyte dominates the plant body', 'fertile shoots terminate in sporangia', 'sporangium describes its reproductive structure', 'vegetative shoots', 'like bracken'])
iteration: 113 generation: def newfun(image): return image.score(['bearded iris leaves', 'vespertine flowers opening in evening', 'growing in dry sandy places', 'a monocot', 'white woolly hairs', 'tall stalks'])
iteration: 114 generation: def newfun(image): return image.score(['green stems and leaves', 'spherical heads of tiny flowers', 'several showy flowers', 'toothed or lobed leaves', 'white, fragrant flowers', 'wiry stems'])
iteration: 115 generation: def newfun(image): return image.score(['pinnately compound leaves', 'minute flowers', 'female flowers on the lower part of the inflorescence', 'low shrub with branches that recline', 'cluster of small flowers that radiate outward from a center', 'flowers are pollinated by the wind'])
iteration: 116 generation: def newfun(image): return image.score(['hairy stems', 'tufted', 'has marcescent leaves', 'acuminate leaves', 'eight or more stamens', 'clustered flowers'])
iteration: 117 generation: def newfun(image): return image.score(['spiky, jagged edges', 'thorny stems', 'grows in dense clusters', 'waxy leaves', 'overlapping scales', ' found in warmer climates'])
iteration: 118 generation: def newfun(image): return image.score(['long, broad leaves', 'bunches of chartreuse or purple grapes', 'usually shrubby', 'a twig or small branch', 'farm or agricultural building', 'iron or steel'])
iteration: 119 generation: def newfun(image): return image.score(['bright green leaves', 'red flowers', 'stellate hairs on leaves', 'woody stems', ' annual herbs', 'taproots'])
iteration: 120 generation: def newfun(image): return image.score(['knobbed spirals', 'borders with extensive low vegetation on the ground', ' pubescent (covered in soft hairs) shoots', 'pedicellate (on short stalks) flowers', 'tenate (with a distinct petiole and acuminate leaf tip) leaves', 'pale yellow flowers'])
iteration: 121 generation: def newfun(image): return image.score(['grown mostly for ornamental purposes', 'a border around the edge of a path or platform', 'a hedge', 'flowers having four or five petals', 'stalks near the base of the plant', 'cluster of flowers'])
iteration: 122 generation: def newfun(image): return image.score(['molasses grass', 'a tall grass', ' tufted hair grass', 'Aristida purpurea', 'silver hair grass', 'wire grass'])
iteration: 123 generation: def newfun(image): return image.score(['stems not green', 'brittle', 'a powdery coating on stems and leaves', 'no true leaves', 'color pattern on flowers, foliage or stems', 'a mixture of tiny bells'])
iteration: 124 generation: def newfun(image): return image.score(['pampas grass', 'big bluestem', 'Indian grass', ' needle grass', 'blue wildrye', 'an aquatic plant'])
iteration: 125 generation: def newfun(image): return image.score(['bunchgrass', 'tufted hair grass', 'spindi shaped flowers', ' small flowers', 'curved, pointed sepal teeth', 'fuzzy leaves'])
iteration: 126 generation: def newfun(image): return image.score(['glaucous leaves', 'blue flowers', 'pubescent stems', 'spreading branches', 'linear leaves', 'grows in shady areas'])
iteration: 127 generation: def newfun(image): return image.score(['whitish, open flowers', 'oval fruit', 'pinnate leaves', 'red or green stems', 'paintbrush-like flower clusters', 'spiny bracts'])
iteration: 128 generation: def newfun(image): return image.score(['green leaves', 'spikes of small greenish flowers', 'monocots', 'spiky fruits', 'bracts', 'creeping stems'])
iteration: 129 generation: def newfun(image): return image.score(['green sp states', 'resembles a fern', 'woody perennial herb', 'ovate leaves', 'greenish-white flowers', 'a salt marsh plant'])
iteration: 130 generation: def newfun(image): return image.score(['thorny branches', 'covered with small hairs', 'pointed lobes', 'fuzzy leaves', 'short stalks', 'shining flowers'])
iteration: 131 generation: def newfun(image): return image.score(['waxy coating', 'spreading perennial herb', 'greenish-purple flowers', 'foragin grasses', ' culms', 'growing grasses'])
iteration: 132 generation: def newfun(image): return image.score(['s tufted perennial grass', 'silver blue-eyed grass', ' tufted hair grass', ' Aristida purpurea', 'molasses grass', 'green-or blue-colored flowers'])
iteration: 133 generation: def newfun(image): return image.score(['star-shaped flowers', 'hairy leaves', 'spines on stems', 'papery bark', ' large shrub/small tree', 'dense foliage'])
iteration: 134 generation: def newfun(image): return image.score(['alpine plant', 'tight cluster of white flowers', 'toothed leaves', 'wiry stems', 'flowers in loose open panicles', 'white or slightly tinged with pink or purple'])
iteration: 135 generation: def newfun(image): return image.score(['big bluestem', 'Indian grass', 'little bluestem', 'switch grass', 'a native grass of  central North America', 'a native grass of prairies south of 30 latitude'])
iteration: 136 generation: def newfun(image): return image.score(['gray to dark green leaves', ' spherical clusters of minute flowers', 'reddish-purple flowers', 'evergreen shrub', 'edges of the leaves have rounded teeth', 'grows in wet soils'])
iteration: 137 generation: def newfun(image): return image.score(['red or green stems', 'bright green leaves', 'leaves and stems are pubescent', 'twining habit', 'small greenish-white flowers', 'has distinctive odor'])
iteration: 138 generation: def newfun(image): return image.score([' spires of small greenish-white flowers', 'pale green knobs', 'conical or broadly conical', 'powdery (covered in small scales) leaves and stems', 'rimmed by bracts', 'monomorphic (all the flowers are the same size and shape) inflorescence'])
iteration: 139 generation: def newfun(image): return image.score(['pampas grass', 'feather reed grass', 'fountain grass', 'a lange silvery-gray grass', 'a tall ornamental grass', 'a warm-season grass'])
iteration: 140 generation: def newfun(image): return image.score(['a arborescent bamboo', 'smooth or hairy stems', 'tight clumps', 'stout rhizomes', 'pendorous or drooping inflorescences', 'large membraneous auricles'])
iteration: 141 generation: def newfun(image): return image.score(['a potted Easter lily', 'a flowering branch with non-green bracts distinguishing it from the true grapes', 'tall grass', 'grass grown for hay', 'Japanese silver grass', 'bunch-type fountain grass'])
iteration: 142 generation: def newfun(image): return image.score(['oblong leaves', 'fuzzy hairs on leaves and stems', 'several (3–) 5–11(–17) leaflets that are dense and hairy', ' dense inflorescence of small white flowers', 'spreading hairs on the stem', 'hairy calyx'])
iteration: 143 generation: def newfun(image): return image.score(['smooth or waxy leaves', 'green flowers', 'upright growth', 'bluish flowers', 'simple or compound leaves', 'sweet scent'])
iteration: 144 generation: def newfun(image): return image.score(['mossy saxifrage', 'moist exposed rocky areas', 'thin, wiry stems', 'whitish or greenish flowers', ' arctic-alpine plant', 'grows in rocky crevices'])
iteration: 145 generation: def newfun(image): return image.score(['flowers that grow in clusters', 'thimble-like flowers', 'dark brown stems', 'shrubby or treelike growth habit', 'a nettle', 'often found on dry, sandy soils'])
iteration: 146 generation: def newfun(image): return image.score(['develops rounded brown seedheads', 'pale blue or pink bell-shaped flowers', ' dark green leaves', 'evergreen leaves', 'pyramidal clusters of flowers', '(Phlomis russeliana)'])
iteration: 147 generation: def newfun(image): return image.score(['panicles of small green flowers', ' very narrow leaves', 'tangled masses of slender branchlets', 'leaves triangle-shaped', 'Indian pipe plant', 'plume-like or horse-tail-like inflorescence'])
iteration: 148 generation: def newfun(image): return image.score(['a species of sedge', 'three-angled spikelets on long stalks', 'blades taper to a fine point', 'occur in wetlands', 'bunch grass', 'thatching grass'])
iteration: 149 generation: def newfun(image): return image.score([' yellow-green flowers', 'opposite leaf arrangement', 'a common name for Papaver orientale', 'obovate leaves', 'a plant with no spines or thorns', 'blue-green leaves'])
iteration: 150 generation: def newfun(image): return image.score(['pale purple flowers in rounded clusters', 'densely hairy stems and leaves', 'wiry stems', 'used in Mediterranean dishes', 'small shrub', '(Lavandula angustifolium)'])
iteration: 151 generation: def newfun(image): return image.score(['white flowers', 'bush honeysuckle', 'pith', 'fragrant flowers', 'lobed or mitten-shaped leaves', 'common fragrance'])
iteration: 152 generation: def newfun(image): return image.score(['tall grasses', 'grass family', 'seed heads', 'flat blades of grass', 'creeping grass', 'clumps of grass'])
iteration: 153 generation: def newfun(image): return image.score(['ligulate flowers', 'borders with extensive low vegetation on the ground', 'compound leaves with serrated margins', ' s tufted perennial grass', 'pale blue or pink bell-shaped flowers', ' wiry stemmed plants'])
iteration: 154 generation: def newfun(image): return image.score(['grasslike herb with small flower spikes', 'tubular floral arrangement', 'very small leaves', 'scalelike leaves', 'grows in dense stands', 'little leaf'])
iteration: 155 generation: def newfun(image): return image.score(['whitish or greenish flowers', 'moist exposed rocky areas', 'thin, wiry stems', 'arctic-alpine plant', 'mossy saxifrage', 'grows in rocky crevices'])
iteration: 156 generation: def newfun(image): return image.score(['perennial grasses', 'bunch grasses', 'seedheads', ' little bluestem', 'a tall grass', 'blue blades of grass'])
iteration: 157 generation: def newfun(image): return image.score(['obovate leaves', 'yellow-orange flowers', ' branching stems', 'hairy leaves', 'grows in partial shade', 'greenish-yellow'])
iteration: 158 generation: def newfun(image): return image.score(['bush with dark green leaves', 'whitish wool', 'wheels made of rubber', 'square windows', 'animal hide', 'lake plants'])
iteration: 159 generation: def newfun(image): return image.score(['green leaves', 'spike or panicle inflorescence', 'common medicinal herb ', 'a perennial herb', 'small, yellowish flowers', 'found in damp or wet places'])
iteration: 160 generation: def newfun(image): return image.score(['cane with a curved stem', 'reed-like plant', 'pampas grass', 'feathery plumes', 'arundo donax', 'a large clump-forming grass'])
iteration: 161 generation: def newfun(image): return image.score(['grasslike herbs', 'herbage', 'pale-colored flowers', 'grassy', 'blades of grass', 'tufted'])
iteration: 162 generation: def newfun(image): return image.score(['blue-green or yellow-green leaves', 'broadly winged petioles', 'brownish-yellow flowers', 'glandular hairs', 'maps or charts', 'channelled and usually hairy stems'])
iteration: 163 generation: def newfun(image): return image.score(['wiry stemmed plants', 'may be planted in a garden', ' tufted perennial grass', ' borders with extensive low vegetation on the ground', 'ligulate flowers', 'pale blue or pink bell-shaped flowers'])
iteration: 164 generation: def newfun(image): return image.score(['biennial plant with apayload of small flowers', 'inflorescence is a raceme', 'short-lived or annual plants', ' simple leaves alternate on stem', 'sessile leaves', 'inconspicuous flowers'])
iteration: 165 generation: def newfun(image): return image.score(['angular branches', 'upright floral spikes', 'pinnatifid leaves', 'grayish-green leaves', 'interwoven twigs', 'loosely tufted perennial grass'])
iteration: 166 generation: def newfun(image): return image.score(['a species of sedge', 'three-angled spikelets on long stalks', 'blades taper to a fine point', 'occur in wetlands', 'bunch grass', 'thatching grass'])
iteration: 167 generation: def newfun(image): return image.score(['yellow-green flowers', 'aromatic foliage', 'toothed leaves', 'birch-like bark', 'a small evergreen tree', 'resembling potpourri'])
iteration: 168 generation: def newfun(image): return image.score(['perennial grasses', 'bunch grasses', 'seedheads', ' little bluestem', 'a tall grass', 'blue blades of grass'])
iteration: 169 generation: def newfun(image): return image.score(['powdery mildews', 'big bluestem grass', 'little bluestem grass', 'prairie brome grass', 'prairie dropseed grass', 'blue grama grass'])
iteration: 170 generation: def newfun(image): return image.score(['bright blue flowers', 'bunchgrass', 'bright orange flowers', 'woolly leaves', 'ball-shaped inflorescence', 'some are poisonous'])
iteration: 171 generation: def newfun(image): return image.score(['may have yellow or white flowers', 'shiny black seeds', '(Lamium maculatum)', 'four-petaled flowers', 'may have variegated leaves', 'erect habit'])
iteration: 172 generation: def newfun(image): return image.score(['tall grasses', 'ornamental tufted plant', 'pampas grass', '4-angled stems', 'grasses with sharp, pointed leaves', 'from asia'])
iteration: 173 generation: def newfun(image): return image.score(['perennial that may grow up to 10 feet tall', 'used for hay', 'compound leaves', 'a cultivated grass', 'Warm season grass', 'an ornamental grass'])
iteration: 174 generation: def newfun(image): return image.score(['a peppermint-scented herb', 'bright green or yellowish-green', 'compound pinnacle leaves', 'low vines with threadlike branches', 'tubular purple flowers', 'American elderberry'])
iteration: 175 generation: def newfun(image): return image.score(['chartreuse flowers', 'speckled leaves', 'blue-green foliage', 'spiky leaves', 'autumn leaves', 'grows in clusters'])
iteration: 176 generation: def newfun(image): return image.score(['bunchgrass', 'wiry stems', 'pointed sepal teeth', 'dense inflorescence with many small flowers', 'hollow or pithy stems', 'separate or (occasionally) united Scheelite petioles'])
iteration: 177 generation: def newfun(image): return image.score(['tall fescue', 'a field grass (Poa pratensis)'])
iteration: 178 generation: def newfun(image): return image.score(['a hand-held gardening tool', 'creeping stems', 'shrublet with dark green leaves', 'spikes since side shoots', 'tendrils on disputable terminal shoots', 'flowers rather small and bell-shaped'])
iteration: 179 generation: def newfun(image): return image.score(['angular branches', 'rassemble wild or cultivated for food', 'erect panicle', 'cultivated as a pasture crop', 'seed heads', ' long slender leaves'])
iteration: 180 generation: def newfun(image): return image.score(['panicles of small green flowers', ' very narrow leaves', 'tangled masses of slender branchlets', 'leaves triangle-shaped', 'Indian pipe plant', 'plume-like or horse-tail-like inflorescence'])
iteration: 181 generation: def newfun(image): return image.score(['spherical flowers', 'shiny black seeds', 'long, thin leaves', 'evergreen leaves', 'dwarf shrubs', 'white flowers'])
iteration: 182 generation: def newfun(image): return image.score(['Dark green, glossy leaves', 'Needle-like leaves', 'Interwoven branches', 'dwarf or miniature varieties', 'including birch', 'yellows, oranges, reds'])
iteration: 183 generation: def newfun(image): return image.score(['opposite decussate leaves', 'tubular flowers', 'green leaves', 'hisspid hairs', 'stems have several leaf-like bracts escending to the inflorescence', 'clusters of small, white, green, pink, red, purple, or yellow flowers'])
iteration: 184 generation: def newfun(image): return image.score(['wiry stemmed plants', 'tufted perennial grass', 'ligulate flowers', 'borders with extensive low vegetation on the ground',  'pale blue or pink bell-shaped flowers', 'compound leaves with serrated margins'])
iteration: 185 generation: def newfun(image): return image.score(['soft or woolly leaves', 'spike or panicle inflorescence', 'erect or spreading shrubs', 'grows in sandy soils', ' evergreen foliage', 'strong-scented leaves'])
iteration: 186 generation: def newfun(image): return image.score(['several species of panic grass', 'a common badge or emblem', 'spp. are sometimes called nest plants', 'pretty maiden grass', 'porcupine sedge', 'bunchgrass'])
iteration: 187 generation: def newfun(image): return image.score(['surface ornamentation', 'sections of stamens', 'primary host plant for', 'divided into many narrow channels', 'borne on stalks', 'grows along river banks'])
iteration: 188 generation: def newfun(image): return image.score(['a grazing plant', 'densely tufted perennial grass', 'a tall grass', ' dark green, coarse leaves', 'a wetland plant', 'grows along streams'])
iteration: 189 generation: def newfun(image): return image.score(['a mat-forming perennial grass', 'brightly colored', ' Hordeum marinum', 'a extensive mat of interwoven stems', 'densely flowered panicle', 'stems hairy at the base'])
iteration: 190 generation: def newfun(image): return image.score(['winter-hardy grass', 'redtop grass', ' Carl cave Johnson grass', 'guinea grass', 'sweet woodruff', 'a cool-season grass'])
iteration: 191 generation: def newfun(image): return image.score(['willow-like leaves', 'produces woad', ' pubescent leaves', 'densely arranged tiny flowers', 'suitable for making tea', 'found along streambanks'])
iteration: 192 generation: def newfun(image): return image.score(['compound pinnate leaves', 'grows in dry pastures or waste places', 'umbelliform flowers', 'terminal spike like a clover', 'stalks may turn purple or red in the fall', 'fruiting heads in groups'])
iteration: 193 generation: def newfun(image): return image.score(['a perennial bunchgrass', 'upland bent grass', ' delicate grass', ' hairy woodland grass', 'mesic grass', 'tall bromegrass'])
iteration: 194 generation: def newfun(image): return image.score(['muhly grass', 'ryegrass species', 'individual stems terminate in panicles', 'root tissues may be*****', 'blades may grow up to five inches', 'deep-seated root system'])
iteration: 195 generation: def newfun(image): return image.score(['variegated weeping sedge', 'types of sedge', 'a sedge', 'creeping sedge', 'tall sedge', 'purple nutsedge'])
iteration: 196 generation: def newfun(image): return image.score(['Lepidium sativum', 'ovate leaves', 'white flowers', 'a compact inflorescence', 'sternches are longer than the sepals'])
iteration: 197 generation: def newfun(image): return image.score([' broadleaf foliage', 'stems lying on the ground', 'tightly rolled leaves', 'create evergreen shrubs', ' tiny fruits', 'a waxy coat'])
iteration: 198 generation: def newfun(image): return image.score(['an ornamental grass with blue-green leaves', 'silver sage', 'purple fountain grass', 'blue oats grass', 'zebra grass', '(Miscanthus sinensis)'])
iteration: 199 generation: def newfun(image): return image.score([' grandes herbes ont des paillettes', 'a swamp grass', 'a common name for Typha latifolia', 'a sedge', 'sanguine root', ' papyrus sedge'])
