iteration: 0 generation: def newfun(image): return image.score(['a plant with red, juicy fruit', 'yellow petals', 'pale pink flowers', ' wire or wicker', 'light green', 'smooth, shiny leaves'])
iteration: 1 generation: def newfun(image): return image.score(['yelow or orange flower', 'esparto or other grass', ' Majesty Palm', 'pampas grass', 'feather duster', 'clusters of small, white flowers'])
iteration: 2 generation: def newfun(image): return image.score(['Conical, granular, or columnar', 'grayish-brown or reddish-brown', 'a design with leaves, flowers, or other plant-like elements', 'an arch or dome', 'shallow, curved recesses', 'american flag'])
iteration: 3 generation: def newfun(image): return image.score(['mounds of dirt', 'may have a poll', 'dense foliage', 'year-round, cool-weather grasses', 'a rice-like flower', 'white stripe at the eye'])
iteration: 4 generation: def newfun(image): return image.score(['a flowering plant in the figwort family', 'a tight cluster of green, fragrant leaves', 'blade-like wings on the sides', 'a personal adornment', 'columnar joints', 'a distinct odor'])
iteration: 5 generation: def newfun(image): return image.score(['a small pool of water', 'typically green', 'a number of small, round objects', 'linen, cotton, or other soft material', 'anthropomorphic', 'has a round, furry tail'])
iteration: 6 generation: def newfun(image): return image.score(['marshy vegetation', 'genus Typha', ' Cat Tails', 'III catkins', 'emergent vegetation', 'waxy flowers'])
iteration: 7 generation: def newfun(image): return image.score(['a pair of compound eyes', 'staminate flowers are catkin-like', 'deltoid-shaped seed', ' woven or braided from reeds, rushes, or grasses', 'a decorative hanging basket or pot', 'may be served with béarnaise sauce'])
iteration: 8 generation: def newfun(image): return image.score(['stalks that are thin and fibrous', 'found in gardens or landscapes', 'a protozoan', 'typically found indoors', 'a cane or crutch', 'a hard seed in the center'])
iteration: 9 generation: def newfun(image): return image.score(['a pair of compound eyes', 'staminate flowers are catkin-like', 'deltoid-shaped seed', 'woven or braided from reeds, rushes, or grasses', 'a decorative hanging basket or pot', 'may be served with béarnaise sauce'])
iteration: 10 generation: def newfun(image): return image.score(['mouse-like', 'long, pointed beak', 'rbAreaus', 'prickly stem', 'reddish-brown', 's projecting back'])
iteration: 11 generation: def newfun(image): return image.score(['a wetland plant with broad leaves', 'a rush-like plant', 'hardy perennial', 'grass-like leaves', 'leafy', 'a long, thin stem'])
iteration: 12 generation: def newfun(image): return image.score(['bracts surrounding small flowers', 'bunch grass', 'may be used as a garden ornamental', 'buds are covered with bracts', ' Buddha bellies', 'an inflorescence'])
iteration: 13 generation: def newfun(image): return image.score(['slender, leguminous plants', 'blue, purple, or pink flowers', 'a round, button-like object on a long cord', 'a fork', 'ткаче transmits weight and sends message', 'тоthingummy'])
iteration: 14 generation: def newfun(image): return image.score(['a pair of compound eyes', 'staminate flowers are catkin-like', 'deltoid-shaped seed', ' woven or braided from reeds, rushes, or grasses', 'a decorative hanging basket or pot', 'may be served with béarnaise sauce'])
iteration: 15 generation: def newfun(image): return image.score(['a composite plant', 'covered with a soft, woolly hair', 'terminal clusters of small white or green flowers', 'found in deserts', 'a worker bee', 'twigs, branches, or other woody parts'])
iteration: 16 generation: def newfun(image): return image.score(['a perennial herb', 'nonwoody plant', 'grass-like foliage', 'shallow water or saturated soil', 'cattails', 'winter buds'])
iteration: 17 generation: def newfun(image): return image.score(['dahlia flower', 'dandelion flower', 'mums or chrysanthemum flower', 'pink or red flower', 'tulip', 'walnut'])
iteration: 18 generation: def newfun(image): return image.score(['pinnate leaves', 'thousands of tiny, identical individuals', 'thorns', 'legs, if it has them, end in powerful hooves', 'a piece of wood or plastic', 'shiny black with specks'])
iteration: 19 generation: def newfun(image): return image.score(['produces thorns', 'waxy leaves', 'leaves producing seeds', 'a complex network of fibers', 'covers', 'may have irritant properties'])
iteration: 20 generation: def newfun(image): return image.score(['ground ivy', 'common carpet', 'cross-shaped', ' celandine', 'bunch grass', 'cdot rust fungus'])
iteration: 21 generation: def newfun(image): return image.score(['stands of bamboo', 'eelgrass', ' cordgrass', ' salt marsh hay', 'spartina', ' TRUE wild rice'])
iteration: 22 generation: def newfun(image): return image.score(['bunch grass', 'closed inflorescences', 'tussock', ' Needle and Thread', 'blue wild rye', 'Prairie Bunch grass'])
iteration: 23 generation: def newfun(image): return image.score(['coarse, hairy leaves', 'masses of showy, funnel-shaped flowers', 'woolly, leguminous plants', 'tan, reddish-brown, or nearly white fur', 'delicate, translucent wings', 'coiled, spiral shell'])
iteration: 24 generation: def newfun(image): return image.score(['grasses, sedges, and rushes', 'macrophytes', 'wetlands vegetation', 'sparsely branched', 'seedheads', 'easily confused with bullrushes'])
iteration: 25 generation: def newfun(image): return image.score(['bipinnately compound leaves', 'licorice scent', 'a rush or sedge-like plant', 'linear or boat-shaped seed', 'twig-like stems', 'small to large lizard'])
iteration: 26 generation: def newfun(image): return image.score(['branching stems', 'woody plant', 'hairy or woolly texture', 'bell-shaped flowers', 'white or cream flowers', 'clustered fruits'])
iteration: 27 generation: def newfun(image): return image.score(['a hayfield', 'cattails', 'bulrushes', 'irises', 'water lilies', 'milfoil'])
iteration: 28 generation: def newfun(image): return image.score(['any of several related or similar plants', 'often tangled or intertwined branches', 'dozens of white flowers on a single stalk', 'a highly recognizable plant', 'related to carnivorous plants', 'glands on the leaves and stems'])
iteration: 29 generation: def newfun(image): return image.score(['twigs', 'grass', 'pampas', 'feather reed', 'Big Bluestem', 'Indian grass'])
iteration: 30 generation: def newfun(image): return image.score(['bunchgrass', 'pampas grass', 'purple coneflower', 'little bluestem', 'coma paniculata', 'Purple Love Grass'])
iteration: 31 generation: def newfun(image): return image.score(['California oat grass', 'light-colored flowers in a spike', 'dark green leaves', 'a pillow-like plant', 'blue wild rye', 'Lyme grass'])
iteration: 32 generation: def newfun(image): return image.score(['bunch grass', 'rye or fescue', 'switchgrass', 'ryegrass', 'tall oat grass', 'vegetative reproductive structures'])
iteration: 33 generation: def newfun(image): return image.score(['brome grass', 'alfalfa', 'wild rye', 'crabgrass', 'rye grass', 'foxtails'])
iteration: 34 generation: def newfun(image): return image.score(['cattails', 'waxy flowers', 'tend to be tall', 'typha', 'bulrush', 'cotton grass'])
iteration: 35 generation: def newfun(image): return image.score(['found in shallow water', 'grass-like leaves', 'clusters of grass-like flowers', 'slender stems', 'woody rhizomes', 'adapted to wetlands'])
iteration: 36 generation: def newfun(image): return image.score(['sparsely branched', 'big bluestem', 'Indian grass', 'switchgrass', 'little bluestem', 'side oats grama'])
iteration: 37 generation: def newfun(image): return image.score(['pampas grass', 'purple coneflower', 'bee balm', 'smooth-leaved aster', 'blue-eyed grass', 'nodding onions'])
iteration: 38 generation: def newfun(image): return image.score(['branching habit', 'woody or herbaceous', 'tooth-like leaves', 'erect flowering stem', 'composite flowers', 'small trees'])
iteration: 39 generation: def newfun(image): return image.score(['grasses, sedges, and rushes', 'wetlands plant', 'cat tails', 'bullrushes', 'purple loosestrife', 'waterlilies'])
iteration: 40 generation: def newfun(image): return image.score(['big bluestem', 'little bluestem', 'Indian grass', 'eastern gamagrass', 'Switchgrass', 'tall fescue'])
iteration: 41 generation: def newfun(image): return image.score(['big bluestem', 'little bluestem', 'Indian grass', 'eastern gamagrass', 'Switchgrass', 'tall fescue'])
iteration: 42 generation: def newfun(image): return image.score(['spikes of blue, funnel-shaped flowers', 'spiky leaves', 'mullein', 'chenille', 'figwort', 'lance-shaped leaves'])
iteration: 43 generation: def newfun(image): return image.score(['salt tolerant', 'side oats grama', 'switchgrass', 'little bluestem', 'indian grass', 'Big Bluestem'])
iteration: 44 generation: def newfun(image): return image.score(['smooth- Barcelona Sedge', 'Purpletop Vervain', 'tall ironweed', 'wild quinine', 'sweet goldenrod', 'Rattlesnake Master'])
iteration: 45 generation: def newfun(image): return image.score(['cattails or bulrushes', 'tallgrass prairie', 'a perennial grass', 'dry prairie', 'clumps of grass with a few tall stalks', 'sand prairie'])
iteration: 46 generation: def newfun(image): return image.score(['cattails', 'typha latifolia', 'narrowleaf cattail', 'broadleaf cattail', 'bullrush', 'bulrush'])
iteration: 47 generation: def newfun(image): return image.score(['muhly grass', 'sweet woodruff', 'deer grass', 'corn', 'little bluestem', ' switchgrass'])
iteration: 48 generation: def newfun(image): return image.score(['perennial weed', 'downy leaves', 'pungent or unpleasant odor', 'angular stems', 'terminal spikes of small flowers', 'sticky seeds'])
iteration: 49 generation: def newfun(image): return image.score(['purple coneflower', 'smooth aster', 'daisy fleabane', 'sneezeweed', 'ironweed', 'joe-pye weed'])
iteration: 50 generation: def newfun(image): return image.score(['yellow coneflower', 'tall ironweed', 'sneezeweed', 'wild quinine', 'woodbine', 'joe-pye weed'])
iteration: 51 generation: def newfun(image): return image.score(['wetlands vegetation', 'zanys', 'seedheads', 'big bluestem', 'Indian grass', 'switchgrass'])
iteration: 52 generation: def newfun(image): return image.score(['bunch grass', 'cattails', 'sneezeweed', 'joe-pye weed', 'waxflower', 'bulrush'])
iteration: 53 generation: def newfun(image): return image.score(['lignum root', 'water hemlock', 'bulrush', 'wild rice', 'cattails', 'sedges'])
iteration: 54 generation: def newfun(image): return image.score([' strongly scented flowers', ' seedheads', 'blade-like leaves', 'spiky flowers', ' dense clusters of small green flowers', 'dense, rounded clumps'])
iteration: 55 generation: def newfun(image): return image.score(['prairie clover', 'prairie Junegrass', 'wild licorice', ' Indian Paintbrush', 'tall coneflower', 'wild indigo'])
iteration: 56 generation: def newfun(image): return image.score(['low mounded or flat-topped shrub', 'Feather Reed Grass', 'flat parallel groups of branches', 'light purple spikelets', 'dark green leaves', 'distinctive inflorescence'])
iteration: 57 generation: def newfun(image): return image.score(['country grass', 'pasture grass', 'meadow foxtail', 'sand lovegrass', 'blue lovegrass', ' western wheatgrass'])
iteration: 58 generation: def newfun(image): return image.score(['salt marsh grass', 'sudangrass', 'sorghum', 'pigweed', 'prostrate knotweed', 'ragweed'])
iteration: 59 generation: def newfun(image): return image.score(['a grass', 'bunchgrass', 'sod-forming grass', 'tall fescue', 'ky into sod', 'perennial ryegrass'])
iteration: 60 generation: def newfun(image): return image.score(['rushes', 'cattails', 'wild millet', 'little bluestem', 'tall ironweed', ' Indiangrass'])
iteration: 61 generation: def newfun(image): return image.score(['sorghum', 'sudangrass', 'salt marsh hay', 'big bluestem', 'switchgrass', 'indian grass'])
iteration: 62 generation: def newfun(image): return image.score(['bunchgrass', 'big bluestem', 'Indian grass', 'switchgrass', 'seed', 'buffalo grass'])
iteration: 63 generation: def newfun(image): return image.score(['smooth- Barcelona Sedge', 'Purpletop Vervain', 'tall ironweed', 'wild quinine', 'sweet goldenrod', 'Rattlesnake Master'])
iteration: 64 generation: def newfun(image): return image.score(['andropogon', 'bluestem grass', 'bunchgrass', 'sand love grass', 'panic grass', 'prairie brome'])
iteration: 65 generation: def newfun(image): return image.score(['Wild carrots', ' dry stalks', 'rattlesnake master', 'fibrous', 'beard grass', 'button snakeroot'])
iteration: 66 generation: def newfun(image): return image.score(['smooth- Barcelona Sedge', 'Purpletop Vervain', 'tall ironweed', 'wild quinine', 'sweet goldenrod', 'Rattlesnake Master', 'Small gardens'])
iteration: 67 generation: def newfun(image): return image.score(['Typha glauca', 'Typha angustifolia', 'Typha latifolia', 'Typha shuttleworthii', 'Typha minima', 'Typha pallida'])
iteration: 68 generation: def newfun(image): return image.score(['milkweed', 'asclepias', 'butterfly weed', 'butterfly milkweed', 'purple milkweed', 'butterfly love plant'])
iteration: 69 generation: def newfun(image): return image.score(['switchgrass', 'sudangrass', 'sorghum', 'Indian grass', 'big bluestem', 'prairie brome'])
iteration: 70 generation: def newfun(image): return image.score(['joe-pye weed', 'wild quinine', 'sneezeweed', 'tall ironweed', 'yellow coneflower', ' Indian grass'])
iteration: 71 generation: def newfun(image): return image.score(['Sweet Goldenrod', 'Rattlesnake Master', 'Wild Quinine', 'Tall Ironweed', 'Joe-Pye Weed', 'sneezeweed'])
iteration: 72 generation: def newfun(image): return image.score(['smooth- Barcelona Sedge', 'Purpletop Vervain', 'tall ironweed', 'wild quinine', 'sweet goldenrod', 'Rattlesnake Master', 'Woodland Edges'])
iteration: 73 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus haspan', 'Cyperus sanguineus', 'Cyperus alternifolius', 'Scirpus spp.'])
iteration: 74 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus fuscus', 'Cyperus eragrostis', 'Cyperus granatensis', 'Cyperus Grayanus'])
iteration: 75 generation: def newfun(image): return image.score(['Persicaria maculosa', 'Persicaria pensylvanica', 'Polygonum persicaria var. engelmannianum', 'Polygonum persicaria var. latifolium', 'Polygonum persicaria var. typicum', 'Polygonum uncertainum'])
iteration: 76 generation: def newfun(image): return image.score(['thrives in swamps', 'sIlny or glandular hairs', 'grass-like leaves', 'spikes of greenish-yellow flowers', 'oval, woody fruits', 'skeleton of a dead animal'])
iteration: 77 generation: def newfun(image): return image.score(['Eupatorium album', 'Eupatorium perfoliatum', 'Eupatorium rugosum', 'Eupatorium analyzanum', 'Eupatorium maculatum', 'Eupatorium during irre reduction'])
iteration: 78 generation: def newfun(image): return image.score(['Carex pendula', 'Carex curvicaule', 'Carex rostrata', 'Carex paleacea', 'Carex festucacea', 'Carex pen interrupted'])
iteration: 79 generation: def newfun(image): return image.score(['prairie Junegrass', 'wild licorice', 'prairie clover', 'tall coneflower', 'big bluestem', 'little bluestem'])
iteration: 80 generation: def newfun(image): return image.score(['typha angustifolia', 'typha latifolia', 'narrowleaf cattail', 'broadleaf cattail', 'bulrush', 'grass'])
iteration: 81 generation: def newfun(image): return image.score(['Indiangrass', 'Rattlesnake Master', 'tall coneflower', 'wild quinine', 'tall coreopsis', 'dark-eyed coneflower', 'smooth aster'])
iteration: 82 generation: def newfun(image): return image.score(['wetLand plant', 'grass-like leaves', 'seed head', 'spiky flower', 'cattails', 'typha'])
iteration: 83 generation: def newfun(image): return image.score(['Water pigweed', 'Water pigweed submerged form', 'Redroot pigweed', 'Green pigweed', 'Amaranth pigweed', 'Pigweed'])
iteration: 84 generation: def newfun(image): return image.score(['Sweet Goldenrod', 'Rattlesnake Master', 'tall ironweed', 'Purpletop Vervain', 'Wild Quinine', 'Woodland Edges', 'smooth- Barcelona Sedge'])
iteration: 85 generation: def newfun(image): return image.score(['Tall Ironweed', 'Wild Quinine', 'Joe-Pye Weed', 'Yellow Coneflower', 'sneezeweed', 'Rattlesnake Master'])
iteration: 86 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus fuscus', 'Cyperus eragrostis', 'Cyperus grayanus'])
iteration: 87 generation: def newfun(image): return image.score(['Rattlesnake Master', 'Butterfly weed', 'Wild quinine', 'sweet goldenrod', 'tall ironweed', 'Purpletop vervain'])
iteration: 88 generation: def newfun(image): return image.score(['Alchemilla mollis', 'Alchemilla xanthochloa', 'Alchemilla vulgaris', 'Alchemilla arvensicola', 'Alchemilla glauca', 'Alchemilla Mount Everest'])
iteration: 89 generation: def newfun(image): return image.score(['Juncus acutus', 'Juncus arcticus', 'Juncus canadensis', 'Juncus conglomeratus', 'Juncus effusus', 'Juncus trifidus'])
iteration: 90 generation: def newfun(image): return image.score(['Cyperus eragrostis', 'Cyperus malaccensis', 'Cyperus tenerrimus', 'Cyperus usterii', 'Cyperus squarrosus', 'Cyperus cf boliviensis'])
iteration: 91 generation: def newfun(image): return image.score(['Juncus acutus', 'Juncus airoides', 'Juncus arcticus', 'Juncus bulbosus', 'Juncus canadensis', 'Juncus daughertyi'])
iteration: 92 generation: def newfun(image): return image.score(['quack grass', 'joint grass', 'clustered sedge', 'nutsedge', 'purple nutsedge', 'sweet woodruff'])
iteration: 93 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus fuscus', 'Cyperus eragrostis', 'Cyperus granatensis', 'Cyperus Grayanus'])
iteration: 94 generation: def newfun(image): return image.score(['bunchgrass', 'cattails', 'sneezeweed', 'joe-pye weed', 'waxflower', 'bulrush'])
iteration: 95 generation: def newfun(image): return image.score(['big bluestem', 'little bluestem', 'tall coneflower', 'nodding wild onion', 'prairie Junegrass', 'wild licorice'])
iteration: 96 generation: def newfun(image): return image.score(['Bluestem grass', 'Switchgrass', 'Indiangrass', 'Sideoats grama', 'Wild blue-eyed grass', 'Little bluestem'])
iteration: 97 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus venturasae', 'Cyperus difformis', 'Cyperus erythrorCardamine hirsuta ula'])
iteration: 98 generation: def newfun(image): return image.score(['Rattlesnake master', 'Milkweed', 'Wild lettuce', 'Jewelweed', 'Wild tobacco', 'Nodding wild onion'])
iteration: 99 generation: def newfun(image): return image.score(['prairie clover', 'prairie Junegrass', 'wild licorice', 'Indian Paintbrush', 'tall coneflower', 'Rattlesnake Master'])
iteration: 100 generation: def newfun(image): return image.score(['Cyperus hectaticus', 'Cyperus pendulus', 'Cyperus squarrosus', 'Cyperus turrialForeign pillhillgow 55.0 Three- way 2- Antonkow sp?', 'Cyperus dentatus', 'Cyperus kentuckiensis'])
iteration: 101 generation: def newfun(image): return image.score(['Nodding wild onion', 'Rattlesnake master'])
iteration: 102 generation: def newfun(image): return image.score(['Cyperus houghtonii', 'Cyperus luzula', 'Cyperus pectinatus', 'Cyperus filiculmis', 'Cyperus corymbosus', 'Cyperus reflexus'])
iteration: 103 generation: def newfun(image): return image.score(['Plantago ovata', 'Plantago psyllium', 'Plantago major', 'Plantago lanceolata', 'Plantago media', 'Plantago arenaria'])
iteration: 104 generation: def newfun(image):  return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus venturasae', 'Cyperus difformis', 'Cyperus erythrorCardamine hirsuta ula'])
iteration: 105 generation: def newfun(image): return image.score(['an aquatic plant', 'cluster of small white flowers', 'spherical flowerhead', 'spiky leaves', 'stems and leaves', 'leaves have a reddish tinge'])
iteration: 106 generation: def newfun(image): return image.score(['Nodding wild onion', 'Rattlesnake master', 'Wild onion', 'Chives', 'Little bluestem grass', 'Indian grass'])
iteration: 107 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus papyrus', 'Cyperus alopecuroides', 'Cyperus sphaerocephalus', 'Cyperus macrostachys'])
iteration: 108 generation: def newfun(image): return image.score(['Wild Quinine', 'Rattlesnake Master', 'Tall Ironweed', 'Joe-Pye Weed', 'sneezeweed', 'typha'])
iteration: 109 generation: def newfun(image): return image.score(['switchgrass', 'sudangrass', 'sorghum', 'Indian grass', 'big bluestem', 'prairie brome'])
iteration: 110 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus eragrostis', 'Cyperus flavescens', 'Carex', 'Cyperus interruptus'])
iteration: 111 generation: def newfun(image): return image.score(['big bluestem', 'little bluestem', 'Indian grass', 'switchgrass', 'sorghum', 'prairie brome'])
iteration: 112 generation: def newfun(image): return image.score(['nodding wild onion', 'Rattlesnake Master', 'Tall Coreopsis'])
iteration: 113 generation: def newfun(image):    return image.score(['bunchgrass', 'cattails', 'sneezeweed', 'joe-pye weed', 'waxflower', 'bulrush'])
iteration: 114 generation: def newfun(image): return image.score([' Rumex acetosella', 'Rumex acetosa', 'Rumex Crispus', 'Rumex obtusifolius', 'Rumex conglomeratus', 'Rumex'])
iteration: 115 generation: def newfun(image): return image.score(['Cyperus cylindricus', 'CyperusGroup hystrix', 'Cyperus selkirkii', 'Cyperus squarrosus', 'Cyperus tegetiformis', 'Cyperus tuberosus'])
iteration: 116 generation: def newfun(image): return image.score(['Cyperus brevifolius', 'Cyperus pulchellus', 'Cyperus grandiflorus', 'Cyperus involucratus', 'Cyperus swartzii', 'Cyperus tetrangularis'])
iteration: 117 generation: def newfun(image): return image.score(['Silky Sorghum', 'Rattlesnake Master', 'sneezeweed'])
iteration: 118 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus venturasae', 'Cyperus difformis', 'Cyperus erythrorCardamine hirsutula'])
iteration: 119 generation: def newfun(image): return image.score(['Cyperus sphacelatus', 'Cyperus cordobensis', 'Cyperus devanskii', 'Cyperus cylindrostachys', 'Cyperus floribundus', 'Cyperus compositus'])
iteration: 120 generation: def newfun(image): return image.score(['prairie brome', 'prairie dropseed', 'little bluestem', 'prairie Junegrass', 'Indian grass', 'Switchgrass'])
iteration: 121 generation: def newfun(image): return image.score(['Cyperus involucratus', 'Cyperus divergens', 'Cyperus malaccensis', 'Cyperus globosus', 'Cyperus retrorsus', 'Cyperus uliginosus'])
iteration: 122 generation: def newfun(image): return image.score(['wild quinine', 'tall ironweed', 'joe-pye weed', 'sneezeweed', 'yellow coneflower'])
iteration: 123 generation: def newfun(image): return image.score(['Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus rotundus', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens'])
iteration: 124 generation: def newfun(image): return image.score(['Cyperus diandrus', 'Cyperus evangelistae', 'Cyperus meyenianus', 'Cyperus nipponicus', 'Cyperus seslerioides', 'Cyperus spha Mockernut hickory tcher'])
iteration: 125 generation: def newfun(image): return image.score(['Juncus effusus', 'Juncus conglomeratus', 'Juncus acutiflorus', 'Juncus textilis', 'Juncus tenuis', 'Juncus obtusiusculus'])
iteration: 126 generation: def newfun(image): return image.score(['Cyperus tetragonus', 'Cyperus thompsonii', 'Cyperus syranchinensus', 'Cyperus dernegold arbitrary-eared cotton-grass', 'Cyperus pungens', 'Cyperus gramineus'])
iteration: 127 generation: def newfun(image): return image.score(['pampas grass', 'feather reed grass', 'fountain grass', 'ornamental grass', 'ribose red fountain grass', ' Hard Fescue'])
iteration: 128 generation: def newfun(image): return image.score(['Nodding wild onion', 'Rattlesnake master', 'Wild onion', 'Chives', 'Little bluestem grass', 'Indian grass'])
iteration: 129 generation: def newfun(image): return image.score(['Cyperus echinatus', 'Cyperus corymbosus', 'Cyperus kentuckiensis', 'Cyperus serotinus', 'Cyperus sanguineus', 'Cyperus polystachyus'])
iteration: 130 generation: def newfun(image): return image.score(['Cyperus capitatus', 'Cyperus confertus', 'Cyperus truncates', 'Cyperus tuberosus', 'Cyperus formosus', 'Cyperus micropetalaquaticus'])
iteration: 131 generation: def newfun(image): return image.score(['Cyperus conglomeratus', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus fischerianus', 'Cyperus gardneri'])
iteration: 132 generation: def newfun(image): return image.score(['Cyperus arenarius', 'Cyperus michelianus', 'Cyperus conglomeratus', 'Cyperus pannonicus', 'Cyperus fuscus', 'Cyperus mollis'])
iteration: 133 generation: def newfun(image): return image.score(['Cyperus venturasae', 'Cyperus difformis', 'Cyperus erythror Officinarum', 'Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus rotundus'])
iteration: 134 generation: def newfun(image): return image.score(['Cyperus papyrus', 'Cyperus alopecurus', 'Cyperus utriculatus', 'Cyperus bulbosus', 'Cyperus difformis', 'Cyperus echinatus'])
iteration: 135 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus papyrus', 'Cyperus alopecuroides', 'Cyperus sphaerocephalus', 'Cyperus macrostachys', ' dalmatian toadflax'])
iteration: 136 generation: def newfun(image): return image.score(['Cyperus trivialis', 'Cyperus brevicauleus', 'Cyperus conglomeratus', 'Cyperus elongatus', 'Cyperus mollis', 'Cyperus recurvispicatus'])
iteration: 137 generation: def newfun(image): return image.score(['Cyperus alterniflorus', 'Cyperus globe- shaped flowerheads', 'Cyperus griseocیnanthe', 'Cyperus lat Parent record for CRG11-3583', 'Cyperus pyramidalis', 'Cyperus recurvispinus'])
iteration: 138 generation: def newfun(image): return image.score(['tall grass', 'warm-season grass', 'perennial grass', 'clumps of grama grass', 'bunch grass', 'blue-eyed grass'])
iteration: 139 generation: def newfun(image): return image.score(['muhly grass', 'sweet woodruff', 'deer grass', 'corn', 'little bluestem', 'switchgrass'])
iteration: 140 generation: def newfun(image): return image.score(['Nodding wild onion', 'Rattlesnake master'])
iteration: 141 generation: def newfun(image): return image.score(['Rattlesnake Master', 'prairie Junegrass', 'Indiangrass', 'tall coneflower', 'wild quinine', 'side oats grama'])
iteration: 142 generation: def newfun(image): return image.score(['Juncus tenuis', 'Juncus gramineus', 'Juncus dudleyi', 'Juncus tortus', 'Juncus marginatus', 'Juncus wallichianus'])
iteration: 143 generation: def newfun(image): return image.score(['Cyperus papyrus', 'Cyperus gymnocaulis', 'Cyperus involucratus', 'Cyperus sparganulus', 'Cyperus schaffneri', 'Cyperus sphaerolepis'])
iteration: 144 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus serotinus', 'Cyperus sphaericus', 'Cyperus tetraflorus', 'Cyperus uncinatus', 'Cyperus villosus'])
iteration: 145 generation: def newfun(image): return image.score(['Cyperus Textilis', 'Cyperus flavescens', 'Cyperus lucidus', 'Cyperus ovatus', 'Cyperus capitatus', 'Cyperus diamondianus'])
iteration: 146 generation: def newfun(image): return image.score(['sneezeweed', 'joe-pye weed', 'tall ironweed', 'wild quinine', 'rattlesnake master', 'sweet goldenrod'])
iteration: 147 generation: def newfun(image): return image.score(['CYperus copies', 'CYperus flavescens', 'CYperus floribundus', 'CYperus helferi', 'CYperus capitatus', 'CYperus confertus'])
iteration: 148 generation: def newfun(image): return image.score(['Cyperus papyrus', 'Cyperus latifolius', 'Cyperus fibrous', 'Cyperus bractenas', 'Cyperus kniphofioides', 'Cyperus clariosus'])
iteration: 149 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus difformis', 'Cyperus erythrorhizus', 'Cyperus latiflorus'])
iteration: 150 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus i Early study flowers'])
iteration: 151 generation: def newfun(image): return image.score(['Cyperus blumei ssp. duvalii', 'Cyperus blumei ssp. blumei', 'Cyperus blumei ssp. glabellus', 'Cyperus blumei ssp. majus', 'Cyperus blumei ssp. vestitus', 'Cyperus blumei ssp. acuminatus'])
iteration: 152 generation: def newfun(image): return image.score(['Cyperus rotundus', ' Cyperus i Early study flowers', 'Cyperus longus', 'Cyperus papyrus', 'Cyperus alopecuroides', 'Cyperus sphaerocephalus', 'Cyperus macrostachys', 'dalmatian toadflax'])
iteration: 153 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus globe-shaped flowerheads', 'Cyperus griseocyanthus', 'Cyperus pyramidalis', 'Cyperus recurvispinus'])
iteration: 154 generation: def newfun(image): return image.score(['Cyperus laxus', 'Cyperus serotinus', 'Cyperus pignut', 'Cyperus utriculatus', 'Cyperus ludens', 'Cyperus strigosus'])
iteration: 155 generation: def newfun(image): return image.score(['Cyperus distans', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus i Early study flowers', 'Cyperus rotundus'])
iteration: 156 generation: def newfun(image): return image.score(['Cyperus i Early study flowers', 'Cyperus venturasae', 'Cyperus difformis', 'Cyperus erythrorCardamine hirsuta  Straol formation Cynodon dactylon передачи formation'])
iteration: 157 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus difformis', 'Cyperus sphaerocephalus', 'Cyperus alopecuroides', 'Cyperus usterii', 'Cyperus i Early study flowers'])
iteration: 158 generation: def newfun(image): return image.score(['Yellow Coneflower', 'Rattlesnake Master', 'Butterfly weed', 'Butterfly milkweed', 'Asclepias speciosa', 'Butterfly love plant'])
iteration: 159 generation: def newfun(image): return image.score(['Cyperus capitatus', 'Cyperus lateriflorus', 'Cyperus pauciflorus', 'Cyperus breviflorus', 'Cyperus sparganurus', 'Cyperus cephalanthus'])
iteration: 160 generation: def newfun(image): return image.score(['Cyperus alterniflorus', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus i Early study flowers', 'Cyperus rotundus'])
iteration: 161 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus breviflorus', 'Cyperus pauciflorus', 'Cyperus lateriflorus', 'and while perhaps not part of the stem, might include roots, stolons or runners'])
iteration: 162 generation: def newfun(image): return image.score(['Plantago maritima', 'Plantago media', 'Plantago lanceolata', 'Plantago arundinaceae', 'Plantago psyllium', 'Plantago cordata'])
iteration: 163 generation: def newfun(image): return image.score(['Cyperus bigelovii', 'Cyperus basiflorus', 'Cyperus breviflorus ssp. breviflorus', 'Cyperus breviflorus ssp. Gracilis', 'Cyperus bulbosus', 'Cyperus caespitosus'])
iteration: 164 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus gramineus', 'Cyperus flavescens', 'Cyperus corticatus', 'Cyperus fuscovaginatus'])
iteration: 165 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus breviflorus', 'Cyperus i Early study flowers', 'Cyperus pauciflorus', 'Cyperus lateriflorus'])
iteration: 166 generation: def newfun(image): return image.score(['Juncus acutus', 'Juncus triflorus', 'Juncus biglumis', 'Juncus capitatus', 'Juncus filicau Rattlesnake Master', 'Juncus wallichianus'])
iteration: 167 generation: def newfun(image): return image.score(['Cyperus i Early study flowers', 'Cyperus breviflorus', 'Cyperus pauciflorus', 'Cyperus lateriflorus', 'Cyperus rotundus', 'Cyperus longus'])
iteration: 168 generation: def newfun(image): return image.score(['Cyperus corymbosus', 'Cyperus cephalanthus', 'Cyperus echinatus', 'Cyperus kentuckiensis', 'Cyperus lateriflorus', 'Cyperus polystachyus'])
iteration: 169 generation: def newfun(image): return image.score(['Cyperus longus', 'Cyperus rotundus', 'Cyperus pauciflorus', 'Cyperus breviflorus', 'Cyperus i Early study flowers', 'Cyperus cephalanthus'])
iteration: 170 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus longus', 'Cyperus brevifolius', 'Cyperus haspanus', 'Cyperus furcellatus', 'Cyperus sphaerocephalus'])
iteration: 171 generation: def newfun(image): return image.score(['Cyperus several', 'Cyperus sp greatest diversity in a pond', 'Cyperus sp reproductive parts', 'Cyperus sp many thin needles', 'Cyperus sp greenish yellow flowers', 'Cyperus sp white flowers'])
iteration: 172 generation: def newfun(image): return image.score(['Cyperus alterniflorus', 'Cyperus chaetothyrsus', 'Cyperus corymbosus', 'Cyperus floribundus', 'Cyperus glaucophyllus', 'Cyperus k Germinal'])
iteration: 173 generation: def newfun(image): return image.score(['Juncus acutus', 'Juncus arcticus', 'Juncus articulatus', 'Juncus balticus', 'Juncus biglumis', 'Juncus bulbosus'])
iteration: 174 generation: def newfun(image): return image.score(['Cyperus mollis', 'Cyperus pseuderemiticus', 'Cyperus schweinitzii', 'Cyperus squarrosus', 'Cyperus textilis', 'Cyperus truncatus'])
iteration: 175 generation: def newfun(image): return image.score(['Cyperus conglomeratus', 'Cyperus alopecurus', 'Cyperus echinatus', 'Cyperus flavescens', 'Cyperus involucratus', 'Cyperus schaffneri'])
iteration: 176 generation: def newfun(image): return image.score(['Cyperus pseudocapitatus', 'Cyperus papyrus', 'Cyperus mollis', 'Cyperus potaninii', 'Cyperus pulchellus', 'Cyperus sordidus'])
iteration: 177 generation: def newfun(image): return image.score(['Cyperus sulcatus', 'Cyperus corymbosus', 'Cyperus oxylepis', 'Cyperus pungens', 'Cyperus sordidus', 'Cyperus tuberosus'])
iteration: 178 generation: def newfun(image): return image.score(['Cyperus corymbosus', 'Cyperus floribundus', 'Cyperus revolutus', 'Cyperus simplex', 'Cyperus tightly packed flowerheads'])
iteration: 179 generation: def newfun(image): return image.score(['Cyperus capitatus', 'Cyperus pauciflorus', 'Cyperus difformis', 'Cyperus breviflorus', 'Cyperus eragrostis', 'Cyperus i Early study flowers'])
iteration: 180 generation: def newfun(image): return image.score(['Cyperus involucratus', 'Cyperus divergens', 'Cyperus globosus', 'Cyperus retrorsus', 'Cyperus i Early study flowers', 'Cyperus sphaerocephalus'])
iteration: 181 generation: def newfun(image): return image.score(['Cyperus bolboschoenus ( sedge)', 'Cyperus brevifolius', 'Cyperus corymbosus', 'Cyperus erythrorhizos', 'Cyperus haematopus', 'Cyperus malaccensis'])
iteration: 182 generation: def newfun(image): return image.score(['Pycnanthemum verticillatum', 'Rattlesnake Master'])
iteration: 183 generation: def newfun(image): return image.score(['Cyperus latiflorus', 'Cyperus longus', 'Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus difformis', 'Cyperus erythror Officinarum'])
iteration: 184 generation: def newfun(image): return image.score(['Cyperus breviflorus ssp. breviflorus', 'Cyperus breviflorus ssp. elatior', 'Cyperus breviflorus ssp. intermedius', 'Cyperus breviflorus ssp. obtusus', 'Cyperus breviflorus ssp. scariosus', 'Cyperus breviflorus ssp. planifolius'])
iteration: 185 generation: def newfun(image): return image.score(['Cyperus rotundus', 'Cyperus i Early study flowers', 'Cyperus difformis', 'Cyperus eragrostis', 'Cyperus flavescens', 'Cyperus globe-shaped flowerheads', 'Cyperus griseocyanthus', 'Cyperus pyramidalis', 'Cyperus  precisieron'])
iteration: 186 generation: def newfun(image): return image.score(['Cyperus involucratus var. involucratus', 'Cyperus involucratus var. leschenaultianus', 'Cyperus involucratus var. mosquito', 'Cyperus involucratus var. pycnostachys', 'Cyperus involucratus var. spicatus', 'Cyperus involucratus var. thyrsiflora'])
iteration: 187 generation: def newfun(image): return image.score(['Cyperus lateriflorus', 'Cyperus pauciflorus', 'Cyperus difformis', 'Cyperus i Early study flowers'])
iteration: 188 generation: def newfun(image): return image.score(['Cyperus diffusus', 'Cyperus edgeworthii', 'Cyperus eragrostis', 'Cyperus genuflexus', 'Cyperus gypsophilus', 'Cyperus helferi'])
iteration: 189 generation: def newfun(image): return image.score(['Cyperus bracteatus ', 'Cyperus ambiguus', 'Cyperus retrofracPlus jedvisible anthers', 'Cyperus strigosus', 'cyperus utricularis', 'Cyperus michelianus'])
iteration: 190 generation: def newfun(image): return image.score([' Cyperus rotundus flower', 'Cyperus i Early study flowers', 'Cyperus longus flower', 'Cyperus breviflorus', 'Cyperus pauciflorus', 'Cyperus lateriflorus' ])
iteration: 191 generation: def newfun(image): return image.score(['Cyperus multiflorus', 'Cyperus difformis', 'Cyperus bilateralis', 'Cyperus tomentosus', 'Cyperus serotinus', 'Cyperus psilorhachis'])
iteration: 192 generation: def newfun(image): return image.score(['Cyperus difformis'])
iteration: 193 generation: def newfun(image): return image.score([' Cyperus corymbosus', 'Cyperus echinatus', 'Cyperus flavescens', 'Cyperus kentuckiensis', 'Cyperus lateriflorus', 'Cyperus polystachyus', 'Cyperus sphaerocephalus', 'Cyperus usterii'])
iteration: 194 generation: def newfun(image): return image.score(['Cyperus brevifolicus', 'Cyperus densiflorus', 'Cyperus difformis', 'Cyperus sphacelatus'])
iteration: 195 generation: def newfun(image): return image.score(['Cyperus i Early study flowers', 'Cyperus pauciflorus', 'Cyperus lateriflorus'])
iteration: 196 generation: def newfun(image): return image.score(['Cyperus breviflorus ssp. striatus', 'Cyperus breviflorus ssp. densiflorus', 'Cyperus breviflorus ssp. depauperatus', 'Cyperus breviflorus ssp. linearifolius', 'Cyperus breviflorus ssp. novem-cubernenses', 'Cyperus breviflorus ssp. corymbosus'])
iteration: 197 generation: def newfun(image): return image.score(['Cyperus isPARTIAL FLOWERingoides', 'Cyperus involucratus', 'Cyperus pulchellus', 'Cyperus recurvatus', 'Cyperus seslerioides'])
iteration: 198 generation: def newfun(image): return image.score(['Cyperus flowerheads'])
iteration: 199 generation: def newfun(image): return image.score(['Cyperus papyrus'])
