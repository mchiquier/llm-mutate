iteration:  0 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  1 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  2 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  3 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  4 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  5 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  6 best program: def newfun(image): return image.score(['thick, double coat', 'wax', 'long legs', 'a yellow, brown, or green color', 'small head', 'yellow or green'])  
iteration:  7 best program: def newfun(image): return image.score(['a long, thin piece of wood', 'supported by a spine or vertebral column', 'a cap or cover', 'a banister or railing', 'the head of a hammer', 'poles used for jumping']) 
iteration:  8 best program: def newfun(image): return image.score(['a long, thin piece of wood', 'supported by a spine or vertebral column', 'a cap or cover', 'a banister or railing', 'the head of a hammer', 'poles used for jumping']) 
iteration:  9 best program: def newfun(image): return image.score(['a long, thin piece of wood', 'supported by a spine or vertebral column', 'a cap or cover', 'a banister or railing', 'the head of a hammer', 'poles used for jumping']) 
iteration:  10 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  11 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  12 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  13 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  14 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  15 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  16 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  17 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  18 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  19 best program: def newfun(image): return image.score(['a recessed area in the top for holding a coin', 'blocks of powdered paint', 'part of a train', 'a stick or handle', 'fishing gear', 'spring-loaded handle']) 
iteration:  20 best program: def newfun(image): return image.score(['the tree is deciduous', 'rocks, soil, or other landscaping elements', 'made of fabric and often has a zipper', 'has a truck', 'a club or bat', 'sand, pebbles, or other abrasive elements']) 
iteration:  21 best program: def newfun(image): return image.score(['the tree is deciduous', 'rocks, soil, or other landscaping elements', 'made of fabric and often has a zipper', 'has a truck', 'a club or bat', 'sand, pebbles, or other abrasive elements']) 
iteration:  22 best program: def newfun(image): return image.score(['the tree is deciduous', 'rocks, soil, or other landscaping elements', 'made of fabric and often has a zipper', 'has a truck', 'a club or bat', 'sand, pebbles, or other abrasive elements']) 
iteration:  23 best program: def newfun(image): return image.score(['the tree is deciduous', 'rocks, soil, or other landscaping elements', 'made of fabric and often has a zipper', 'has a truck', 'a club or bat', 'sand, pebbles, or other abrasive elements']) 
iteration:  24 best program: def newfun(image): return image.score(['the tree is deciduous', 'rocks, soil, or other landscaping elements', 'made of fabric and often has a zipper', 'has a truck', 'a club or bat', 'sand, pebbles, or other abrasive elements']) 
iteration:  25 best program: def newfun(image): return image.score(['green felt-covered table', 'white, powdered sugar', 'hydraulic system', 'interlocking pieces', 'portrays images of people', 'upper torso of a humanoid figure']) 
iteration:  26 best program: def newfun(image): return image.score(['green felt-covered table', 'white, powdered sugar', 'hydraulic system', 'interlocking pieces', 'portrays images of people', 'upper torso of a humanoid figure']) 
iteration:  27 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  28 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  29 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  30 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  31 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  32 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  33 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  34 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  35 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  36 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  37 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  38 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  39 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  40 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  41 best program: def newfun(image): return image.score([' Lombardy poplar', 'english elm', 'a person is buried here', 'part of a fence', 'gold, silver, or copper', 'venation patterns']) 
iteration:  42 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  43 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  44 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  45 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  46 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  47 best program: def newfun(image): return image.score(['cylindrical or conical', 'pebbles or cobbles', 'topographically complex', 'registered', 'moss or lichen', 'elliptical cross section']) 
iteration:  48 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  49 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  50 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  51 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  52 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  53 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  54 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  55 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  56 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  57 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  58 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  59 best program: def newfun(image): return image.score(['thin, fluffy clouds', 'snow-capped mountains', 'green grass', 'moss or lichen', 'cement or asphalt', 'may be a mailbox or fire hydrant nearby']) 
iteration:  60 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  61 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  62 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  63 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  64 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  65 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  66 best program: def newfun(image): return image.score(['sandstone', 'limestone', 'granite', 'basalt', 'schist', 'gneiss']) 
iteration:  67 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  68 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  69 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  70 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  71 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  72 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  73 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  74 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  75 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  76 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  77 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  78 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  79 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  80 best program: def newfun(image): return image.score(['a birch tree', 'a willow tree', 'a beech tree', 'a bo tree', 'a magnolia tree', 'a bonsai tree']) 
iteration:  81 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  82 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  83 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  84 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  85 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  86 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  87 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  88 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  89 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  90 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  91 best program: def newfun(image): return image.score(['moss', 'lichens', 'bracket fungi', 'puffballs', 'morels', 'truffles']) 
iteration:  92 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  93 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  94 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  95 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  96 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  97 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  98 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  99 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  100 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  101 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  102 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  103 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  104 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  105 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  106 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  107 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  108 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  109 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  110 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  111 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  112 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  113 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  114 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  115 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  116 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  117 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  118 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  119 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  120 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  121 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  122 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  123 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  124 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  125 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  126 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  127 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  128 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  129 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  130 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  131 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  132 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  133 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  134 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  135 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  136 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  137 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  138 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  139 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  140 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  141 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  142 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  143 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  144 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  145 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  146 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  147 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  148 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  149 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  150 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  151 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  152 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  153 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  154 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  155 best program: def newfun(image): return image.score(['lichen covered rocks', 'lichen on rocks', 'moss growing on rocks', 'moss on trees', 'lichen on tree bark', 'moss-covered trees']) 
iteration:  156 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  157 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  158 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  159 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  160 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  161 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  162 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  163 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  164 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  165 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  166 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  167 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  168 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  169 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  170 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  171 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  172 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  173 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  174 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  175 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  176 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  177 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  178 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  179 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  180 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  181 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  182 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  183 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  184 best program: def newfun(image): return image.score(['lichen covered stone', 'lichen covered boulder', 'lichen covered ledge', 'lichen covered outcropping', 'lichen covered hillside', 'lichen covered mountain']) 
iteration:  185 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  186 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  187 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  188 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  189 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  190 best program: def newfun(image): return image.score(['lichens on tree branches', 'lichen on tree bole', 'lichen on fallen branches', 'lichen on rocks', 'lichen on ground', 'lichens on fence posts']) 
iteration:  191 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  192 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  193 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  194 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  195 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  196 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  197 best program: def newfun(image): return image.score(['lichen covered tree', 'lichen covered trees', 'lichen and moss covered tree', 'lichen and moss covered trees', 'lichen covered forest', 'lichen covered woodland']) 
iteration:  198 best program: def newfun(image): return image.score(['lichen on tree bark', 'lichen on branches', 'lichen on trunks', 'lichen on logs', 'lichen on stumps', 'lichen on fence posts']) 
iteration:  199 best program: def newfun(image): return image.score(['lichen on tree bark', 'lichen on branches', 'lichen on trunks', 'lichen on logs', 'lichen on stumps', 'lichen on fence posts']) 
