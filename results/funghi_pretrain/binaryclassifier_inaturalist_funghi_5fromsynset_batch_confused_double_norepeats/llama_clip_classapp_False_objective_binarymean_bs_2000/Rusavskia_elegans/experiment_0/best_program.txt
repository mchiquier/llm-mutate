iteration:  0 best program: def newfun(image): return image.score(['a keypad for dialing', 'short, dense fur', 'a piece of clothing', 'may have ornate details such as carvings or brass hardware', 'a honey-colored interior', 'vegetation growing on the cliff face'])  
iteration:  1 best program: def newfun(image): return image.score(['a keypad for dialing', 'short, dense fur', 'a piece of clothing', 'may have ornate details such as carvings or brass hardware', 'a honey-colored interior', 'vegetation growing on the cliff face'])  
iteration:  2 best program: def newfun(image): return image.score(['a keypad for dialing', 'short, dense fur', 'a piece of clothing', 'may have ornate details such as carvings or brass hardware', 'a honey-colored interior', 'vegetation growing on the cliff face'])  
iteration:  3 best program: def newfun(image): return image.score(['a keypad for dialing', 'short, dense fur', 'a piece of clothing', 'may have ornate details such as carvings or brass hardware', 'a honey-colored interior', 'vegetation growing on the cliff face'])  
iteration:  4 best program: def newfun(image): return image.score(['a keypad for dialing', 'short, dense fur', 'a piece of clothing', 'may have ornate details such as carvings or brass hardware', 'a honey-colored interior', 'vegetation growing on the cliff face'])  
iteration:  5 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  6 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  7 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  8 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  9 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  10 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  11 best program: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance']) 
iteration:  12 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  13 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  14 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  15 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  16 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  17 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  18 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  19 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  20 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  21 best program: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material']) 
iteration:  22 best program: def newfun(image): return image.score(['sand, dust, or dirt', 'weathered rock formations', 'layers of sedimentary rock', 'a background of snow or ice', 'a group of tourists or hikers', 'a pull-down menu or button']) 
iteration:  23 best program: def newfun(image): return image.score(['fossils visible in the rock', 'a mechanical device', 'granite or diorite', 'symmetrical pattern of cracks', 'a crystal or gemstone', 'a dark cave entrance or interior']) 
iteration:  24 best program: def newfun(image): return image.score(['fossils visible in the rock', 'a mechanical device', 'granite or diorite', 'symmetrical pattern of cracks', 'a crystal or gemstone', 'a dark cave entrance or interior']) 
iteration:  25 best program: def newfun(image): return image.score(['fossils visible in the rock', 'a mechanical device', 'granite or diorite', 'symmetrical pattern of cracks', 'a crystal or gemstone', 'a dark cave entrance or interior']) 
iteration:  26 best program: def newfun(image): return image.score(['fossils visible in the rock', 'a mechanical device', 'granite or diorite', 'symmetrical pattern of cracks', 'a crystal or gemstone', 'a dark cave entrance or interior']) 
iteration:  27 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  28 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  29 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  30 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  31 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  32 best program: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate']) 
iteration:  33 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  34 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  35 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  36 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  37 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  38 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  39 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  40 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  41 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  42 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  43 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  44 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  45 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  46 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  47 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  48 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  49 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  50 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  51 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  52 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  53 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  54 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  55 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  56 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  57 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  58 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  59 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  60 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  61 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  62 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  63 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  64 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  65 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  66 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  67 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  68 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  69 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  70 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  71 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  72 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  73 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  74 best program: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral']) 
iteration:  75 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  76 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  77 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  78 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  79 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  80 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  81 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  82 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  83 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  84 best program: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events']) 
iteration:  85 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  86 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  87 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  88 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  89 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  90 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  91 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  92 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  93 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  94 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  95 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  96 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  97 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  98 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  99 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  100 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  101 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  102 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  103 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  104 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  105 best program: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks']) 
iteration:  106 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  107 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  108 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  109 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  110 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  111 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  112 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  113 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  114 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  115 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  116 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  117 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  118 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  119 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  120 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  121 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  122 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  123 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  124 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  125 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  126 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  127 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  128 best program: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes']) 
iteration:  129 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  130 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  131 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  132 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  133 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  134 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  135 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  136 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  137 best program: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals']) 
iteration:  138 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  139 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  140 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  141 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  142 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  143 best program: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it']) 
iteration:  144 best program: def newfun(image): return image.score(['a group of rocks that have different textures', 'rocks with a concentric ring pattern', 'rocks with a wavy pattern', 'rocks with a swirling pattern']) 
iteration:  145 best program: def newfun(image): return image.score(['a group of rocks that have different textures', 'rocks with a concentric ring pattern', 'rocks with a wavy pattern', 'rocks with a swirling pattern']) 
iteration:  146 best program: def newfun(image): return image.score(['a group of rocks that have different textures', 'rocks with a concentric ring pattern', 'rocks with a wavy pattern', 'rocks with a swirling pattern']) 
iteration:  147 best program: def newfun(image): return image.score(['a group of rocks that have different textures', 'rocks with a concentric ring pattern', 'rocks with a wavy pattern', 'rocks with a swirling pattern']) 
iteration:  148 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  149 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  150 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  151 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  152 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  153 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  154 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  155 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  156 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  157 best program: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns']) 
iteration:  158 best program: def newfun(image): return image.score(['rocks that have been weathered by erosion']) 
iteration:  159 best program: def newfun(image): return image.score(['rocks that have been weathered by erosion']) 
iteration:  160 best program: def newfun(image): return image.score(['rocks that have been weathered by erosion']) 
iteration:  161 best program: def newfun(image): return image.score(['rocks that have been weathered by erosion']) 
iteration:  162 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  163 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  164 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  165 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  166 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  167 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  168 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  169 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  170 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  171 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  172 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  173 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  174 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  175 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  176 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  177 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  178 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  179 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  180 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  181 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  182 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  183 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  184 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  185 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  186 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  187 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  188 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  189 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  190 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  191 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  192 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  193 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  194 best program: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color']) 
iteration:  195 best program: def newfun(image): return image.score(['types of rock formed by igneous processes']) 
iteration:  196 best program: def newfun(image): return image.score(['types of rock formed by igneous processes']) 
iteration:  197 best program: def newfun(image): return image.score(['types of rock formed by igneous processes']) 
iteration:  198 best program: def newfun(image): return image.score(['types of rock formed by igneous processes']) 
iteration:  199 best program: def newfun(image): return image.score(['types of rock formed by igneous processes']) 
