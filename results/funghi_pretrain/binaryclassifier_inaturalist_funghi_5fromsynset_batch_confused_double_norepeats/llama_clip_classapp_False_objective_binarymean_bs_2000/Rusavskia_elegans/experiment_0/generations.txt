iteration: 0 generation: def newfun(image): return image.score(['a flat, rectangular surface', 'a spillway or overflow channel', 'a vent or chimney', 'typically made of stainless steel or aluminum', 'a knob or lever to open and close the valve',  'a pointy tail'])
iteration: 1 generation: def newfun(image): return image.score(['uneven ground', 'a crater or dome-shaped structure', 'typically made of wood, stone, or brick', 'industrial rather than residential', 'a different color than the body', 'surrounded by various objects or creatures'])
iteration: 2 generation: def newfun(image): return image.score(['a single brick wall', 'several gears', 'a horizontal line down the middle', 'a square design', 'a cardboard box', 'the color of autumn leaves'])
iteration: 3 generation: def newfun(image): return image.score(['a grid pattern on the cooking surface', 'typically made of wool, synthetic materials, or a combination', 'used for jumping over obstacles', 'a long, thin neck', 'may have ports or terminals for connecting to other devices', 'a round, flat, or slightly concave base'])
iteration: 4 generation: def newfun(image): return image.score(['a curved, elongated shape', 'a variety of colors and patterns', 'completely or partially submerged in water', 'rocky cliffs', 'waves crashing against the shore', 'a lighthouse in the distance'])
iteration: 5 generation: def newfun(image): return image.score(['a building with a pointed roof', 'a shape resembling a crescent moon', 'human figures carved into the surface', ' Spiderman', 'a receipt or bill', 'fences or walls shielding the area'])
iteration: 6 generation: def newfun(image): return image.score(['a crystal or mineral formation', 'a pickaxe or other mining tool', 'a large, ornate cathedral', 'surrounded by trees or foliage', 'a city or town at the base of the cliff', 'a rainbow or other colorful light effect'])
iteration: 7 generation: def newfun(image): return image.score(['a perch or seat for a falcon', 'a backpack or satchel', 'a collar or yoke around the neck', 'typically made of stone or metal', 'found in rivers, mountains, or canyons', 'a long, thin figural form'])
iteration: 8 generation: def newfun(image): return image.score(['exotic or xotic appearance', 'has the ability to transform into other objects', 'typically made of plastic or metal', 'typically made of stone, brick, or stucco', 'can emit light', 'a pole or handle for carrying or riding'])
iteration: 9 generation: def newfun(image): return image.score(['a silvery or metallic sheen', 'a pattern or design', 'found in the atmosphere outer space', 'a mostly rounded shape', 'a pointed top', 'sections or layers'])
iteration: 10 generation: def newfun(image): return image.score(['pebbles, rocks, or gravel', 'navy blue, light grey, or white', 'an official with a whistle and tall hat', 'a ring or other ornamentation on the finger', 'a city or town in the background', 'sharp, pointed canines'])
iteration: 11 generation: def newfun(image): return image.score(['a shell-less gastropod', 'a vest made of Kevlar or other bulletproof material'])
iteration: 12 generation: def newfun(image): return image.score(['large containers for waste', 'a material in between the keyboard and mouse', 'a long, low, rectangular building', 'bleached or dyed white', 'black or dark brown feathers', 'may have knobs or handles on the side'])
iteration: 13 generation: def newfun(image): return image.score(['pine needles', 'sand', 'clay, soil, or mud', 'lichen', 'a small, triangular bird', 'a brownish-gray color'])
iteration: 14 generation: def newfun(image): return image.score(['hundreds of thousands of bricks', 'a pointed structure at the top', 'rectangular strips of material', 'trucks or cars parked outside', 'posts or pillars supporting the structure', 'women or men wearing Wellington boots'])
iteration: 15 generation: def newfun(image): return image.score(['a rocky terrain', 'uneven terrain', 'elevated terrain', 'sand', 'dirt', 'grass'])
iteration: 16 generation: def newfun(image): return image.score(['sand, pebbles, or rocks', 'a suit jacket', 'the brittles on the tree', 'a woman', 'long fingers', 'small round leaves'])
iteration: 17 generation: def newfun(image): return image.score(['a design depicting two crossed bones', 'a stylized skull and crossbones', 'may have a brass or silver finish', 'barnacles or other marine organisms attached to the surface', 'urchins', 'a prominent front-facing grille'])
iteration: 18 generation: def newfun(image): return image.score(['the sound of waves crashing', 'whitish or grayish-brown plumage', 'a small opening or hole at the top', 'related to the sea or nautical activities', 'a school of fish swimming nearby', 'a boat ramp or marina'])
iteration: 19 generation: def newfun(image): return image.score(['a colorful plume', 'bright colors', 'ornate carvings', 'a‡±ç bridge', 'columns', 'fountains'])
iteration: 20 generation: def newfun(image): return image.score(['an ornamental design on the barrel', 'a piece of folded paper inside', 'parts of leaves or petals', 'fabrics that are not silk', ' applicable to the color of the carving', 'shiny metal or crystal decorations'])
iteration: 21 generation: def newfun(image): return image.score(['sand, dust, or dirt', 'weathered rock formations', 'layers of sedimentary rock', 'a background of snow or ice', 'a group of tourists or hikers', 'a pull-down menu or button'])
iteration: 22 generation: def newfun(image): return image.score(['fossils visible in the rock', 'a mechanical device', 'granite or diorite', 'symmetrical pattern of cracks', 'a crystal or gemstone', 'a dark cave entrance or interior'])
iteration: 23 generation: def newfun(image): return image.score(['typically found in coastal areas', 'shop windows', 'ornate', 'typically has a chimney', 'made of concrete or cement', 'covered in cracks or crevices'])
iteration: 24 generation: def newfun(image): return image.score(['a form-fitting garment', 'typically worn on the legs', 'thematic or color-coordinated designs', 'made of grass or similar plant material', 'yellow, orange, or red color', 'a child might wear this'])
iteration: 25 generation: def newfun(image): return image.score(['petrified', 'graphite', 'rock salt', 'cinnabar', 'jet', 'amethyst'])
iteration: 26 generation: def newfun(image): return image.score(['coral', 'limestone', 'granite', 'sandstone', 'shale', 'slate'])
iteration: 27 generation: def newfun(image): return image.score(['a cross-like shape', 'circular', 'marble-like', 'terrazzo', 'speckled', 'granite-like'])
iteration: 28 generation: def newfun(image): return image.score(['layers of sedimentary rock', 'a house or other building', 'a piece of food', 'related to hiking or mountaineering', 'a mountainous terrain', 'a circular or rounded object'])
iteration: 29 generation: def newfun(image): return image.score(['a worn, weathered surface', 'may have a floral or geometric pattern', 'held or worn by a person', 'a button or other control to activate', 'a home appliance', 'brightly colored handle'])
iteration: 30 generation: def newfun(image): return image.score(['greasy or sticky texture', 'a reinforced or raised center', 'crystalline solids', 'composite materials', 'pitted or pocked surface', 'a small tube for sucking up materials'])
iteration: 31 generation: def newfun(image): return image.score(['a octopus-like creature', 'made of ceramic or clay', 'painted with a scenery of a beach', 'has a long neck', 'glossy and smooth surface', 'volcanic rock formations in the background'])
iteration: 32 generation: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral'])
iteration: 33 generation: def newfun(image): return image.score(['elaborate carvings', 'ornate lintels', 'a historic, medieval European city', 'lasts for only a short time', 'a type of musical instrument', 'performs a particular function'])
iteration: 34 generation: def newfun(image): return image.score(['geysers, hot springs, or mud pots', 'a rope or cable', 'gravel or pebbles', 'snow-covered mountains', 'a building or structure', 'a rural, natural area'])
iteration: 35 generation: def newfun(image): return image.score(['pebbles, rocks, or gravel', 'a rocky terrain', 'uneven terrain', 'sand', 'dirt', 'grass', 'geysers, hot springs, or mud pots'])
iteration: 36 generation: def newfun(image): return image.score(['animal figures carved in relief', 'a scooped or sunken design', 'red', 'a ceramic material', 'typically used for serving food', 'a cast-iron material'])
iteration: 37 generation: def newfun(image): return image.score(['a piece of iron ore', 'a large body of water', 'veins of metallic minerals', 'impurities', 'sphalerite', 'galena'])
iteration: 38 generation: def newfun(image): return image.score(['extremely hot temperatures', 'danger signs', 'fences or barriers surrounding the area', 'geothermal activity', 'volcanic ash', 'a vesuvian eruption'])
iteration: 39 generation: def newfun(image): return image.score(['granite', 'basalt', 'limestone', 'marble', 'a sharp, pointed object', 'a large, tectonic plate'])
iteration: 40 generation: def newfun(image): return image.score(['a field of wheat or other grain', 'a raised or sunken design', 'a crystal or mineral sample', 'a large, flat cooking surface', 'a swimming pool', 'a braid or ponytail'])
iteration: 41 generation: def newfun(image): return image.score(['hieroglyphics', 'ornate carvings', 'a massive, stone structure', 'flared nostrils', 'construction hat', 'angular, sharp features'])
iteration: 42 generation: def newfun(image): return image.score(['molten rock', 'an explosive volcanic eruption', 'pyroclastic flows', 'a feline animal', 'bony plates covering the body', 'long, pointed ears'])
iteration: 43 generation: def newfun(image): return image.score(['waves breaking on the shore', 'sandcastles', 'an area of deep water', 'a shoreline', 'a man-made object', 'people or animals in the water'])
iteration: 44 generation: def newfun(image): return image.score(['metamorphic rock', 'igneous rock', 'sedimentary rock', 'typically large and majestic', 'a triangular or pyramidal shape', 'a fjord or canyon'])
iteration: 45 generation: def newfun(image): return image.score(['a process of erosion', 'blue color', 'gritty texture', 'associated with the desert', 'towels', 'a hole in the ground'])
iteration: 46 generation: def newfun(image): return image.score(['a clear view of the sky', 'smooth stone surfaces', 'steps leading up to the entrance', 'a paved plaza', 'stone or metal lions', 'torches'])
iteration: 47 generation: def newfun(image): return image.score(['saguaro', 'prickly pears', 'stalactites', 'stalagmites', 'flowing lava', 'a large, flat-topped rock'])
iteration: 48 generation: def newfun(image): return image.score(['water flowing', 'exposed pipes', 'concrete', 'cement', 'asphalt', 'potholes'])
iteration: 49 generation: def newfun(image): return image.score(['animal figures carved in relief', 'a scooped or sunken design', 'red', 'a ceramic material', 'typically used for serving food', 'a cast-iron material'])
iteration: 50 generation: def newfun(image): return image.score(['marble-like veining', 'often used for gravestones or monumental architecture', 'typically composed of limestone, sandstone, or slate', 'a small channel or groove', 'a cooling vent or fin', 'can have elaborate carvings or ornamentations'])
iteration: 51 generation: def newfun(image): return image.score(['feldspar', 'amphibole', 'biotite', 'chlorite', 'a reddish-brown mineral', 'a pale-colored mineral'])
iteration: 52 generation: def newfun(image): return image.score(['rocks and minerals', 'pebbles, rocks, or gravel', 'layers of sedimentary rock', 'geysers, hot springs, or mud pots', 'a soapy solution on the surface', 'a viewfinder on the top'])
iteration: 53 generation: def newfun(image): return image.score(['sand grains cemented together', 'sandstone', 'a rock that can be scratched with a fingernail', 'conglomerate', 'breccia', 'ugenite'])
iteration: 54 generation: def newfun(image): return image.score(['a geological formation', 'a volcano', 'a canyon or gorge', 'typically colored in shades of green or blue', 'metamorphic or sedimentary rock', 'a perched or balanced rock'])
iteration: 55 generation: def newfun(image): return image.score(['granite', 'limestone', 'sandstone', 'travertine', 'marble', 'slate'])
iteration: 56 generation: def newfun(image): return image.score(['a single arch', 'a masonry structure', 'typically found near the shore or a river', 'pillars or columns rising from the water', 'water flowing over or under',  'man-made objects in the water'])
iteration: 57 generation: def newfun(image): return image.score(['parallel layers of rock', 'a metallic sheen', 'small fossils embedded in the stone', 'columns of basalt', 'iridescent colors', 'pentagonal pattern'])
iteration: 58 generation: def newfun(image): return image.score(['granite or marble', 'a building for religious worship', 'columns or arches', 'sand', 'dirt', 'a large body of water'])
iteration: 59 generation: def newfun(image): return image.score(['plaster', 'iron', 'copper', 'manganese', 'uranium', 'tin'])
iteration: 60 generation: def newfun(image): return image.score(['a crystal or mineral formation', 'a pickaxe or other mining tool', 'a large, ornate cathedral', 'surrounded by trees or foliage', 'a city or town at the base of the cliff', 'a rainbow or other colorful light effect'])
iteration: 61 generation: def newfun(image): return image.score(['fossilized shells', 'fossilized animal tracks', 'fossilized plants', 'a fish fossil', 'a dinosaur fossil', 'a trilobite fossil'])
iteration: 62 generation: def newfun(image): return image.score(['basalt', 'rhyolite', 'andesite', 'diorite', 'gabbro', 'pumice'])
iteration: 63 generation: def newfun(image): return image.score(['basalt', 'diorite', 'andesite', 'granite', 'pumice', 'obsidian'])
iteration: 64 generation: def newfun(image): return image.score(['bright green', 'a deposit of unoxidized copper', 'native copper', 'typically found in the rocks of the region', 'chalcocite', 'bornite'])
iteration: 65 generation: def newfun(image): return image.score(['basalt', 'diorite', 'andesite', 'granite', 'pumice', 'obsidian'])
iteration: 66 generation: def newfun(image): return image.score(['lava', 'a magmatic chamber', 'volcanic ash', 'a gaseous state', 'a level surface', 'a rounded, circular shape'])
iteration: 67 generation: def newfun(image): return image.score(['amphibolite', 'greenschist', 'blueschist', 'eclogite', 'gneiss', 'schist'])
iteration: 68 generation: def newfun(image): return image.score(['iron oxide', 'diatomaceous earth', 'bauxite', 'feldspar', 'mica', 'gabbro'])
iteration: 69 generation: def newfun(image): return image.score(['igneous, sedimentary, or metamorphic rock', 'found in almost every type of environment', 'intricate patterns and colors', 'forms when magma cools and solidifies', 'a parent rock', 'a way of separating solid particles from a fluid'])
iteration: 70 generation: def newfun(image): return image.score(['magma', 'lava', 'a volcano', 'a vent', 'streams of molten rock', 'a fissure'])
iteration: 71 generation: def newfun(image): return image.score(['fossilized plants or animals', 'an area of igneous rock', 'a field of lava', 'a cave', 'a formation of stalactites and stalagmites', 'a layered or banded appearance'])
iteration: 72 generation: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'geode', 'a large, prominent rock', 'a pale yellow, triangular mineral'])
iteration: 73 generation: def newfun(image): return image.score(['a colorful plume', 'bright colors', 'ornate carvings', 'a Historical bridge', 'columns', 'fountains'])
iteration: 74 generation: def newfun(image): return image.score(['metamorphic rocks', 'sedimentary rocks', 'igneous rocks', 'a hierarchy of rocks', 'rock cycle', 'geological events'])
iteration: 75 generation: def newfun(image): return image.score(['sandstone', 'shale', 'limestone', 'granite', 'basalt', 'gneiss'])
iteration: 76 generation: def newfun(image): return image.score(['trunks with knots and fissures', 'peeling paint or wallpaper', 'rusted tools', 'shelves lined with dusty jars', 'an old man smoking a pipe', 'a clock face set into the wall'])
iteration: 77 generation: def newfun(image): return image.score(['diorite', 'gabbro', 'granite', 'orthogneiss', 'peridotite', 'pyroxene'])
iteration: 78 generation: def newfun(image): return image.score(['sections of inkwater swirling together', 'mineral deposits', 'exposed geological formations', 'inside earths crust', 'heavy metals', 'red or orange coloration'])
iteration: 79 generation: def newfun(image): return image.score(['a cone-shaped volcano', 'ash and pumice', 'lava', 'a lake or ocean', 'a stratovolcano', 'pyroclastic flows'])
iteration: 80 generation: def newfun(image): return image.score(['basalt', 'diabasic', 'gneiss', 'granodiorite', 'hornblende', 'may contain copper or other minerals'])
iteration: 81 generation: def newfun(image): return image.score(['hornblende', 'plagioclase', 'biotite', 'pyroxene', 'amphibole', 'olivine'])
iteration: 82 generation: def newfun(image): return image.score(['mushrooms', 'bracket fungi', 'lichens and mosses', 'lichenized rocks', 'lichenologist', 'orange or yellow apothecia'])
iteration: 83 generation: def newfun(image): return image.score(['granite', 'orthogneiss', 'pegmatite', 'diorite', 'basalt', 'anorthosite'])
iteration: 84 generation: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks'])
iteration: 85 generation: def newfun(image): return image.score(['felsic rocks', 'ignimbrite', 'pumice', 'obsidian', 'sand', 'mud'])
iteration: 86 generation: def newfun(image): return image.score(['chalcopyrite', 'bornite', 'digenite', ' covellite', 'pyrrhotite', 'sphalerite'])
iteration: 87 generation: def newfun(image): return image.score(['gabbro', 'diorite', 'anorthosite', 'basalt', 'pegmatite', 'limestone', 'sandstone'])
iteration: 88 generation: def newfun(image): return image.score(['felsic minerals', 'interlocking mineral crystals', 'rock formed through heat or pressure', 'molten rock that has cooled', 'a broken or fractured rock', 'an igneous rock'])
iteration: 89 generation: def newfun(image): return image.score(['metamorphic rocks', 'igneous rocks', 'sedimentary rocks', 'minerals', 'rocks', 'geology'])
iteration: 90 generation: def newfun(image): return image.score(['clastic rock', 'igneous rock', 'metamorphic rock', 'natural rock bridge', 'rock that may have a sandy texture', 'hardness on the mohs scale'])
iteration: 91 generation: def newfun(image): return image.score(['diorite', 'anorthosite', 'basalt', 'pegmatite', 'limestone', 'sandstone',  'shale', 'slate', 'schist', 'marble',  'granite'])
iteration: 92 generation: def newfun(image): return image.score(['columns of basalt', 'cliffs made of gneiss', 'mountains of diorite', 'marble caves', 'volcanic ash', 'layers of sandstone'])
iteration: 93 generation: def newfun(image): return image.score(['sandstone', 'shale', 'limestone', 'dolomite', 'granite', 'gneiss'])
iteration: 94 generation: def newfun(image): return image.score(['granite', 'diorite', 'anorthosite', 'basalt', 'pegmatite'])
iteration: 95 generation: def newfun(image): return image.score(['felsic minerals', 'interlocking mineral crystals', 'rock formed through heat or pressure', 'molten rock that has cooled', 'a broken or fractured rock', 'an igneous rock', 'a shiny or reflective surface'])
iteration: 96 generation: def newfun(image): return image.score(['ionic compound', 'molecular compound', 'oxide mineral', 'sulfide mineral', 'carbonate mineral', 'silicate mineral'])
iteration: 97 generation: def newfun(image): return image.score(['granite', 'gneiss', 'schist', 'granodiorite', 'dacite', 'ropy lava', 'obsidian'])
iteration: 98 generation: def newfun(image): return image.score(['found in igneous rocks', 'an iron bearing mineral', 'a process of producing metamorphic rocks', 'rapid cooling of magma', 'a mineral with the chemical formula CaCO3', 'layers of sedimentary rock'])
iteration: 99 generation: def newfun(image): return image.score(['basaltic lava', 'rhyolitic lava', 'andesitic lava', 'dacitic lava', 'syenitic lava', 'obsidian'])
iteration: 100 generation: def newfun(image): return image.score(['rocks and minerals', 'landslides', 'magma', 'volcanic ash', 'hardened lava', 'conglomerate', 'sandstone'])
iteration: 101 generation: def newfun(image): return image.score(['clastic sedimentary rocks', 'chemical sedimentary rocks', 'organic sedimentary rocks'])
iteration: 102 generation: def newfun(image): return image.score(['pillow lava', 'volcanic neck', 'dike', 'pahoehoe lava', 'a Volcano', 'typically made of andesite or rhyolite'])
iteration: 103 generation: def newfun(image): return image.score(['minerals with high melting points', 'minerals with high thermal conductivity', 'minerals with high hardness', 'minerals with low hardness', 'minerals with high density', 'minerals with high specific gravity'])
iteration: 104 generation: def newfun(image): return image.score(['rocks that are light in color', 'rocks that are dark in color', 'rocks with an otherworldly or strange appearance'])
iteration: 105 generation: def newfun(image): return image.score(['rocks that are banded or layered', 'vesicles in a rock', 'volcanic rock', 'a matrix mineral', 'extrusive igneous rock', 'a rock with holes'])
iteration: 106 generation: def newfun(image): return image.score(['clastic sedimentary rocks', 'chemical sedimentary rocks', 'organic sedimentary rocks', 'igneous rocks', 'metamorphic rocks'])
iteration: 107 generation: def newfun(image): return image.score(['unusual rock formations', 'caverns or caves', 'rocky cliffs', 'desert landscapes', 'geological formations'])
iteration: 108 generation: def newfun(image): return image.score(['igneous rock', 'sedimentary rock', 'metamorphic rock', 'information about the formation of the rock'])
iteration: 109 generation: def newfun(image): return image.score(['igneous rocks', 'sedimentary rocks', 'metamorphic rocks', 'minerals', 'geology', 'rocks'])
iteration: 110 generation: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'sedimentary rocks', 'metamorphic rocks'])
iteration: 111 generation: def newfun(image): return image.score(['a rock fragment', 'a rock layer', 'a rock with visible particles', 'a rock sediment', 'a rock formed from magma', 'describes a rock from the silicic acid group'])
iteration: 112 generation: def newfun(image): return image.score(['metamorphic', 'volcanic', 'sedimentary', 'igneous', 'gneiss', 'basalt'])
iteration: 113 generation: def newfun(image): return image.score(['pillow lava', 'volcanic neck', 'dike', 'pahoehoe lava', 'a Volcano', 'typically made of andesite or rhyolite'])
iteration: 114 generation: def newfun(image): return image.score(['a rock from the feldspar group', 'a rock with glassy particles', 'a rock from the olivine subgroup', 'a rock from the pyroxene group', 'a rock with a phaneritic texture', 'describes an igneous rock'])
iteration: 115 generation: def newfun(image): return image.score(['rhyolite', 'andesite', 'dacite', 'basalt', 'a thin layer of pyroclastic material', 'pumice'])
iteration: 116 generation: def newfun(image): return image.score(['lava', 'magma', 'crystals', 'volcano', ' pyroclastic flows', 'glowing'])
iteration: 117 generation: def newfun(image): return image.score(['a porous rock', 'a rock that may have a jagged edge', 'a rock that may have a high silica content', 'a rock that may have a fibrous structure', 'a rock that may have a sandy texture', 'a rock that is formed from magma'])
iteration: 118 generation: def newfun(image): return image.score(['calcite', 'quartz', 'feldspathic minerals', 'mica minerals', 'amphibole minerals', 'pyroxene minerals'])
iteration: 119 generation: def newfun(image): return image.score(['fine particles of lava', 'coarse particles of lava', 'a lava tube', 'a lava flow', 'a volcanic vent', 'volcanic glass'])
iteration: 120 generation: def newfun(image): return image.score(['rocks that are sedimentary', 'rocks that are igneous', 'rocks that are metamorphic'])
iteration: 121 generation: def newfun(image): return image.score(['conglomerate rock', 'sectarian rock', 'clastic rock', 'bioclastic rock', 'a rock type that forms when particles, sand, or shells are glued together with calcium carbonate', 'a diamond-shaped crystal embedded in the rock'])
iteration: 122 generation: def newfun(image): return image.score(['rocks that are mined for valuable minerals', 'rocks that form when magma and water mix', 'rocks that contain fossils', 'rocks that are found on mountaintops', 'rocks that have rectangular or square shapes', 'rocks with holes of varying sizes'])
iteration: 123 generation: def newfun(image): return image.score(['information about the composition of the rock', 'a close-up image of the rock', 'shows the texture of the rock', 'various colors in the rock', 'a background that is not the rock'])
iteration: 124 generation: def newfun(image): return image.score(['granitic rocks', 'an image of a volcano', 'an image of magma', 'a mountain peak', 'a mineral deposit', 'an effusive igneous rock'])
iteration: 125 generation: def newfun(image): return image.score(['igneous Petrology', 'igneous rocks', 'metamorphic Petrology', 'metamorphic rocks', 'sedimentary Petrology', 'sedimentary rocks'])
iteration: 126 generation: def newfun(image): return image.score(['a rock with unique formations', 'a rock with a unique texture', 'a rock with unique color patterns', 'a rock with metallic veins', 'a rock with rounded edges', 'a rock with sharp edges'])
iteration: 127 generation: def newfun(image): return image.score(['pillow lava', 'a volcanic crater', 'a lava flow', 'volcanic ash', 'a volcanic island', 'a volcanic cone'])
iteration: 128 generation: def newfun(image): return image.score(['rocks that are used for decoration', 'rocks that are covered with moss', 'rocks that have interesting textures', 'rocks that have unique shapes', 'rocks that have very bright colors', 'rocks that have shiny minerals'])
iteration: 129 generation: def newfun(image): return image.score(['dikes', 'pillow lavas', 'volcanic necks', 'volcanic plugs', ' Ignimbrite', 'volcanic glass'])
iteration: 130 generation: def newfun(image): return image.score(['basaltic rocks', 'an image of lava', 'an image of a caldera', 'an image of a volcanic cone', 'a volcanic field', 'an image of a crater lake'])
iteration: 131 generation: def newfun(image): return image.score(['mafic minerals', 'an igneous rock', 'coarse-grained texture', 'a volcanic rock', 'a rock that has cooled slowly', 'magma'])
iteration: 132 generation: def newfun(image): return image.score(['igneous rocks', 'sedimentary rocks', 'metamorphic rocks', 'limestone', 'sandstone', 'granite'])
iteration: 133 generation: def newfun(image): return image.score(['feldspathic minerals', 'mafic minerals', 'pyroxene minerals', 'a rock formed from lava', 'rock that has undergone metamorphism', 'rock made up of small crystals', 'rock that has been altered through geologic processes'])
iteration: 134 generation: def newfun(image): return image.score(['rocks and minerals from a specific region', 'rocks in a desert environment', 'rocks in a forest environment', 'rocks in a coastal environment', 'rocks in a mountain environment'])
iteration: 135 generation: def newfun(image): return image.score(['clastic rocks', 'chemical sedimentary rocks', 'composite rocks', ' Ignimbrite rocks', 'volcanic rocks', 'bioclastic sedimentary rocks'])
iteration: 136 generation: def newfun(image): return image.score(['intrusive igneous rock', 'extrusive igneous rock', 'a dark-colored mineral', 'iron oxide', 'a mineral deposit', 'a fluid, molten state', 'silicate minerals'])
iteration: 137 generation: def newfun(image): return image.score(['rocks with an asymmetrical pattern', 'rocks with swirling patterns', 'rocks with multicolored patterns', 'a rock with dots', 'a rock with painted designs', 'a rock with a photograph on it'])
iteration: 138 generation: def newfun(image): return image.score(['extrusive igneous rocks', 'intrusive igneous rocks', 'foliated metamorphic rocks', 'unfoliated metamorphic rocks', 'chemical sedimentary rocks', 'clastic sedimentary rocks'])
iteration: 139 generation: def newfun(image): return image.score(['igneous rock', 'sedimentary rock', 'metamorphic rock', 'information about the mineral composition of the rock'])
iteration: 140 generation: def newfun(image): return image.score(['rocks that are transformed by heat', 'rocks that are created by erosion', 'rocks with interesting solids', 'rocks with interesting liquids', 'rocks that have radioactive properties', 'rocks that have many colors'])
iteration: 141 generation: def newfun(image): return image.score(['rocks formed by deposition', 'rocks formed by pressure', 'rocks formed by heat', 'rocks formed by weathering', 'rocks formed by erosion', 'rocks formed by a combination of these'])
iteration: 142 generation: def newfun(image): return image.score(['pyroxene', 'amphibole', 'biotite', 'plagioclase', ' Olivine', 'hornblende'])
iteration: 143 generation: def newfun(image): return image.score(['a group of rocks that have different textures', 'rocks with a concentric ring pattern', 'rocks with a wavy pattern', 'rocks with a swirling pattern'])
iteration: 144 generation: def newfun(image): return image.score(['extrusive igneous rock', 'intrusive igneous rock'])
iteration: 145 generation: def newfun(image): return image.score(['volcanic rock', 'formed from the cooling and solidification of lava', 'formed from the alteration of pre-existing rocks', 'a sandy texture', 'a rock that does not contain Table II Zeolite Type and Properties', 'a rock that is derived from Igneous Rock'])
iteration: 146 generation: def newfun(image): return image.score(['rocks with different textures', 'rocks with different structures', 'showing different angles of the rock', 'a rock that has been polished', 'a rock forming a bridge'])
iteration: 147 generation: def newfun(image): return image.score(['rocks that are a single color', 'rocks that have interesting textures', 'rocks with complex patterns'])
iteration: 148 generation: def newfun(image): return image.score(['rocks formed by a volcano', 'rocks formed by plate tectonics', 'rocks formed by crystallization', 'rocks formed by the cooling and solidification of magma', 'rocks formed by other geological processes'])
iteration: 149 generation: def newfun(image): return image.score(['a rock with unique formations', 'a rock with a unique texture', 'a rock with unique color patterns', 'a rock with metallic veins', 'a rock with rounded edges', 'a rock with sharp edges'])
iteration: 150 generation: def newfun(image): return image.score([' Igneous rocks'])
iteration: 151 generation: def newfun(image): return image.score(['dark-colored minerals', 'bright-colored minerals'])
iteration: 152 generation: def newfun(image): return image.score(['rocks in various colors', 'rocks of different textures', 'rocks of varying sizes', 'rocks in different shapes', 'rocks with patterns or veins', 'rocks in various configurations'])
iteration: 153 generation: def newfun(image): return image.score(['igneous rocks with a coarse-grained texture', 'igneous rocks with a fine-grained texture', 'sedimentary rocks formed by weathering', 'metamorphic rocks formed by heat and pressure'])
iteration: 154 generation: def newfun(image): return image.score(['igneous rocks', 'metamorphic rocks', 'sedimentary rocks', 'rocks', 'geology', 'granite'])
iteration: 155 generation: def newfun(image): return image.score(['clastic sedimentary rocks', 'chemical sedimentary rocks'])
iteration: 156 generation: def newfun(image): return image.score(['plutonic igneous rocks', 'volcanic igneous rocks'])
iteration: 157 generation: def newfun(image): return image.score(['rocks that have been weathered by erosion'])
iteration: 158 generation: def newfun(image): return image.score(['rocks that are found underwater', 'rocks that are covered with sediment', 'rocks that are located in deserts', 'rocks that have interesting patterns', 'rocks that are affected by erosion', 'rocks that have varying levels of hardness'])
iteration: 159 generation: def newfun(image): return image.score(['igneous rock formation', 'geological phenomenon', 'stone or pebble', 'sedimentary rock formation', 'volcanic rock formation'])
iteration: 160 generation: def newfun(image): return image.score(['all types of igneous rocks'])
iteration: 161 generation: def newfun(image): return image.score(['rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color'])
iteration: 162 generation: def newfun(image): return image.score(['geodes', 'crystals', 'rocks with holes', 'rocks with sparkles', 'rocks with patterns that resemble organs', 'rocks with interesting textures'])
iteration: 163 generation: def newfun(image): return image.score(['drawings of igneous rocks', 'mineral deposits', 'rocks', 'photographs of igneous rocks', 'rocks with interesting textures', 'aerial photos of igneous rocks'])
iteration: 164 generation: def newfun(image): return image.score(['rocks that form from lava', 'rocks that are created by meteor impact', 'rocks that are created by weathering and erosion', 'rocks that have holes in them', 'rocks that contain fossils', 'rocks that have a metallic luster'])
iteration: 165 generation: def newfun(image): return image.score(['rocks that are created by the cooling and solidification of magma', 'rocks that are created by the cooling and solidification of lava', 'rocks that are created by the erosion and weathering of pre-existing rocks', 'rocks that are created by the deposition of sediment', 'rocks that are created by the action of plate tectonics', 'rocks that have a shiny, smooth appearance'])
iteration: 166 generation: def newfun(image): return image.score(['rocks with man-made patterns', 'rocks with holes', 'rocks with holes and lines', 'rocks with straight lines', 'rocks with patterns and colors'])
iteration: 167 generation: def newfun(image): return image.score(['rocks that have been shaped by heat and pressure', 'rocks that have not been shaped by heat and pressure'])
iteration: 168 generation: def newfun(image): return image.score(['rocks that are classified as having a particular color'])
iteration: 169 generation: def newfun(image): return image.score(['breccia', 'a body of sedimentary accumulation containing sand grains', 'a rock type formed from sand accumulation', 'a rock made up of sand particles', 'a sand-sized rock particle', 'a clastic rock particles'])
iteration: 170 generation: def newfun(image): return image.score(['different types of rocks formed from the processes of plate tectonics'])
iteration: 171 generation: def newfun(image): return image.score(['Macroscopic image of rock or mineral'])
iteration: 172 generation: def newfun(image): return image.score(['a rock fragment', 'a rock layer', 'a rock with visible particles', 'a rock sediment', 'a rock formed from magma', 'describes a rock from the silicic acid group'])
iteration: 173 generation: def newfun(image): return image.score(['rocks that are formed from living organisms', 'rocks that are formed from shells', 'rocks that are formed from the accumulation of coral', 'rocks that are formed from the accumulation of algae', 'rocks that are formed from the accumulation of f√ºraminifera', 'rocks that are formed from the accumulation of diatoms'])
iteration: 174 generation: def newfun(image): return image.score(['rocks that are formed from magma', 'rocks that are formed from lava', 'rocks that are formed from the contact metamorphism of pre-exisiting rocks', 'rocks that are formed from the regional metamorphism of pre-exisiting rocks', 'rocks that are formed from hydrothermal activity'])
iteration: 175 generation: def newfun(image): return image.score(['a type of rock that is formed when magma cools and solidifies', 'a type of rock that is formed from the cooling and solidification of lava'])
iteration: 176 generation: def newfun(image): return image.score(['intrusive igneous rocks', 'extrusive igneous rocks', 'rocks that are typically found in desert environments', 'rocks that have a sandy texture', 'rocks that are a deep red or orange color'])
iteration: 177 generation: def newfun(image): return image.score(['sedimentary rocks that are formed from sand', 'igneous rocks that are formed from magma'])
iteration: 178 generation: def newfun(image): return image.score(['rocks formed from lava', 'rocks formed from magma', 'rocks formed from weathering', 'rocks formed from erosion'])
iteration: 179 generation: def newfun(image): return image.score(['rocks that are transformed by heat and pressure', 'rocks that are created from the cooling and solidification of magma'])
iteration: 180 generation: def newfun(image): return image.score(['a color image of a rock or a mineral'])
iteration: 181 generation: def newfun(image): return image.score(['photographs of sedimentary rocks', 'images of sedimentary structures', 'pictures of fossils in sedimentary rocks'])
iteration: 182 generation: def newfun(image): return image.score(['rocks that are formed by the evaporation of a soluble mineral', 'rocks that have a crystalline texture', 'rocks that are formed by the precipitation of minerals from a solution', 'rocks that have a banded or layered appearance'])
iteration: 183 generation: def newfun(image): return image.score(['rocks that are formed in a tectonic plate boundary', 'rocks that are formed in a mountain building process', 'rocks that are formed in a volcanic environment', 'rocks that are formed in a sedimentary basin', 'rocks that are formed in a metamorphic terrain'])
iteration: 184 generation: def newfun(image): return image.score(['ultra-mafic igneous rocks'])
iteration: 185 generation: def newfun(image): return image.score(['a mafic mineral', 'feldspathic minerals', 'igneous rocks', 'extrusive igneous rocks', 'minerals in a rock', 'pyroxene minerals'])
iteration: 186 generation: def newfun(image): return image.score(['all types of igneous rocks', 'limestone', 'sandstone', 'clastic sedimentary rocks made of gravel or sand', 'rocks that form from magma', 'rocks that form from weathering'])
iteration: 187 generation: def newfun(image): return image.score(['rock formations that are found in the desert', 'rocks that are made up of multiple different minerals'])
iteration: 188 generation: def newfun(image): return image.score(['rocks with patterns and colors', 'rocks with natural patterns', 'rocks with bright colors', 'rocks with glittering', 'rocks with luminescent properties', 'rocks with bands of different colors'])
iteration: 189 generation: def newfun(image): return image.score(['rocks that are part of a volcano', 'rocks that are part of a mountain range', 'rocks that are part of a plateau', 'rocks that are part of a canyon or gorge', 'rocks that are part of a coastline or ocean'])
iteration: 190 generation: def newfun(image): return image.score(['types of texture developed in rocks'])
iteration: 191 generation: def newfun(image): return image.score(['volcanic rock particles', 'volcanic ash particles', 'rock formed from lava', 'rock formed from volcanic dust', 'rock with volcanic activity', 'volcanic igneous rock'])
iteration: 192 generation: def newfun(image): return image.score(['volcanoes', 'volcanic ash', 'black sand', 'magma', 'volcanic rocks', 'basalt'])
iteration: 193 generation: def newfun(image): return image.score(['rocks with visible grains', 'rocks with course-grained texture'])
iteration: 194 generation: def newfun(image): return image.score(['types of rock formed by igneous processes'])
iteration: 195 generation: def newfun(image): return image.score(['rocks that have been transformed by heat and pressure', 'rocks that have not been transformed by heat and pressure'])
iteration: 196 generation: def newfun(image): return image.score(['a close-up image of rock or mineral'])
iteration: 197 generation: def newfun(image): return image.score(['rocks that have been shaped by wind and sand'])
iteration: 198 generation: def newfun(image): return image.score(['a rock that may have a glassy appearance', 'a rock that is formed by cooling magma', 'a rock that is formed by cooling lava', 'a rock that may have a vesicular texture', 'a rock that may have consolidated minerals', 'a rock that is not sedimentary'])
iteration: 199 generation: def newfun(image): return image.score(['rocks that have been weathered by chemicals'])
