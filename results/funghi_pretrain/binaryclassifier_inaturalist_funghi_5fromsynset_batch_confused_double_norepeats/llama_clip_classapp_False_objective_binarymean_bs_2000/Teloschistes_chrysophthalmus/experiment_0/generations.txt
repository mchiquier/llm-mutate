iteration: 0 generation: def newfun(image): return image.score(['a fibrous root system', 'yellow spots on a black body', 'spines branching outward around a small, central stem', 'long distance races', 'a decorative paper cover', 'short, stumpy legs'])
iteration: 1 generation: def newfun(image): return image.score(['a ring of tentacles', 'a black band on the right wrist', 'worn on the right wrist', 'a piece of writing or artwork', 'a chain with links', 'made of caramel, nougat, or is milk-based'])
iteration: 2 generation: def newfun(image): return image.score(['four limbed primate', 'a plant with showy cowl-shaped flowers', 'rare', 'a rope made of twisted hair', 'a bottle or flask', 'a cluster of small, green leaves'])
iteration: 3 generation: def newfun(image): return image.score(['birch bark', 'trunk and two legs', 'old and weathered', 'bars of different colors', 'long hair', 'may have decorative stones and gems'])
iteration: 4 generation: def newfun(image): return image.score(['a square base', 'a wisp of beard', 'miniature', 'a cluster of red flowers', 'a hollow center', 'made of alabaster'])
iteration: 5 generation: def newfun(image): return image.score(['thorns or spines', 'powdered sugar', 'yellow or orange petals', 'bottom fin', 'hollow body', 'small openings on the top surface'])
iteration: 6 generation: def newfun(image): return image.score(['converging bars', 'may have attachments and embellishments', 'tightly wound', 'pink or yellow', 'inhabits dry areas', 'perches on branches'])
iteration: 7 generation: def newfun(image): return image.score(['a long wheelbase typically has the words \\"school bus\\" written on the side has long sleeves and a hood often located outdoors stacks of containers on deck a tangle or twist in a rope or cord'])
iteration: 8 generation: def newfun(image): return image.score(['knotted', 'a brush made from animal hair', 'a folding, cane-like shape', 'a prominent, shaggy mane', 'reaches high speeds', 'powerful jaws'])
iteration: 9 generation: def newfun(image): return image.score(['growing on live trees', 'faces of famous people', 'series of nodules', 'long hair', 'a spiky collar', 'glows in the dark'])
iteration: 10 generation: def newfun(image): return image.score(['leaves arranged in pairs', 'curls up into a ball when disturbed', 'a pungent smell', 'can cause skin irritation', 'may be green or ripe and red', 'a prominent green calyx'])
iteration: 11 generation: def newfun(image): return image.score(['a tree with a single stem or trunk', 'rhomboid', 'spiny fruits', 'unique life cycle', 'woody, fruiting body', 'large,Ã£o angular insects'])
iteration: 12 generation: def newfun(image): return image.score(['may have multiple wheels', 'an arboreal plant', 'ring-shaped fruit', 'found in wet environments', 'consumed by birds', 'a sandwich with a fried egg'])
iteration: 13 generation: def newfun(image): return image.score(['bright yellow or orange', 'signal lights', 'spatially isolated regions', 'hair or fur is typically wavy', 'adorned with glitter', 'not typically found in nature'])
iteration: 14 generation: def newfun(image): return image.score(['may be folded Thisextra fatty layer provides energy when food is scarce juicy pulp surrounding a seed may be green or ripe and red caked with dirt particles'])
iteration: 15 generation: def newfun(image): return image.score(['coarse grasses', 'long yearlings', 'hard, hairy or prickly fruit covering', 'thorns', 'woody plant', 'greatly hypertrophied'])
iteration: 16 generation: def newfun(image): return image.score(['compound eyes', 'short fur that is typically grey, black, or white', 'stem and leaves at the top'])
iteration: 17 generation: def newfun(image): return image.score(['intricate details', 'vines and leaves', 'a small bird perched on a branch', 'a plant with large, showy flowers', 'a winding path', 'a still body of water'])
iteration: 18 generation: def newfun(image): return image.score(['resembles a large flower', 'has a trunk', 'attracts pollinators', 'variable soil moisture', "gives off an intense, sweet fragrance", 'striking color patterns'])
iteration: 19 generation: def newfun(image): return image.score(['a shiny surface', 'spiky leaves', 'a rocky or woody background', 'a single eye', 'furry body', 'a tree with branches and leaves'])
iteration: 20 generation: def newfun(image): return image.score(['collar', 'lathed', 'flared bottoms', 'branching crown', 'parallel veins', 'appears in spring and summer'])
iteration: 21 generation: def newfun(image): return image.score(['a plant or tree', 'decorative cloves', 'two ovaries topped with', 'an edible orange', 'a striped, fuzzy', 'may be served with milk, sugar, or honey'])
iteration: 22 generation: def newfun(image): return image.score(['hairy', 'thread-like leaves', 'twigs', 'annular rings', 'mud', 'seeping into bark'])
iteration: 23 generation: def newfun(image): return image.score(['waisted section', 'speckled coat', 'pygidia', 'saddle-shaped', 'alpine plants', 'miniature orchids'])
iteration: 24 generation: def newfun(image): return image.score(['intricate details', 'vines and leaves', 'a small bird perched on a branch', 'a plant with large, showy flowers', 'a winding path', 'a still body of water'])
iteration: 25 generation: def newfun(image): return image.score(['four limbed primate', 'a plant with large, showy flowers', 'a tree in the background', 'a golden crown', 'a leafless tree branch', 'a fluttering ribbon'])
iteration: 26 generation: def newfun(image): return image.score(['may be folded Thisextra fatty layer provides energy when food is scarce juicy pulp surrounding a seed may be green or ripe and red caked with dirt particles'])
iteration: 27 generation: def newfun(image): return image.score(['fibrous stalks', 'rows of spines', 'interlocking', 'a fragrant aroma', 'az and purple flowers', 'delicate petals'])
iteration: 28 generation: def newfun(image): return image.score(['groundsel tree', 'tufts of hair', 'spiny bracts', 'parasol-like umbrellas', 'spherical clusters', 'twigs and small branches'])
iteration: 29 generation: def newfun(image): return image.score(['a person riding a horse', 'sunflowers or other brightly colored flowers', 'trees or bushes in the background', 'a metal railing', 'a large stone monument', 'a road or path'])
iteration: 30 generation: def newfun(image): return image.score(['intricate details', 'vines and leaves', 'a small bird perched on a branch', 'a plant with large, showy flowers', 'a winding path', 'a still body of water'])
iteration: 31 generation: def newfun(image): return image.score(['cascading form', 'pale blue bell-shaped flowers', 'turns red in the fall', 'covered with many small hairs', 'dark green leaves', 'grows up trees or rocks'])
iteration: 32 generation: def newfun(image): return image.score(['green, waxy leaves', 'ridged and wavy', 'packed with strongly scented, waxy flowers', 'yellow or orange', 'a heavy-bodied animal', 'furry legs'])
iteration: 33 generation: def newfun(image): return image.score(['three pointed tips', 'a barbed wire fence in background', 'a clothesline with small, colored flags', 'four petaled flowers', 'a long, curved beak', 'small, bird-like creature'])
iteration: 34 generation: def newfun(image): return image.score(['orange and yellow', 'electrical lights around a tree', 'brown or gray with a smooth texture', 'fuzzy buds', 'ornate', 'painted designs'])
iteration: 35 generation: def newfun(image): return image.score(['a bush of shrub', 'grasses and other herbaceous plants', 'yellow or golden petals', 'the act of plucking or pulling something', 'delicate texture', 'a type of fungus'])
iteration: 36 generation: def newfun(image): return image.score(['a small, woody plant', 'a small bird perched on a branch', 'types of insects', 'a patch of dirt or grass', 'a tall, columnar tree', 'made of pink and white stone'])
iteration: 37 generation: def newfun(image): return image.score(['type of evergreen tree', 'high sugar content', 'layers of tissue', 'drinking', 'topiary', 'bouquet'])
iteration: 38 generation: def newfun(image): return image.score(['pale yellow flowers arranged in clusters', 'often in rocky areas', 'used for flavoring', 'woolly hairs cover', 'hook-shaped calyx', 'produces a milky sap'])
iteration: 39 generation: def newfun(image): return image.score(['puff of cotton', 'prickly fruits', 'ornate', 'a type of tree', 'may be enclosed in a fence', 'cluster of leaves at the top'])
iteration: 40 generation: def newfun(image): return image.score(['leaf buds', 'hoof', 'a type of citrus fruit', 'oncreeping', 'row of buttons down center', 'bunches of small white flowers'])
iteration: 41 generation: def newfun(image): return image.score(['a biting mouthpart', 'extension growth', 'sticks or twigs', 'not poste frontalis', 'occipital foramen magnum', 'floral patterns'])
iteration: 42 generation: def newfun(image): return image.score(['puff of cotton', 'prickly fruits', 'ornate', 'may have decorative cars', 'has flowers that attract certain insects', 'typically found in gardens'])
iteration: 43 generation: def newfun(image): return image.score(['a boardwalk by the water', 'white or gray stone', 'strips of wood or bark', 'pink, yellow, or orange flowers', 'long, thin strokes', 'a calm, peaceful scene'])
iteration: 44 generation: def newfun(image): return image.score(['waxy leaves shaped like a boat', 'iss adopted by plants adapted to dry environments', 'sunken cheeks', 'sticky sap secreted when threatened', 'orange-colored pollen', 'associated with cacti'])
iteration: 45 generation: def newfun(image): return image.score(['covered with small white or pink flowers', 'a tree that keeps its leaves year round', 'rows of sharp spines', 'opposable big toes', 'stiff hairs on the stem'])
iteration: 46 generation: def newfun(image): return image.score(['a spiny, green plant', 'covered with peeling bark', 'parallel-veined leaves', 'often ingested by monkeys', 'powdery mildew fungi', 'creeping gardens'])
iteration: 47 generation: def newfun(image): return image.score(['identical copies', 'spiky leaves', 'colors such as blue and red', 'holes that allow the release of spores', 'lichen', 'a type of undergrowth shrub'])
iteration: 48 generation: def newfun(image): return image.score(['waxy leaves shaped like a boat', 'iss adopted by plants adapted to dry environments', 'sunken cheeks', 'sticky sap secreted when threatened', 'orange-colored pollen', 'associated with cacti'])
iteration: 49 generation: def newfun(image): return image.score(['crimped edges', 'a showy flower spike', 'pairs of leaflike structures called bracts', 'may have a firm or crunchy texture', 'a green or purple tint', 'fragrant flowers'])
iteration: 50 generation: def newfun(image): return image.score(['misty', 'arching branches', 'colorful wings', 'tubular flowers', 'soft focus', 'neutral or pastel hues'])
iteration: 51 generation: def newfun(image): return image.score(['stone', 'curved body', 'yellow flowers', 'edible fruit', 'sweet fragrance', 'spiky thorns'])
iteration: 52 generation: def newfun(image): return image.score(['modified leaves', 'may be bright red', 'yellowish flowers', 'round receptacles', 'cylindrical leaves', 'a branched stem'])
iteration: 53 generation: def newfun(image): return image.score(['spiky branches', 'may have an iridescent sheen', 'rows of bristles along the stem', 'feathery fronds', 'spotted or striped', 'button-like flowers'])
iteration: 54 generation: def newfun(image): return image.score(['aromatic flowers', 'tubular clusters', 'dull green or brown', 'woody plants', 'almond-shaped', 'pairs of opposite leaves'])
iteration: 55 generation: def newfun(image): return image.score(['red berries', 'waxy leaves', 'white or cream-colored flowers', 'thorns', 'small tree', 'straight stem'])
iteration: 56 generation: def newfun(image): return image.score(['snowflakes glisten', 'snow-covered trees', 'the grayish-brown tree trunk rises', 'at least one upraised knee', 'small ornate details', 'human form'])
iteration: 57 generation: def newfun(image): return image.score(['related to moss', 'grass-like leaves', 'terminalbuds', 'flowers or fruit', 'staminate flowers', 'shrubs'])
iteration: 58 generation: def newfun(image): return image.score(['tufted flowers', 'divided leaves', 'furry fruit', 'woody plant', 'shrubby growth', 'pinkish or yellowish flower clusters'])
iteration: 59 generation: def newfun(image): return image.score(['flowers of various shapes and colors', 'typically round or oval in shape', 'sticky sap', 'may have waxy leaves', 'grow in dense clusters', 'used as a sweet flavoring agent'])
iteration: 60 generation: def newfun(image): return image.score(['thin sheets of old ice', 'stalks with round clusters of flowers', 'a watering can', 'a fence', 'dried and withered plants', 'mistletoe'])
iteration: 61 generation: def newfun(image): return image.score(['process of breaking down organic materials', 'moss and lichen', ' has a long Boom', 'ornate carvings', 'raised ribbing', 'rope tied around the trunk'])
iteration: 62 generation: def newfun(image): return image.score(['related to moss', 'grass-like leaves', 'terminalbuds', 'flowers or fruit', 'staminate flowers', 'shrubs'])
iteration: 63 generation: def newfun(image): return image.score(['stereophyllous leaf arrangement', 'hermaphroditic flowers', 'branches and stems are often covered in short hairs', 'speckled or spotted', 'brownish-gray or reddish-brown', 'tendrils'])
iteration: 64 generation: def newfun(image): return image.score(['billowy garlands', 'bunches of small, brown flower clusters', 'haphazard arrangement', 'window or doorway', 'rustic, country scene', 'telltale white, bell-shaped flowers'])
iteration: 65 generation: def newfun(image): return image.score(['pink in color', 'round and smooth', 'powdery mildew', 'grows up trees', 'red stamens', 'a single-celled fungus'])
iteration: 66 generation: def newfun(image): return image.score(['ornate', 'hand carved', 'strips of bark and twigs', 'chains', 'protruding eyes', 'a line of brass buttons'])
iteration: 67 generation: def newfun(image): return image.score(['compound leaves', 'strong scent', 'brightly colored flowers', 'a dense cluster of leaves', 'spreading branches', 'a plant of the genus Quercus'])
iteration: 68 generation: def newfun(image): return image.score(['fronds', 'growing on rocks or soil', 'thallus', 'lichenized structure', 'hyphae', 'crustose lichens'])
iteration: 69 generation: def newfun(image): return image.score(['a patch of grass', 'low-growing shrubs', 'smooth, gray bark', 'a flowering plant group', 'types of willows', 'animals often eat the leaves'])
iteration: 70 generation: def newfun(image): return image.score(['onyx', 'flies', 'hollow stem', 'caterpillars', 'spiky leaves', 'catkins'])
iteration: 71 generation: def newfun(image): return image.score(['a areas of dead trees in a forest', 'a type of tree with deciduous leaves', 'a stump', 'a brown or gray trunk', 'a heavily folded mountain', 'a small stream'])
iteration: 72 generation: def newfun(image): return image.score(['often used as food source', 'yellow flowers', 'heart-shaped leaves', 'fibrous roots', 'woody plant', 'caterpillars eat the leaves'])
iteration: 73 generation: def newfun(image): return image.score(['rows of needle-like leaves', 'channelled bark', 'young stems are often covered with a powdery, white bloom', 'golden flowers', 'often fragrant', 'non-shiny leaves'])
iteration: 74 generation: def newfun(image): return image.score(['the base of the leaf blade is lobed or separated into leaflets', 'canariensis', 'used to make furniture', 'a cup-shaped flower', 'ball-shaped clusters of yellow flowers', 'covered with a powdery substance'])
iteration: 75 generation: def newfun(image): return image.score(['hollow stem', 'insignificant flowers', 'can grow up to 100 feet tall', '9-17 leaflets that alternate along the stem', 'rust-colored', 'sweet-smelling flowers'])
iteration: 76 generation: def newfun(image): return image.score(['thorns', 'shrubs with round, bred flowers', 'rugose', 'yellow horned poppy', 'pinnate leaves', 'a very poisonous plant'])
iteration: 77 generation: def newfun(image): return image.score(['spiky leaves', 'stem deciduous woody plant', 'completely surrounding', 'ligulate flowers', '5 petals', 'the green sepals'])
iteration: 78 generation: def newfun(image): return image.score(['bracts that resemble tiny leaves', 'spherical flower clusters', 'dome-shaped growth habit', 'fuzzy, white caterpillars', 'pointed tips', 'orange, pink, or red'])
iteration: 79 generation: def newfun(image): return image.score(['ornamental tree', 'feathery leaves', 'white', 'cluster of berries', 'oval', 'bent or twisted trunk'])
iteration: 80 generation: def newfun(image): return image.score(['sunflowers or other brightly colored flowers', 'trees or bushes in the background', 'a metal railing', 'a large stone monument'])
iteration: 81 generation: def newfun(image): return image.score(['tufted flowers', 'divided leaves', 'furry fruit', 'woody plant', 'shrubby growth', 'pinkish or yellowish flower clusters'])
iteration: 82 generation: def newfun(image): return image.score(['polka dots', 'twisting tendrils', 'climbs up a trellis', 'flowers are pink or purple', 'leaves have three, jagged lobes'])
iteration: 83 generation: def newfun(image): return image.score(['succulent stem', 'rounded leaves', 'fuzzy fruit', 'solitary flowers', 'may be attacked by insects', 'strong scent'])
iteration: 84 generation: def newfun(image): return image.score(['tangled, woody stems', 'ochre', 'twigs', 'hollyhock-like flowers', 'a bench', 'a country or rustic feel'])
iteration: 85 generation: def newfun(image): return image.score(['chaga is a type of', 'burls made from abnormal growth', 'moss and other types of lichen', 'a covering of leaves', 'peeling bark', 'greyish-brown color'])
iteration: 86 generation: def newfun(image): return image.score(['shade tolerant', 'cluster of flowers or fruits', 'ovate leaves', 'twigs', 'veiny', 'ripen in fall'])
iteration: 87 generation: def newfun(image): return image.score(['a plant with hollow stems', 'round clusters of small flowers', 'hairy stems', 'two-lipped flowers', 'a piece of fabric', 'shiny black seeds'])
iteration: 88 generation: def newfun(image): return image.score(['mallow', 'old boot', 'kiwi-like fruit', 'a flowering plant', 'hairs on the leaves', 'a rosette of leaves'])
iteration: 89 generation: def newfun(image): return image.score(['related to ferns', 'feathery leaves', 'cluster of leaflets', 'brightly-colored berries', 'shrubs', 'vines'])
iteration: 90 generation: def newfun(image): return image.score(['red or green leaves', ' newer leaves are growth in a surrounding formation', 'outgrowths from the stem', 'yellow flowers', ' pods', 'showy blooms'])
iteration: 91 generation: def newfun(image): return image.score(['astringent', 'anthers & pistils', 'yellowish stamens', '5 parted', 'starfish-shaped calyx', 'flowering branches'])
iteration: 92 generation: def newfun(image): return image.score(['dwarf Citrus', 'thorns', 'stem and branches are densely pubescent', 'large amounts of used tea', 'uncinate (curved) thorns', 'dense flower clusters'])
iteration: 93 generation: def newfun(image): return image.score(['appears similar to a rotten tree trunk', 'a kind of growth on a tree', 'horizontal layers of bark', 'dense foliage', 'a type of flower', 'prickly seed pods'])
iteration: 94 generation: def newfun(image): return image.score(['densely clustered flowers', 'acuminate leaf tips', 'a flowering vine', 'can be pink', 'woolly hairs', 'bunches of fruit'])
iteration: 95 generation: def newfun(image): return image.score(['sticky droplets covering the plant', 'small white flowers', 'green or reddish hairy stems', 'funny shaped leaves', 'an Evergreen tree', 'releases pollen in spring'])
iteration: 96 generation: def newfun(image): return image.score(['purple flowers', 'interwoven, slender stems', 'catkin-like inflorescense', 'grayish-brown leaves', 'small twigs', 'dangling, velvety seed pods'])
iteration: 97 generation: def newfun(image): return image.score(['pretty, delicate leaves', 'interwoven clusters of berries', 'many small, white flowers', 'a First Nations design', 'a gentle slope', 'a brown bear'])
iteration: 98 generation: def newfun(image): return image.score([' prickly leaves', 'fuzzy caterpillar', 'snow covered', 'twigs and branches', 'a frozen body of water'])
iteration: 99 generation: def newfun(image): return image.score(['fuzzy green balls', 'waxy green leaves', 'red berries', 'thorny', 'dripping with dew', 'tendrils'])
iteration: 100 generation: def newfun(image): return image.score(['sunflowers', 'clusters of small, white flowers', 'bell-shaped flowers', 'hairy leaves', 'spiky', 'black and white stripes'])
iteration: 101 generation: def newfun(image): return image.score(['a small evergreen tree', 'saprophyte', 'leaves covered with powdery mildew', 'a deciduous shrub', 'the larva of a butterfly', 'produces yellow flowers'])
iteration: 102 generation: def newfun(image): return image.score(['small red flowers', 'small evergreen shrubs', 'basalt rocks', 'lichen covered', 'parallel-veined leaves', 'dry stream bed'])
iteration: 103 generation: def newfun(image): return image.score(['thorny crowns', 'lichens', 'painted Antonyms', 'bark(tree)', 'often used as decoration', 'spiky balls', 'cedar sapling'])
iteration: 104 generation: def newfun(image): return image.score(['bright orange-red flowers', 'highly toxic', 'lip-like petals', 'a bumblebee', 'fuzz', 'developing seed pods'])
iteration: 105 generation: def newfun(image): return image.score(['thorny stems', 'pigmented fur', 'spines or quills', 'shares a symbiotic relationship with fungi', 'ovoid', 'cluster of tiny flowers'])
iteration: 106 generation: def newfun(image): return image.score(['leaves with deep lobes', 'acorns', 'living in a forest', 'very tall trees', 'varied colors', 'moss and lichen'])
iteration: 107 generation: def newfun(image): return image.score(['densely hairy leaves', 'grows in clusters', 'yellow petals', 'hairy, thorny stems', 'lives in a variety of habitats', 'pipal tree'])
iteration: 108 generation: def newfun(image): return image.score(['granny smith apple tree', 'speckled alder', 'a form of lichen', 'a hoary allysum', 'goldenrod', 'hedge apples'])
iteration: 109 generation: def newfun(image): return image.score(['spiky leaves', 'a couple types of cacti', 'spines', 'branches that spread out', 'desert plants', 'thorns'])
iteration: 110 generation: def newfun(image): return image.score(['abundant yellow flowers', 'spreading branches', 'related to the daisy', 'may be hairy', 'cluster of fruit', 'bluish green leaves'])
iteration: 111 generation: def newfun(image): return image.score(['prostrate (creeping) growth', 'dark purple flower clusters', 'bright yellow flowers', 'a thorny shrub', 'slender, waxy leaves', 'dense clusters of small, strongly fragrant flowers'])
iteration: 112 generation: def newfun(image): return image.score(['peeling bark', 'may have fruit or flowers', 'long curved tube with small holes', 'reddish-brown color', 'moss and other types of lichen', 'hooked branches'])
iteration: 113 generation: def newfun(image): return image.score(['thorny crowns', 'lichens', 'painted Antonyms', 'bark(tree)', 'often used as decoration', 'spiky balls', 'cedar sapling'])
iteration: 114 generation: def newfun(image): return image.score(['slower-growing trees', 'shiny green leaves', 'sticky sap', 'four-petaled flowers', 'branches', 'juicy pulp'])
iteration: 115 generation: def newfun(image): return image.score(['waxy flowers', 'orange-red or yellow flowers', 'spines or prickles', 'upper leaves', 'bell-shaped', ' branchlets'])
iteration: 116 generation: def newfun(image): return image.score(['reddish-purple flowers', 'leaf rosettes', 'woody stems', 'spiky seed pods', 'waxy leaves', 'tendrils'])
iteration: 117 generation: def newfun(image): return image.score(['prickly leaves', 'fuzzy caterpillar', 'snow covered', 'twigs and branches', 'a frozen body of water'])
iteration: 118 generation: def newfun(image): return image.score(['wide, spreading branches', ' leaves grow in large clusters', 'a waxy coating on leaves and stems', 'tight clusters of flowers', 'crimson flowers', 'grow along streams'])
iteration: 119 generation: def newfun(image): return image.score(['serrated leaves', 'light green', 'hairy stems', 'arranged in clusters', 'woolly leaves', 'yellow-green flowers'])
iteration: 120 generation: def newfun(image): return image.score(['fuzzy green balls', 'waxy green leaves', 'red berries', 'thorny', 'dripping with dew', 'tendrils'])
iteration: 121 generation: def newfun(image): return image.score(['grass-like leaves', 'waxy fruit', 'spreading branches', 'woody shrub or small tree', 'greenish-yellow flowers', 'downy stem'])
iteration: 122 generation: def newfun(image): return image.score(['trumpet-shaped flowers', 'leaves in pairs', 'acuminate tips', 'thin branches', 'smooth tree trunk', 'yellow petals'])
iteration: 123 generation: def newfun(image): return image.score(['spirally arranged leaves', 'grayish pubescence', 'spiny branches', 'waxy flowers', 'canescent (covered with a whitish bloom)', 'paint-like aroma'])
iteration: 124 generation: def newfun(image): return image.score(['sclerophyllous leaves', 'a showy inflorescence', 'spiky', 'pinkish to reddish twigs and petioles', 'ripe fruit', 'clustered flowers'])
iteration: 125 generation: def newfun(image): return image.score(['small branches', 'pink or red flowers', 'pith', 'cotton-like seeds', 'a tree with a single stem or trunk'])
iteration: 126 generation: def newfun(image): return image.score(['angular branches', 'minutely hairy leaves', 'pale blue flowers', 'bright orange or yellow blooms', 'tufted hairs on top'])
iteration: 127 generation: def newfun(image): return image.score(['fuzzy catkins', 'shimmering leaves', 'hairy stems', "don't always have leaves", 'get their nutrients from the air'])
iteration: 128 generation: def newfun(image): return image.score(['sclerophyllous leaves', 'a showy inflorescence', 'spiky', 'pinkish to reddish twigs and petioles', 'ripe fruit', 'clustered flowers'])
iteration: 129 generation: def newfun(image): return image.score(['granular appearance', 'gives off a bad smell', 'seed pods', 'delicate white petals', 'divided leaves', 'greenish-yellow flowers'])
iteration: 130 generation: def newfun(image): return image.score(['shrubs', 'woody vines', ' lobed or deeply toothed leaves', ' pair of small stamens', 'clusters of small', 'spring-blooming flowers'])
iteration: 131 generation: def newfun(image): return image.score(['interlocking pieces of bark', 'resembles a vase', 'a type of evergreen tree', 'pale yellow flowers', 'a drooping branch', 'a type of fungus'])
iteration: 132 generation: def newfun(image): return image.score(['cone-shaped structures', 'evergreen needles', 'resin', 'brown branches', 'may have spruce-tip blight', 'dwarf mistletoe'])
iteration: 133 generation: def newfun(image): return image.score(['dotted with glands', 'palmate leaves', 'branches with dark, scaly bark', 'yellow-green flowers', 'papery bracts'])
iteration: 134 generation: def newfun(image): return image.score(['the scent of citrus', 'feathery fronds', 'fluffy seeds', 'ringed bark', 'waxy red berries', 'prickly stems'])
iteration: 135 generation: def newfun(image): return image.score(['vines or shrubs', 'clusters of small', 'fragrant flowers', 'yellow or orange', 'hairy leaves', 'hard wood'])
iteration: 136 generation: def newfun(image): return image.score(['evergreen needles', 'resin', 'grows on trees', 'yellow-green flowers', 'siding or other exterior finishes'])
iteration: 137 generation: def newfun(image): return image.score(['brightly colored fruits', 'small hairs on the fruits', 'usually grows in dense stands', 'palmate leaves', 'a fungus that grows', 'on decaying plant matter'])
iteration: 138 generation: def newfun(image): return image.score(['red or purple berries', 'small, fuzzy leaves', 'winter holly', 'prickly leaves', 'green needles', 'holly-like foliage'])
iteration: 139 generation: def newfun(image): return image.score(['has indications of galls', 'glands on stems', 'woolly leaves', 'a temperate climate', 'summer flowers', 'caterpillars'])
iteration: 140 generation: def newfun(image): return image.score(['pale yellow flowers', 'woody nightshade', 'has small purple flowers', 'acacias', 'brittle branches', 'fuzzy grey leaves'])
iteration: 141 generation: def newfun(image): return image.score(['type of tree', 'angled branches', 'leaves that hang down', 'may have peeling bark', 'leaves arc shaped', 'white flowers'])
iteration: 142 generation: def newfun(image): return image.score(['oak tree', 'maple tree', 'pine tree', 'walnut tree', 'orange tree', 'birch tree'])
iteration: 143 generation: def newfun(image): return image.score(['a flowering vine', 'twin flowers on opposite sides of the stem', 'stalk with a terminal flower', 'orange or red berries', 'heart-shaped leaves', 'glade fern'])
iteration: 144 generation: def newfun(image): return image.score(['parallel rows', 'fine hairs', 'a type of evergreen tree', 'bunches of small white flowers', 'fruit hangs in clusters', 'curved downward'])
iteration: 145 generation: def newfun(image): return image.score(['pointed terminal buds', 'fuzzy', 'appendages ( modifications of leaves)', 'turgid', 'forming a vase-shaped inflorescence', 'glands on leaves'])
iteration: 146 generation: def newfun(image): return image.score(['a showy inflorescence', 'a group of plant species', 'woody', 'compound leaves', 'tall trees', 'star-shaped flowers'])
iteration: 147 generation: def newfun(image): return image.score(['a magical forest', 'dense undergrowth', 'vines', 'lichen', 'broom-like shrubs', 'shade-tolerant plants'])
iteration: 148 generation: def newfun(image): return image.score(['grape vines', 'a grape arbor', 'ivy', 'clematis', 'wisteria', 'honeysuckle'])
iteration: 149 generation: def newfun(image): return image.score(['spreading shrubs', 'hooded flowers', 'spikes of white flowers', 'leafyuropteridaceae', ' flowers in late winter', 'ornamental shrubs'])
iteration: 150 generation: def newfun(image): return image.score(['leaves have teeth', 'golden tree', 'a deciduous tree', 'speckled', 'maple-like leaves', 'smooth gray bark'])
iteration: 151 generation: def newfun(image): return image.score(['waxy coating on leaves', 'small reddish flowers', 'hairy leaves and stems', 'oval leaves', 'a thorny shrub', 'a fruit with five petals'])
iteration: 152 generation: def newfun(image): return image.score(['bone white flowers', 'a type of lichen', 'speckled', ' has berries', 'understory vegetation', 'a type of fern'])
iteration: 153 generation: def newfun(image): return image.score(['trees with peeling bark', ' may have snow on them', 'pale yellow flowers', 'white or light gray bark', 'grow in clusters', ' paper-like white bark'])
iteration: 154 generation: def newfun(image): return image.score(['bright yellow dandelion flowers', 'frilly leaves', 'verdigris patina', 'moss', 'lichen', 'springtime'])
iteration: 155 generation: def newfun(image): return image.score(['twisting branches', 'grayish bark', 'small white flowers', 'clusters of small, fragrant flowers', 'glossy leaves', 'may be used medicinally'])
iteration: 156 generation: def newfun(image): return image.score(['densely pubescent Twig', 'mitten-shaped leaves', 'tight clusters of red flowers', 'rounded crown', 'maple-like leaves', 'clusters of berries'])
iteration: 157 generation: def newfun(image): return image.score(['hollow stem plants', 'jointed stems', 'green or purple stems', 'leaves with saw-tooth edges', 'spiny bracts', 'orange or yellow flowers'])
iteration: 158 generation: def newfun(image): return image.score(['ringed bark', 'maple-like leaves', 'densely tufted', 'numerous stamens', 'clustered flowers', 'fuzzy red fruit'])
iteration: 159 generation: def newfun(image): return image.score(['leaves clustered at ends of branches', 'crown on the top of the plant', 'spiky leaves', 'lichen grows on the bark', 'a birch tree', 'small, inconspicuous flowers'])
iteration: 160 generation: def newfun(image): return image.score(['spring blooms', 'furry leaves and stems', 'soft, velvety leaves', 'produced by certain plants during certain times of year'])
iteration: 161 generation: def newfun(image): return image.score(['smooth bark', 'oval leaves', 'creamy white flowers', 'staminate flowers and pistillate flowers', 'reddish-brown twigs', 'sweet-smelling flowers'])
iteration: 162 generation: def newfun(image): return image.score(['pouched leaves', 'long hair on stem', 'split open to release spores', 'clusters of red fruit', ' maple-like leaves', ' associated with bees'])
iteration: 163 generation: def newfun(image): return image.score(['short-lived flowers', 'fuzzy leaves', 'forked branches', 'fruit', 'a tree', 'many tiny flowers'])
iteration: 164 generation: def newfun(image): return image.score(['bright red berries', 'evergreen shrub', 'stalked winter buds', 'glaucous leaves', 'four-petaled flowers', 'thorns'])
iteration: 165 generation: def newfun(image): return image.score(['buckthorn', 'a black walnut tree', 'elderberries', 'a tall plant with showy flowers', 'puffballs', 'honey locust'])
iteration: 166 generation: def newfun(image): return image.score(['tufts of hair', 'minute, black flowers', 'lichen', 'a crustose lichen', 'frequently on rocks, trees, and fence posts', 'athers'])
iteration: 167 generation: def newfun(image): return image.score(['pale yellow flowers', 'a drooping branch', 'a type of fungus', 'interlocking pieces of bark', 'resembles a vase', 'a type of evergreen tree'])
iteration: 168 generation: def newfun(image): return image.score(['low growing vines', 'may have leaves with teeth', 'axillary buds', 'may have thorns', 'pale blue flowers', 'light  green stems'])
iteration: 169 generation: def newfun(image): return image.score(['hairy leaves', 'upright, unbranched stem', 'a tree with flaky bark', 'branching, tree-like', 'spiky', 'small prickles'])
iteration: 170 generation: def newfun(image): return image.score(['compound leaves', 'tree with shiny, dark green leaves', 'peeling bark', 'yellowish flowers', 'type of poplar tree', 'found in wetlands'])
iteration: 171 generation: def newfun(image): return image.score(['sycamore trees', 'maple trees', 'sweetgum trees', 'hickory trees', 'tulip trees', 'yellow-poplar trees'])
iteration: 172 generation: def newfun(image): return image.score(['limbs covered with lichens', 'red berries', 'blazing-star', 'funnel-shaped flowers', 'leaves saw-toothed', 'bark is smooth and gray'])
iteration: 173 generation: def newfun(image): return image.score(['tree with a long, thin trunk', 'tall tree with a broad crown', 'birds in spring', 'flowers pollinated by bees', 'summer flowers', 'edible nuts'])
iteration: 174 generation: def newfun(image): return image.score(['cluster of small flowers', 'stringy sap', 'hairy leaves', 'stick-like', 'found in the forest'])
iteration: 175 generation: def newfun(image):    return image.score(['bright red berries', 'evergreen shrub', 'stalked winter buds', 'glaucous leaves', 'four-petaled flowers', 'thorns', 'a small, wooden structure'])
iteration: 176 generation: def newfun(image): return image.score(['sheets of bark', 'winged fruit', 'sweetgum balls', 'variegated leaves', 'synonymous with versatility', 'flowers bloom in autumn'])
iteration: 177 generation: def newfun(image): return image.score(['spiky leaves', 'a type of cactus', 'yellow spines', 'blooming only in spring', 'profusion of flowers', 'stamens united at the base into a column'])
iteration: 178 generation: def newfun(image): return image.score(['creeping stems', 'conical clusters', 'yellow-green flowers', 'oak leaves', 'grows in clumps', 'pretty flowers'])
iteration: 179 generation: def newfun(image): return image.score(['neatly rounded leaves', 'grows in the wild', 'a bushy plant', 'spiky green fruits', 'hairy stems', 'bright yellow blossoms'])
iteration: 180 generation: def newfun(image): return image.score(['granny smith apple tree', 'speckled alder', 'a form of lichen', 'a hoary allysum', 'goldenrod', 'hedge apples'])
iteration: 181 generation: def newfun(image): return image.score(['powder-puff flowers', ' tufted hairs', 'flowers in globose clusters', 'light green leaves', 'distinctive woody roots', ' found in sandy soils'])
iteration: 182 generation: def newfun(image): return image.score(['bright blue flowers', 'shiny black fruit', 'delicate, star-shaped flowers', 'moss-covered tree trunks', 'lichen', 'streams'])
iteration: 183 generation: def newfun(image): return image.score(['lichen', 'minute flowers on the end of branches', 'a spreading tree', 'maple-like leaves', 'red, orange or yellow leaves', 'grows up rocks'])
iteration: 184 generation: def newfun(image): return image.score(['leaves have five lobes', 'whitish woolly hairs', 'hollow stem', 'winter buds', 'pollinated by wind', 'often grows in dense thickets'])
iteration: 185 generation: def newfun(image): return image.score(['heavily toothed leaves', 'sticky sap', 'golden yellow flowers', 'furry leaves', 'clusters of tiny flowers'])
iteration: 186 generation: def newfun(image): return image.score(['peeling bark', 'looks like bark', 'polygonalfurrowed bark', 'gray or silver bark', 'also known as white birch'])
iteration: 187 generation: def newfun(image): return image.score(['spreading shrubs', 'hooded flowers', 'spikes of white flowers', 'leafyuropteridaceae', ' flowers in late winter', 'ornamental shrubs'])
iteration: 188 generation: def newfun(image): return image.score(['crabapple tree', 'persimmon tree', 'sweet gum tree', 'sycamore tree', 'tulip tree', 'hickory tree'])
iteration: 189 generation: def newfun(image): return image.score(['whitish, bumpy branches', 'succulent leaves', 'seed pods resembling corkscrews', 'seed heads resembling birds', 'yellow-green flowers', 'long-lived evergreen trees'])
iteration: 190 generation: def newfun(image): return image.score(['agave plant', 'yucca plant', 'jimsonweed plant', 'prickly pear cactus', 'cholla plant', 'ocotillo plant'])
iteration: 191 generation: def newfun(image): return image.score(['black tar-like spots on leaves or stems', 'yellowish-green flowers', 'climbing plant', 'a bee or bug hotel', 'velvety leaves', 'winding stems'])
iteration: 192 generation: def newfun(image): return image.score(['russet-colored', 'cluster of round fruits', ' drooping clusters', 'woolly leaves', 'grows on rocky slopes', 'spines'])
iteration: 193 generation: def newfun(image): return image.score(['caterpillar-like larvae', 'ump-shaped flowers', 'fuzzy leaves', 'birch-like bark', 'tight clusters', 'a maple tree'])
iteration: 194 generation: def newfun(image): return image.score(['synonymous with versatility', 'grow in clusters', 'flowers bloom in autumn', 'trees with peeling bark', 'white or light gray bark', 'pale yellow flowers'])
iteration: 195 generation: def newfun(image): return image.score(['densely clustered flowers', 'a type of tropical tree', 'knobby bark', 'peeling bark', 'yellow flowers', 'spiky leaves'])
iteration: 196 generation: def newfun(image): return image.score([' heart-shaped leaves', ' woody vines', 'tendrils', 'brownish flowers, ' 'orange flowers', 'thicket-forming shrub'])
iteration: 197 generation: def newfun(image): return image.score(['pinesap', 'bent or twisted branches', 'may have pods', 'stands of trees', 'sapsucker', 'bunches of small cones'])
iteration: 198 generation: def newfun(image): return image.score(['red berries', 'may have spines', 'thorns', ' Catalpa speciosa', 'a flowering plant', 'tube-shaped flowers'])
iteration: 199 generation: def newfun(image): return image.score(['bright yellow flowers', 'densely clustered flowers', 'fuzzy green leaves', 'upright, branching growth', 'produces a gum', 'tall plants'])
