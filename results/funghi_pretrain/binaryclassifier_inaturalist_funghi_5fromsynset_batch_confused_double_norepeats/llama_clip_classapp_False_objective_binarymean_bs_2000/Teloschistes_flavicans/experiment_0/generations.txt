iteration: 0 generation: def newfun(image): return image.score(['endless loop or knot', 'approximately spherical shape', 'flexible design', 'normally served hot', 'takes the form of yarn made from fibers', 'onyx or opal stone'])
iteration: 1 generation: def newfun(image): return image.score(['a fitting snugly covering the nose and mouth', 'made of soft, fluffy material', 'made of silk, wool, or other natural fibers', 'often worn for formal occasions or to convey academic status', 'several straps or bands for attaching it to the wearer', 'typically red or blue'])
iteration: 2 generation: def newfun(image): return image.score(['plants or trees growing nearby', 'exit wound dark and shriveled', 'fuzzy, kiwi-like fruit', 'long hair, often blonde', 'speckled', 'pointed tail'])
iteration: 3 generation: def newfun(image): return image.score(['plants or trees growing nearby', 'exit wound dark and shriveled', 'fuzzy, kiwi-like fruit', 'long hair, often blonde', 'speckled', 'pointed tail'])
iteration: 4 generation: def newfun(image): return image.score(['held in the hand', 'entwined', 'tightly-wound cluster of materials', 'b forcefully emitted', 'knowledge or information', 'blinking light'])
iteration: 5 generation: def newfun(image): return image.score(['plants or trees growing nearby', 'exit wound dark and shriveled', 'fuzzy, kiwi-like fruit', 'long hair, often blonde', 'speckled', 'pointed tail'])
iteration: 6 generation: def newfun(image): return image.score(['hydrangea-like cluster of florets', 'cylindrical shape', 'white, yellow, or orange', 'typically round', 'four-legged animal', 'may have a circular trough around the edge'])
iteration: 7 generation: def newfun(image): return image.score(['irises line the surface', 'birds often nest in the boxes', 'juniper berries', 'others may be formed naturally', 'may be used to build a charcoal fire', 'may have spokes'])
iteration: 8 generation: def newfun(image): return image.score(['tertiary synganglion', 'types of neurotransmitters released by the enteric nervous system', 'strychnine', 'several long hairs on its body', 'a tall, pointed crown', 'a long, streaming mane'])
iteration: 9 generation: def newfun(image): return image.score(['raised on hackles', 'ballpoint pen ink', 'hair that is often curly or wavy', 'a piece of fabric worn around the neck', 'a horn or antler', 'a colorful, iridescent sheen'])
iteration: 10 generation: def newfun(image): return image.score(['dense, coarse fur', 'one or more flowers blooming from its stem', 'may have spots or be entirely black', ' nouve films accurately capture', 'dense foliage and brightly colored fruits', 'three claws on each foot'])
iteration: 11 generation: def newfun(image): return image.score(['fuzzy, kiwi-like fruit', 'exit wound dark and shriveled', 'speckled', 'pointed tail', 'two pairs of tentacles', 'long hair, often blonde'])
iteration: 12 generation: def newfun(image): return image.score([' Fairlight-Red implemented a whole-body distortion feature.'])
iteration: 13 generation: def newfun(image): return image.score(['fuzzy, warm, and feathery', 'embers glowing within the firebox', 'spandex or other stretchy material', 'a school google', 'vegetation growing on top', 'stripes or spots'])
iteration: 14 generation: def newfun(image): return image.score(['tightly clustered florets', 'long, shaggy fur', 'a curved or hammer-like shape', 'typically made from a vertebrate hide', 'a lattice or trellis-like pattern', 'a round, furry body'])
iteration: 15 generation: def newfun(image): return image.score(['typically hangs from a tree', 'suspension cables or thick, covered ropes', 'contents may spill or be visible', 'distinct breathing sounds', 'fastened at the top by a cord or strap', 'onto a goblet or similar vessel'])
iteration: 16 generation: def newfun(image): return image.score(['a core of fertile soil surrounded by a layer of decaying plant material', 'вши биwald', 'twigs and dead leaves', 'a tight cluster of grapes', 'a ring of mushrooms', 'stalks that are often dyed different colors'])
iteration: 17 generation: def newfun(image): return image.score(['a band of color at the top', 'surrounded by an aura of film grain', 'a dark or shadowy outline', 'jagged peaks', 'an explosion of vapor and water', 'complete vertical symmetry'])
iteration: 18 generation: def newfun(image): return image.score(['spiky, dangerous-looking plant', 'curls or waves of hair', 'interioruttonducation taken to a high degree of finish', 'sculpted and ornate', 'innovative and creative imagery', 'power to move clouds'])
iteration: 19 generation: def newfun(image): return image.score(['feathers in shades of red, orange, and yellow', ' сотни', 'a bed of straw or hay', ' opened maw', 'serrated edges', 'sharp points'])
iteration: 20 generation: def newfun(image): return image.score(['observed in lakes', 'mature trees', 'allow light to filter through', 'trunks or large branches covered in moss', 'normally applied on dogs', 'pawing at the ground'])
iteration: 21 generation: def newfun(image): return image.score(['a white, fleshy interior with black seeds'])
iteration: 22 generation: def newfun(image): return image.score(['soft and feathery', 'flower-like growths', 'a decorative headdress', 'hollow', 'several long necklaces hanging down', 'dappled or scribbled pattern'])
iteration: 23 generation: def newfun(image): return image.score(['mucilaginous coating', 'fruiting bodies', 'awl-shaped', 'covered in hair or fur', 'found in the prairie', 'plants are usually small and compact'])
iteration: 24 generation: def newfun(image): return image.score(['blue or green iridescent wings', 'rounded leaf tips', 'a twisting motion', 'sticks or other objects protruding from the surface', 'lacy', 'loops of yarn'])
iteration: 25 generation: def newfun(image): return image.score(['lines radiating from a central point', 'a dense, fibrous crown', 'speaks in a whisper or a hiss', 'hair that stands up from the scalp', 'sharpened into a stylized point', ' curved around the sides'])
iteration: 26 generation: def newfun(image): return image.score(['dreadlocks'])
iteration: 27 generation: def newfun(image): return image.score(['adapted for jumping', 'stalks with small, tightly packed flowers', 'a sort of fur or matted wool', ' Matthew McConaughey', 'switch or button to activate it', 'stored by curling into a tight coil'])
iteration: 28 generation: def newfun(image): return image.score(['powerful drug used to treat respiratory problems', 'several pom-poms or long, shaggy hair', 'pressed into a rectangle(-shaped block', 'surrounded by a hazy, cloudy aura', 'a straight or curved horn on the head', 'classic cantina music'])
iteration: 29 generation: def newfun(image): return image.score(['pits or seeds found inside', 'thorny', 'pure white', 'annual plants', 'succulent', 'creeping stem'])
iteration: 30 generation: def newfun(image): return image.score(['sagittate leaves', 'lace-like foliage', 'hooked spines', 'a prominent navel', 'veins of an insect', 'a bad smell'])
iteration: 31 generation: def newfun(image): return image.score(['distinctive howling cry', 'glittering frost', 'staminate flowers', 'smooth surface', 'a song about rain', 'yarns or twine'])
iteration: 32 generation: def newfun(image): return image.score(['messy, unruly tufts', 'spiky, vicious thorns', 'a bare structure, such as a tree branch', 'fleshy interior', 'akter skritches head', 'may haveмаль final exam'])
iteration: 33 generation: def newfun(image): return image.score(['a long, hairy body', 'translucent or clear tissues', 'branching networks', 'grows or found in caves', 'typically tastes salty', 'edges have rounded segments'])
iteration: 34 generation: def newfun(image): return image.score(['interior illumination', 'made of papyrus', 'trimmed with lace', 'on uneven terrain', 'wire coils', 'human mouth'])
iteration: 35 generation: def newfun(image): return image.score(['powerful drug used to treat respiratory problems', 'several pom-poms or long, shaggy hair', 'pressed into a rectangle(-shaped block', 'surrounded by a hazy, cloudy aura', 'a straight or curved horn on the head', 'classic cantina music'])
iteration: 36 generation: def newfun(image): return image.score(['leaves or branches', 'alternating light and dark bands', 'maypole', 'made of hollow, twisted reeds', 'stems that bear the flowers', 'shiny black head with narrow, pointed snout'])
iteration: 37 generation: def newfun(image): return image.score(['a fleshy, mostly red interior with black seeds'])
iteration: 38 generation: def newfun(image): return image.score(['archipelago of volcanic islands', 'speaks with a Scottish accent', 'hair braided into long, thin strands', 'series of narrow straits', 'pillow made of soft, supportive material', 'uses sonar and echolocation'])
iteration: 39 generation: def newfun(image): return image.score(['thousands of animals', 'tingly sensation', 'polyps', 'jasper', 'topaz', 'orange, red, pink, purple, and yellow'])
iteration: 40 generation: def newfun(image): return image.score(['a core of fertile soil surrounded by a layer of decaying plant material', 'fill in remaining space with random equipment', 'twigs and dead leaves', 'a tight cluster of grapes', 'a ring of mushrooms', 'stalks that are often dyed different colors'])
iteration: 41 generation: def newfun(image): return image.score(['root system', 'aromatic scent', 'unsegmented bodies', 'a carnivorous mammal', 'has a small head', 'sticky'])
iteration: 42 generation: def newfun(image): return image.score(['dabs of crimson', 'coiling tendrils', 'foveae subtend a heart-shaped zone including the lineations', 'bog near water', 'ulate ornamentation', 'auricle'])
iteration: 43 generation: def newfun(image): return image.score(['sticky', 'load-bearing', 'prehensile tail',  'covered with little hairlike growths', 'wrapped around itself', 'domed shell'])
iteration: 44 generation: def newfun(image): return image.score(['feathers, fur or other soft material', 'lace,  trim or ruffles', 'twine', 'bright red or green', 'parallel rows', 'silky strands'])
iteration: 45 generation: def newfun(image): return image.score(['bramble, with prickly stems'])
iteration: 46 generation: def newfun(image): return image.score(['animal waste', 'prehistoric', 'ribbon-like or circular in shape', 'used for cooking or heating', 'small intestine', 'living structure made of coral polyps'])
iteration: 47 generation: def newfun(image): return image.score(['roots often grow above the waterline'])
iteration: 48 generation: def newfun(image): return image.score(['a fleshy, mostly red interior with black seeds'])
iteration: 49 generation: def newfun(image): return image.score(['spiky plants with brightly colored flowers', ' topological spaces', 'set of connected rooms', 'intricately patterned surfaces', 'humanoid robots', 'twisting, turning, and angular lines'])
iteration: 50 generation: def newfun(image): return image.score(['fall foliage', 'tissue thin', 'rye spicule', 'freckles and a dimple', 'a mammary gland', 'spiky fur'])
iteration: 51 generation: def newfun(image): return image.score(['hair that is red or orange'])
iteration: 52 generation: def newfun(image): return image.score(['spiky plants with brightly colored flowers'])
iteration: 53 generation: def newfun(image): return image.score(['continuous trellis or frame hydroponics grow tube'])
iteration: 54 generation: def newfun(image): return image.score(['snow', 'iceformation on plants', 'a rose bud', 'brittle hairs', 'outlines of leaves', 'a gas associated with mountains'])
iteration: 55 generation: def newfun(image): return image.score(['spiky protrusions', 'wiry frame', 'leaves have jagged edges', 'a mess of barely contained fur or hair', 'covered with tangled undergrowth', 'tapering tail'])
iteration: 56 generation: def newfun(image): return image.score(['stick or branch covered by moss'])
iteration: 57 generation: def newfun(image): return image.score(['staminate flowers are borne in clusters'])
iteration: 58 generation: def newfun(image): return image.score(['covered with drooping, thread-like plant parts'])
iteration: 59 generation: def newfun(image): return image.score(['thicket-forming'])
iteration: 60 generation: def newfun(image): return image.score(['thousands of animals', 'tingly sensation', 'polyps', 'jasper', 'topaz', 'orange, red, pink, purple, and yellow'])
iteration: 61 generation: def newfun(image): return image.score(['a bottle', 'soft, billowy clouds', 'bright yellow passions flower', 'a tangled mess', 'Student driver', 'placing more importance on intellectual pursuits than physical ones'])
iteration: 62 generation: def newfun(image): return image.score(['reindeer moss', 'ozonated', 'fluorite crystals', 'tropical', 'volcanic islands', 'snowflakes'])
iteration: 63 generation: def newfun(image): return image.score(['feathery plumes'])
iteration: 64 generation: def newfun(image): return image.score(['cluster of white pine trees covering rocky slopes'])
iteration: 65 generation: def newfun(image): return image.score(['crystals or minerals deposited on a branch'])
iteration: 66 generation: def newfun(image): return image.score(['waxy red, green or orange flesh'])
iteration: 67 generation: def newfun(image): return image.score(['a coarse powder made from identified plants'])
iteration: 68 generation: def newfun(image): return image.score(['female flowers are located at the base of the plant'])
iteration: 69 generation: def newfun(image): return image.score(['spiny shrubs'])
iteration: 70 generation: def newfun(image): return image.score(['stick tangled in web'])
iteration: 71 generation: def newfun(image): return image.score(['tree with bark'])
iteration: 72 generation: def newfun(image): return image.score(['group of crows perched high up in tree branches'])
iteration: 73 generation: def newfun(image): return image.score(['fishing nets'])
iteration: 74 generation: def newfun(image): return image.score([' relatively thin', 'spreads rapidly', 'balloons or puffs', 'mass of roots', 'four or more strings', 'flowers have five or more petals'])
iteration: 75 generation: def newfun(image): return image.score(['bright yellow stamens'])
iteration: 76 generation: def newfun(image): return image.score(['yellow petals'])
iteration: 77 generation: def newfun(image): return image.score(['fuzzy chicks in a nest'])
iteration: 78 generation: def newfun(image): return image.score(['stringy', 'many-seeded', 'graceful stem', 'a terminal flower', 'silky hairs'])
iteration: 79 generation: def newfun(image): return image.score(['citrus', 'hollow stem', 'spiky leaves'])
iteration: 80 generation: def newfun(image): return image.score(['ropes or chains', 'reindeer moss'])
iteration: 81 generation: def newfun(image): return image.score(['moss covering rocks'])
iteration: 82 generation: def newfun(image): return image.score(['lichen covered rocks'])
iteration: 83 generation: def newfun(image): return image.score(['sweater or other clothing item knitted from wool yarn'])
iteration: 84 generation: def newfun(image): return image.score(['solar coronalної mass ejection with radiant feathery structures'])
iteration: 85 generation: def newfun(image): return image.score(['stick or branch covered by lichen'])
iteration: 86 generation: def newfun(image): return image.score(['spiny shrubs'])
iteration: 87 generation: def newfun(image): return image.score(['fuzzy buds'])
iteration: 88 generation: def newfun(image): return image.score(['spiky plants with brightly colored flowers'])
iteration: 89 generation: def newfun(image): return image.score(['trees with needle-like leaves'])
iteration: 90 generation: def newfun(image): return image.score(['foliage', 'bunching of branches', 'high, branching canopy', ' thick, dark trunk'])
iteration: 91 generation: def newfun(image): return image.score(['reindeer lichen'])
iteration: 92 generation: def newfun(image): return image.score(['hairy crown'])
iteration: 93 generation: def newfun(image): return image.score(['a web or network of interlocking threads'])
iteration: 94 generation: def newfun(image): return image.score(['hydrangea-like flower clusters'])
iteration: 95 generation: def newfun(image): return image.score(['crystals aggregated into branches'])
iteration: 96 generation: def newfun(image): return image.score(['foliose lichens'])
iteration: 97 generation: def newfun(image): return image.score(['lace-like form'])
iteration: 98 generation: def newfun(image): return image.score(['lichens grow on the trunks and branches'])
iteration: 99 generation: def newfun(image): return image.score(['cluster of red or reddish-purple grapes'])
iteration: 100 generation: def newfun(image): return image.score(['hair growing in many directions'])
iteration: 101 generation: def newfun(image): return image.score(['orange or yellow petals'])
iteration: 102 generation: def newfun(image): return image.score(['ropes or chains', 'a crown or tiara', 'reindeer moss'])
iteration: 103 generation: def newfun(image): return image.score(['woolly hairs on leaves and stems'])
iteration: 104 generation: def newfun(image): return image.score(['bows', 'brush-like branches', 'waxy coating'])
iteration: 105 generation: def newfun(image): return image.score(['tendrils'])
iteration: 106 generation: def newfun(image): return image.score(['organic shape', 'network of interconnected filaments'])
iteration: 107 generation: def newfun(image): return image.score(['made of tightly woven threads'])
iteration: 108 generation: def newfun(image): return image.score(['maple leaf juniper'])
iteration: 109 generation: def newfun(image): return image.score(['elongated fruits hang down'])
iteration: 110 generation: def newfun(image): return image.score(['a set of linked rings', 'an elastic texture', 'feathery fronds', 'root hairs', 'olive green', 'soil and rocks'])
iteration: 111 generation: def newfun(image): return image.score(['hairy fruits'])
iteration: 112 generation: def newfun(image): return image.score(['dried flowers and foliage'])
iteration: 113 generation: def newfun(image): return image.score(['nerve cells or fibers converging from various parts of the nervous system'])
iteration: 114 generation: def newfun(image): return image.score(['aerial roots'])
iteration: 115 generation: def newfun(image): return image.score(['involucre (a collection of bracts)'])
iteration: 116 generation: def newfun(image): return image.score(['blades of hair on a young plant'])
iteration: 117 generation: def newfun(image): return image.score(['strings of thread or yarn'])
iteration: 118 generation: def newfun(image): return image.score(['flowering stalks rise from basal rosettes'])
iteration: 119 generation: def newfun(image): return image.score(['succulent fleshy stems'])
iteration: 120 generation: def newfun(image): return image.score(['fungi growing on the decaying organic matter'])
iteration: 121 generation: def newfun(image): return image.score(['thread-like spines'])
iteration: 122 generation: def newfun(image): return image.score(['brittle, branching tree', 'often festooned with lichen or other epiphytic plants'])
iteration: 123 generation: def newfun(image): return image.score(['staminate flowers are borne in clusters'])
iteration: 124 generation: def newfun(image): return image.score(['botanical taxonomy'])
iteration: 125 generation: def newfun(image): return image.score(['crystals or minerals deposited on a tree branch'])
iteration: 126 generation: def newfun(image): return image.score(['pincushion outer calyx'])
iteration: 127 generation: def newfun(image): return image.score(['ropes or chains', 'reindeer moss'])
iteration: 128 generation: def newfun(image): return image.score(['tendrils'])
iteration: 129 generation: def newfun(image): return image.score(['a fibrous root system'])
iteration: 130 generation: def newfun(image): return image.score([' explosion of petals'])
iteration: 131 generation: def newfun(image): return image.score(['spines arranged along the ribs of the inflorescence'])
iteration: 132 generation: def newfun(image): return image.score(['a twisted treetrunk'])
iteration: 133 generation: def newfun(image): return image.score(['cluster of flowers', 'a frequently branching root', 'delicate and feathery fronds'])
iteration: 134 generation: def newfun(image): return image.score(['snow-white plumose ornamentation'])
iteration: 135 generation: def newfun(image): return image.score(['quill-like cedar branches'])
iteration: 136 generation: def newfun(image): return image.score(['moss covered trees'])
iteration: 137 generation: def newfun(image): return image.score(['acacias with long thorns'])
iteration: 138 generation: def newfun(image): return image.score(['tufts of hair'])
iteration: 139 generation: def newfun(image): return image.score(['root hairs'])
iteration: 140 generation: def newfun(image): return image.score(['long hairs gathered into bundles'])
iteration: 141 generation: def newfun(image): return image.score(['pincushion outer calyx'])
iteration: 142 generation: def newfun(image): return image.score(['mycorrhizal association with host plant'])
iteration: 143 generation: def newfun(image): return image.score(['lichen on a liquorice stick'])
iteration: 144 generation: def newfun(image): return image.score(['orange or yellow stamens'])
iteration: 145 generation: def newfun(image): return image.score(['tufts of hair on a plant'])
iteration: 146 generation: def newfun(image): return image.score(['crystals aggregated into branches'])
iteration: 147 generation: def newfun(image): return image.score(['lichens on a branch'])
iteration: 148 generation: def newfun(image): return image.score(['moss or lichen'])
iteration: 149 generation: def newfun(image): return image.score(['ropes or chains', 'a crown or tiara', 'reindeer moss'])
iteration: 150 generation: def newfun(image): return image.score(['group of shrubs or trees in incorrect colors'])
iteration: 151 generation: def newfun(image): return image.score(['crustose lichens'])
iteration: 152 generation: def newfun(image): return image.score(['elastic fibers'])
iteration: 153 generation: def newfun(image): return image.score(['root system above ground'])
iteration: 154 generation: def newfun(image): return image.score(['lichen covered branches'])
iteration: 155 generation: def newfun(image): return image.score(['parasitic dodder (Cuscuta)'])
iteration: 156 generation: def newfun(image): return image.score(['roots are where the plant absorbs the most nutrients'])
iteration: 157 generation: def newfun(image): return image.score(['confetti', 'tangled web'])
iteration: 158 generation: def newfun(image): return image.score(['stringy pubescence'])
iteration: 159 generation: def newfun(image): return image.score(['netted pompoms'])
iteration: 160 generation: def newfun(image): return image.score(['boughs and entwined smaller branches'])
iteration: 161 generation: def newfun(image): return image.score(['vines climbing a tree'])
iteration: 162 generation: def newfun(image): return image.score(['tendrils twining around branches'])
iteration: 163 generation: def newfun(image): return image.score(['trumpet-shaped lichens'])
iteration: 164 generation: def newfun(image): return image.score(['different-colored flowers in a inflorescence'])
iteration: 165 generation: def newfun(image): return image.score(['lichen covered tree branches'])
iteration: 166 generation: def newfun(image): return image.score(['layers connected by plant-like tendrils'])
iteration: 167 generation: def newfun(image): return image.score(['dense, branching coralline algae'])
iteration: 168 generation: def newfun(image): return image.score(['lichen or moss'])
iteration: 169 generation: def newfun(image): return image.score(['fungus with spores in rapport with lichens'])
iteration: 170 generation: def newfun(image): return image.score(['lianas twine around other plants'])
iteration: 171 generation: def newfun(image): return image.score(['aerial roots'])
iteration: 172 generation: def newfun(image): return image.score(['lace-like foliage'])
iteration: 173 generation: def newfun(image): return image.score(['roots covered in soil'])
iteration: 174 generation: def newfun(image): return image.score(['layers connected by plant-like tendrils'])
iteration: 175 generation: def newfun(image): return image.score(['bryophyte covering a boulder'])
iteration: 176 generation: def newfun(image): return image.score(['spider webs connecting leaves or branches'])
iteration: 177 generation: def newfun(image): return image.score(['lichens'])
iteration: 178 generation: def newfun(image): return image.score(['ends of branches covered in seeds'])
iteration: 179 generation: def newfun(image): return image.score(['interlocking branches and twigs'])
iteration: 180 generation: def newfun(image): return image.score(['clusters of dark purple grapes'])
iteration: 181 generation: def newfun(image): return image.score(['yellow or orange spines'])
iteration: 182 generation: def newfun(image): return image.score(['vines climbing up a lattice'])
iteration: 183 generation: def newfun(image): return image.score(['lichen on a branch'])
iteration: 184 generation: def newfun(image): return image.score(['a parasitic plant that looks like a bunch of sticks'])
iteration: 185 generation: def newfun(image): return image.score(['a turf covered with moss'])
iteration: 186 generation: def newfun(image): return image.score(['moss-covered branches'])
iteration: 187 generation: def newfun(image): return image.score(['a mess of tangled vines and stems'])
iteration: 188 generation: def newfun(image): return image.score(['branches that spread out in all directions'])
iteration: 189 generation: def newfun(image): return image.score(['a spongy mass of tangled hyphae'])
iteration: 190 generation: def newfun(image): return image.score(['branches that are twisted and gnarled'])
iteration: 191 generation: def newfun(image): return image.score(['lichen growing on a tree'])
iteration: 192 generation: def newfun(image): return image.score(['sparse canopy analogous to lichen'])
iteration: 193 generation: def newfun(image): return image.score(['spiny parasitic plant'])
iteration: 194 generation: def newfun(image): return image.score(['web-like growth on a plant'])
iteration: 195 generation: def newfun(image): return image.score(['twigs covered in hoar frost'])
iteration: 196 generation: def newfun(image): return image.score(['cobwebs'])
iteration: 197 generation: def newfun(image): return image.score(['lichens'])
iteration: 198 generation: def newfun(image): return image.score(['lichen'])
iteration: 199 generation: def newfun(image): return image.score(['brittle branches and twigs'])
