iteration:  0 best program: def newfun(image): return image.score(['white flowers', 'a small, rectangular or square rug', 'spores on the gills', 'small to medium-sized dog', 'florets arranged in a tight, compact head', 'a rope or cord to pull the blade down'])  
iteration:  1 best program: def newfun(image): return image.score(['fuzzy, caterpillar-like body', 'orange or yellow', ' contains a valuable substance', 'spiky shell', 'hat-shaped', 'natural arc shape']) 
iteration:  2 best program: def newfun(image): return image.score(['fuzzy, caterpillar-like body', 'orange or yellow', ' contains a valuable substance', 'spiky shell', 'hat-shaped', 'natural arc shape']) 
iteration:  3 best program: def newfun(image): return image.score(['fuzzy, caterpillar-like body', 'orange or yellow', ' contains a valuable substance', 'spiky shell', 'hat-shaped', 'natural arc shape']) 
iteration:  4 best program: def newfun(image): return image.score(['a beautiful, melodious song', 'feathers, typically brightly colored', 'a ring or crown of petals', 'shiny, iridescent', 'grasses and wildflowers', ' made of wood, plastic, or metal']) 
iteration:  5 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  6 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  7 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  8 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  9 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  10 best program: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these']) 
iteration:  11 best program: def newfun(image): return image.score(['a flowering vine', 'climbs rather than flows', 'large eyes', 'often found near water', 'dark green leaves', 'branches or stems covered in thorns']) 
iteration:  12 best program: def newfun(image): return image.score(['a flowering vine', 'climbs rather than flows', 'large eyes', 'often found near water', 'dark green leaves', 'branches or stems covered in thorns']) 
iteration:  13 best program: def newfun(image): return image.score(['a flowering vine', 'climbs rather than flows', 'large eyes', 'often found near water', 'dark green leaves', 'branches or stems covered in thorns']) 
iteration:  14 best program: def newfun(image): return image.score(['a flowering vine', 'climbs rather than flows', 'large eyes', 'often found near water', 'dark green leaves', 'branches or stems covered in thorns']) 
iteration:  15 best program: def newfun(image): return image.score(['rows of tiny, white flowers', 'hairy or furry', 'crown of flowers', 'ovate-shaped petals', 'has a root system', 'long, thin, and curved structure']) 
iteration:  16 best program: def newfun(image): return image.score(['rows of tiny, white flowers', 'hairy or furry', 'crown of flowers', 'ovate-shaped petals', 'has a root system', 'long, thin, and curved structure']) 
iteration:  17 best program: def newfun(image): return image.score(['rows of tiny, white flowers', 'hairy or furry', 'crown of flowers', 'ovate-shaped petals', 'has a root system', 'long, thin, and curved structure']) 
iteration:  18 best program: def newfun(image): return image.score(['spiky, branching trees', 'a flowering shrub', 'red or pink flower petals', 'trees, bushes, and other plants', 'a fence', 'has taproots']) 
iteration:  19 best program: def newfun(image): return image.score(['spiky fur', 'spiky leaves', 'spiky branches', 'spiky seeds', 'a pointed, spiky tail', 'a sharp, spiky beak']) 
iteration:  20 best program: def newfun(image): return image.score(['spiky fur', 'spiky leaves', 'spiky branches', 'spiky seeds', 'a pointed, spiky tail', 'a sharp, spiky beak']) 
iteration:  21 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  22 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  23 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  24 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  25 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  26 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  27 best program: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice']) 
iteration:  28 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  29 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  30 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  31 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  32 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  33 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  34 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  35 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  36 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  37 best program: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads']) 
iteration:  38 best program: def newfun(image): return image.score(['privet; evergreen shrub', 'white flowers in clusters', 'hard, glossy berries', 'fragrant flowers', 'thorny stems', 'ornamental trees']) 
iteration:  39 best program: def newfun(image): return image.score(['privet; evergreen shrub', 'white flowers in clusters', 'hard, glossy berries', 'fragrant flowers', 'thorny stems', 'ornamental trees']) 
iteration:  40 best program: def newfun(image): return image.score(['privet; evergreen shrub', 'white flowers in clusters', 'hard, glossy berries', 'fragrant flowers', 'thorny stems', 'ornamental trees']) 
iteration:  41 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  42 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  43 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  44 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  45 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  46 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  47 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  48 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  49 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  50 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  51 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  52 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  53 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  54 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  55 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  56 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  57 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  58 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  59 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  60 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  61 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  62 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  63 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  64 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  65 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  66 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  67 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  68 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  69 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  70 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  71 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  72 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  73 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  74 best program: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit']) 
iteration:  75 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  76 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  77 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  78 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  79 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  80 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  81 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  82 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  83 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  84 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  85 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  86 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  87 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  88 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  89 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  90 best program: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers']) 
iteration:  91 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  92 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  93 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  94 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  95 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  96 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  97 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  98 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  99 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  100 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  101 best program: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub']) 
iteration:  102 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  103 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  104 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  105 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  106 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  107 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  108 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  109 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  110 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  111 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  112 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  113 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  114 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  115 best program: def newfun(image): return image.score(['bush with yellowish flowers']) 
iteration:  116 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  117 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  118 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  119 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  120 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  121 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  122 best program: def newfun(image): return image.score(['bush with clusters of small white flowers']) 
iteration:  123 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  124 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  125 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  126 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  127 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  128 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  129 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  130 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  131 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  132 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  133 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  134 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  135 best program: def newfun(image): return image.score(['shrub with many yellow flowers']) 
iteration:  136 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  137 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  138 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  139 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  140 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  141 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  142 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  143 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  144 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  145 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  146 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  147 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  148 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  149 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  150 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  151 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  152 best program: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers']) 
iteration:  153 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  154 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  155 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  156 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  157 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  158 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  159 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  160 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  161 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  162 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  163 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  164 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  165 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  166 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  167 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  168 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  169 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  170 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  171 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  172 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  173 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  174 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  175 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  176 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  177 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  178 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  179 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  180 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  181 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  182 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  183 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  184 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  185 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  186 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  187 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  188 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  189 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  190 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  191 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  192 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  193 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  194 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  195 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  196 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  197 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  198 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
iteration:  199 best program: def newfun(image): return image.score(['branches and twigs covered with lichen']) 
