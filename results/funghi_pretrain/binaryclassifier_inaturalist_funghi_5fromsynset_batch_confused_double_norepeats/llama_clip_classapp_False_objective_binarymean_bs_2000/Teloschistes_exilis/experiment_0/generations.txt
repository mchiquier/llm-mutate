iteration: 0 generation: def newfun(image): return image.score(['fuzzy, caterpillar-like body', 'orange or yellow', ' contains a valuable substance', 'spiky shell', 'hat-shaped', 'natural arc shape'])
iteration: 1 generation: def newfun(image): return image.score(['sap-sucking insects', 'serrated leaves', 'tall, slender trees', 'chirping', 'yellowish-green', 'found in warmer climates'])
iteration: 2 generation: def newfun(image): return image.score(['a still image or video', 'a small bird', 'often worn on the head', 'a plant with long, narrow leaves', 'a spiked or studded exterior', 'a small, furry mammal'])
iteration: 3 generation: def newfun(image): return image.score(['a beautiful, melodious song', 'feathers, typically brightly colored', 'a ring or crown of petals', 'shiny, iridescent', 'grasses and wildflowers', ' made of wood, plastic, or metal'])
iteration: 4 generation: def newfun(image): return image.score(['spiky, branching tree', 'often blooming with colorful flowers', 'fluffy, soft fur', 'examples: giraffes, elephants', 'water-resistant material', 'teeth, typically 3 pairs of these'])
iteration: 5 generation: def newfun(image): return image.score(['a spiky, furry insect', 'spiky leaves', 'smooth egg', 'spiky shell', 'powerfully built with strong jaws', 'has Propellers'])
iteration: 6 generation: def newfun(image): return image.score(['sings a melodious song', 'a birdhouse', 'flowers blooming in a garden', 'a petaluna', 'lace', 'surrounded by trees'])
iteration: 7 generation: def newfun(image): return image.score(['spiky, branching tree', 'bark texture', '�ounded ears', 'many small, round fruits', 'tall, thin, pointy projections', 'left òwend probing overija dark interior'])
iteration: 8 generation: def newfun(image): return image.score([' often more than four limbs', 'can have pores or other openings', 'can have flowers or other growths', 'can be two-dimensional', 'a sun with a smiling face', 'full of water'])
iteration: 9 generation: def newfun(image): return image.score(['spiky tree', 'oval-shaped', 'pink or red flower', 'brown fruit', 'animal home', 'has roots, stem, and leaves'])
iteration: 10 generation: def newfun(image): return image.score(['a flowering vine', 'climbs rather than flows', 'large eyes', 'often found near water', 'dark green leaves', 'branches or stems covered in thorns'])
iteration: 11 generation: def newfun(image): return image.score(['a skilled craftsman', 'has a spout', 'leaves may be a different color from the rest of the plant', 'plant with large, leafy greens and yellow flowers', 'a crown, diadem, or other headwear framing the face', 'piece of soft, thin food suitable for dipping in a liquid'])
iteration: 12 generation: def newfun(image): return image.score(['lush foliage', 'spiky bark', 'typically 5 petals', 'a full cup or bowl', 'covered in soft hair', 'has a door, drawers, or other openings'])
iteration: 13 generation: def newfun(image): return image.score(['a mechanism for absorbing water', 'spiky, prickly', 'a fairy, elf, or other mythical creature', 'a tree', 'made of a shiny metal', 'a vehicle, such as a motorcycle or car'])
iteration: 14 generation: def newfun(image): return image.score(['rows of tiny, white flowers', 'hairy or furry', 'crown of flowers', 'ovate-shaped petals', 'has a root system', 'long, thin, and curved structure'])
iteration: 15 generation: def newfun(image): return image.score(['closed buds at the top of a stem', 'often brightly colored', 'rows of scales', 'neatly trimmed rectangular shape', 'seed pods', 'various venation patterns'])
iteration: 16 generation: def newfun(image): return image.score(['different from other plants in its ability to move', 'covered in spikes', 'a thick stem', 'has a very distinct smell', 'able to capture and digest insects', 'a plant that essentially eats other plants'])
iteration: 17 generation: def newfun(image): return image.score(['spiky, branching trees', 'a flowering shrub', 'red or pink flower petals', 'trees, bushes, and other plants', 'a fence', 'has taproots'])
iteration: 18 generation: def newfun(image): return image.score(['spiky fur', 'spiky leaves', 'spiky branches', 'spiky seeds', 'a pointed, spiky tail', 'a sharp, spiky beak'])
iteration: 19 generation: def newfun(image): return image.score(['thorns', 'bright green', 'spiky', 'spreading habit', 'goes up in flames when put in hot oil', 'a plant often seen in succulent arrangements'])
iteration: 20 generation: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', ' miniature version of a naturally occurring plant', 'growing from a crack or crevice'])
iteration: 21 generation: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', 'miniature version of a naturally occurring plant', 'growing from a crack or crevice'])
iteration: 22 generation: def newfun(image): return image.score(['well-suited for shading', 'a small shrub', 'holly-like', 'shiny green', 'yellow or white flowers', 'blooms in late summer'])
iteration: 23 generation: def newfun(image): return image.score(['has thorns', 'a rose', 'lace', 'typically served at a formal event', 'flowers arranged in a vase', 'rows of books on shelves'])
iteration: 24 generation: def newfun(image): return image.score(['sticky traps', 'prickly or short spines', 'found in arid regions', 'stem with thorns', 'short tubular flowers', 'ligulate flowers'])
iteration: 25 generation: def newfun(image): return image.score(['large petals', 'decorative purposes', 'a type of evergreen', 'a long, stringy fruit', 'silky texture', 'gold or golden-colored'])
iteration: 26 generation: def newfun(image): return image.score(['birch, beech, or other deciduous tree', 'delicate, lacy foliage', 'has seeds that are dispersed by animals', 'small, green', 'usually made of plastic or metal', 'longer, thinner roof'])
iteration: 27 generation: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads'])
iteration: 28 generation: def newfun(image): return image.score(['left and right sides', 'lined with trees', 'brown, shaggy bark', 'covered in lichen', 'stumps or roots', 'columns or pillars'])
iteration: 29 generation: def newfun(image): return image.score(['natural texture of a rock or a piece of driftwood', 'a plant hangs down', 'seed dispersed by air', 'clusters of leaves', 'petals, stamens, or other small parts by wind', 'low angle'])
iteration: 30 generation: def newfun(image): return image.score(['tree-like flowers', 'thin jointed stems', 'several pairs of leaves', 'its leaves rarely fall', 'grayish-brown', 'an exotic fruit'])
iteration: 31 generation: def newfun(image): return image.score(['spiky, branching trees', 'sparsely-leaved', 'ground-hugging shrub', 'fuzzy leaves', 'tight, woody', 'protruding bracts'])
iteration: 32 generation: def newfun(image): return image.score(['leaves often tinted red or purple', 'distinctive pungent scent', ' tiny green leaves', ' produces small white flowers', 'dioecious or polygamo-dioecious', 'staminate flowers in clusters'])
iteration: 33 generation: def newfun(image): return image.score(['cluster of leaves', 'waxy coating', 'petals with distinct colors', 'curved, thorny branches', 'miniature version of a naturally occurring plant', 'growing from a crack or crevice'])
iteration: 34 generation: def newfun(image): return image.score(['fuzzy seeds', 'grayish or yellowish-brown', 'twin flowers', 'blooms in spring', ' Frauencho; models ship'])
iteration: 35 generation: def newfun(image): return image.score(['deep red', 'fern-like foliage', 'spiky', 'sweet scent', 'clustered flowers', 'often dangerous or deadly'])
iteration: 36 generation: def newfun(image): return image.score(['spiky shrubs', 'spiny shoots', 'its prickly fruit', 'hexagonal cells', 'compound leaves', 'globose flower heads'])
iteration: 37 generation: def newfun(image): return image.score(['privet; evergreen shrub', 'white flowers in clusters', 'hard, glossy berries', 'fragrant flowers', 'thorny stems', 'ornamental trees'])
iteration: 38 generation: def newfun(image): return image.score(['peat moss', 'sphagnum moss', 'bog grass', 'a circular flowerhead', 'sharp-toothed leaves', 'hairlike structures'])
iteration: 39 generation: def newfun(image): return image.score(['can grow to over 100 feet tall', 'iridescent feathers', 'slender, branching form', 'grows from a single stem', 'grows from the ground', 'often covered in small insects'])
iteration: 40 generation: def newfun(image): return image.score(['spiky trees', 'lichen-covered bark', 'tall, slender trunk', 'lichen covered', 'powdery mildew or mold', 'dehiscent fruit'])
iteration: 41 generation: def newfun(image): return image.score(['must have been taken outdoors', 'orange or yellow petals', 'raised ridges or veins', ' growth habit', 'flower arrangement', 'pink pollen'])
iteration: 42 generation: def newfun(image): return image.score(['a thorny shrub', 'three-leafleted leaves', 'produces a dye', 'woolly herb', 'scattered flowers', 'fine hairs on branches and leaves'])
iteration: 43 generation: def newfun(image): return image.score(['a medicinal herb', 'produces small white flowers', 'downy leaves and stems', 'bell-shaped flowers', 'toothed leaves', 'spiny burs'])
iteration: 44 generation: def newfun(image): return image.score(['bright green leaves', 'three leaves that are typically heart-shaped', 'stem terminates in a pointed bud', 'yellow flowers', 'typically found on the ground', 'branches covered with soft hairs'])
iteration: 45 generation: def newfun(image): return image.score(['woolly herb', 'scattered flowers', 'fine hairs on branches and leaves', 'called silk plant because of its silky flowers'])
iteration: 46 generation: def newfun(image): return image.score(['clusters of fruit', 'typically an herb or a shrub', 'leaves are tough and have sharp points', 'leaves have smooth edges or are lobed', '3-pronged prickles', 'a waxy coating'])
iteration: 47 generation: def newfun(image): return image.score(['cluster of leaves', 'petals with distinct colors', 'curved, thorny branches', 'miniature version of a naturally occurring plant', 'growing from a crack or crevice'])
iteration: 48 generation: def newfun(image): return image.score(['shrub with colorful flowers', 'stand of trees', 'spiky leaves', 'trellis to climb', 'leaves with three or five point', 'antlers, like those on a deer or elk'])
iteration: 49 generation: def newfun(image): return image.score(['lemon-scented', 'pungent', 'spiky leaves', 'black, shiny berries', 'a spiky shrub', 'honey-scented flowers'])
iteration: 50 generation: def newfun(image): return image.score(['blooms in spring', 'multitudes of tiny flowers', 'clustered, spiky flowers', 'also known as bush honeysuckle', 'evergreen hedge', 'crimson flowers'])
iteration: 51 generation: def newfun(image): return image.score(['erect or creeping shrub', 'fun-nel-shaped flowers', 'pistillate flowers', ' clusters of small, green leaves', 'stellate hairs', 'inflated calyx'])
iteration: 52 generation: def newfun(image): return image.score(['blue-green needles', 'masses of small white flowers', ' sweet-gum tree', 'cotton-like tufts', 'a conical receptacle', 'the only maple with fuzzy leaves'])
iteration: 53 generation: def newfun(image): return image.score(['grayish-green leaves', 'branches often have nodal spines', 'yellowish-green flowers', 'suffrutescent or semi-suffrutescent', 'woolly leaves', 'tubular flowers'])
iteration: 54 generation: def newfun(image): return image.score(['hollow stem', 'feathery leaves', 'number of seeds', 'a hard seed-like fruit', 'woolly leaves and flowers', 'brittle, easily broken'])
iteration: 55 generation: def newfun(image): return image.score(['hairy leaves', 'clustered flowers', 'woolly leaves', 'spiny burs', 'grayish-green leaves', ' branch snodgrass'])
iteration: 56 generation: def newfun(image): return image.score(['catkin-bearing shrub', ' pubescent leaves', 'cluster of white flowers', 'glabrous calyx', 'fun-nel-shaped corolla', 'rhomboid seeds'])
iteration: 57 generation: def newfun(image): return image.score(['birch tree', 'pale flowers', ' yellow-green leaves', 'in pairs laterally', 'a willow tree', ' branching stem'])
iteration: 58 generation: def newfun(image): return image.score(['red berries', 'a shrub or small tree', 'oval leaves', 'tendrils with terminal clusters', 'a honeysuckle', 'trumpet-shaped flowers'])
iteration: 59 generation: def newfun(image): return image.score(['stalked leaves', 'grayish-brown bark', 'greenish-yellow leaves', 'long, straight branches', 'birch-like tree', 'yellow flowers'])
iteration: 60 generation: def newfun(image): return image.score(['crown-like flowers', 'woolly leaves', 'spiky shrub', 'yellow flowers', 'evergreen tree', 'thorns or spines'])
iteration: 61 generation: def newfun(image): return image.score(['hairy leaves', 'bright yellow flowers', ' succulent', 'reptilian-like skin', 'round', 'spiky green leaves'])
iteration: 62 generation: def newfun(image): return image.score(['cluster of berries', 'hairy vines', ' green leaves', 'swirling, wrinkled trunk', ' creeping vines', ' yellowish-green leaves'])
iteration: 63 generation: def newfun(image): return image.score(['golden stamens', 'pleasantly scented', 'leaves-calyx-sepals-petals', 'elliptical leaf', 'scattered flowers', ' pods with seeds'])
iteration: 64 generation: def newfun(image): return image.score(['woolly hairs', 'a variety of colors', 'thorny branches', 'three leaflets', 'a shrub or small tree', 'hairy or smooth leaves'])
iteration: 65 generation: def newfun(image): return image.score([' interwoven branches', 'bunch of fresh flowers', 'cluster of tiny red flowers', 'ornamental flowers on a stem', 'arranged in rows', 'thin, green leaves'])
iteration: 66 generation: def newfun(image): return image.score(['tangled Halophyte plant', 'small fruits', ' bushy, fast-growing tree', 'sparse foliage', 'low-maintenance plants', 'nettle-like leaves'])
iteration: 67 generation: def newfun(image): return image.score(['fuzzy, white seed heads', 'a tree with a white, papery bark', 'branches and twigs commonly covered with a powdery white coating', 'light-colored flowers', 'tall and slender', 'heart-shaped leaves'])
iteration: 68 generation: def newfun(image): return image.score([' actually a succulent', 'pinkish-white flowers', ' heavily-branched shrub', 'upper leaves white or hairy', 'umbels of small yellow flowers'])
iteration: 69 generation: def newfun(image): return image.score(['spines along its stem', 'succulent leaves', 'oval-shaped leaves', 'a thorny, fruit-bearing shrub', 'thorns typically occur in pairs', 'snorm walks'])
iteration: 70 generation: def newfun(image): return image.score(['twining plants', 'feathery fronds', 'leafy crown', 'pubescentшогоhaler plants', 'goblet-shaped flowers', 'dioecious plants'])
iteration: 71 generation: def newfun(image): return image.score(['full of seeds', 'often harvested in fall', 'yellow or golden petals', 'called sunflowers', 'tall shrub or small tree', 'bright yellow blooms'])
iteration: 72 generation: def newfun(image): return image.score(['leaves with jagged teeth', 'a dwarf shrub', 'pink or white flowers', 'red fall color', 'a deciduous shrub', ' clusters of tubular flowers'])
iteration: 73 generation: def newfun(image):     return image.score(['plant with milky sap', 'difficult to distinguish from a tree', 'speckled bark', 'medium-sized deciduous tree', 'golden yellow flowers in clusters'])
iteration: 74 generation: def newfun(image): return image.score(['actually a succulent', 'heavily-branched shrub', 'umbels of small yellow flowers'])
iteration: 75 generation: def newfun(image): return image.score(['a clump of grass', 'plumes or feathery leaves', 'produces many seeds', 'stalks with branches', 'seed heads', 'spiky blooms'])
iteration: 76 generation: def newfun(image): return image.score(['hairy stems and leaves', 'exudes a milky sap', 'angular or pyramidal clusters of small white flowers'])
iteration: 77 generation: def newfun(image): return image.score(['spiny stem', 'crown of thorns', ' white flowers', 'low-growing shrub', ' circular clusters of leaves', 'dried flower branches'])
iteration: 78 generation: def newfun(image): return image.score(['tangled Halophyte plant', 'small fruits', 'a bushy, fast-growing tree', 'sparse foliage', 'low-maintenance plants', 'nettle-like leaves'])
iteration: 79 generation: def newfun(image): return image.score(['delicate paper-like flowers', 'red stamens', ' Needle-like leaves', 'bracts that resemble flowers', 'a cup-shaped calyx', 'a sweet fragrance'])
iteration: 80 generation: def newfun(image): return image.score(['thorns or spines', 'woody, thorny shrub', 'spiky branches', 'black/dark-colored fruit', 'places for birds to nest', 'has lovely flowers'])
iteration: 81 generation: def newfun(image): return image.score(['a hedge or topiary', 'lacy foliage', 'spiny leaves', 'green or yellow', 'woolly leaves or stems', 'cup-shaped flowers'])
iteration: 82 generation: def newfun(image): return image.score(['bark covered in lichen', 'thicket-forming shrub', 'Many small, white or pink flowers', 'graceful arching branches', ' clusters of small leaves', 'woody vines'])
iteration: 83 generation: def newfun(image): return image.score(['colorful leaves', 'American holly', 'waxy red berries', 'shiny leaves', 'grow up trees', ' evergreen shrub'])
iteration: 84 generation: def newfun(image): return image.score(['bright blue flowers', 'spiky green leaves', 'shrub or small tree', 'densely branched', 'may have thorns', 'bell-shaped flowers'])
iteration: 85 generation: def newfun(image): return image.score(['a green shrub', 'a cup-shaped calyx', 'red stamens', 'bracts that resemble flowers', 'needle-like leaves', ' delicate paper-like flowers'])
iteration: 86 generation: def newfun(image): return image.score(['showy flowers', 'thorns or spines', 'tree with peeling bark', 'bright-colored berries', 'ochre-colored flowers', 'a salt-tolerant plant'])
iteration: 87 generation: def newfun(image): return image.score(['hazelnut tree', 'a deciduous shrub with edible nuts'])
iteration: 88 generation: def newfun(image): return image.score(['a perennial shrub', 'a cluster of small 5-petaled flowers'])
iteration: 89 generation: def newfun(image): return image.score(['hairy leaved', 'bright yellow', 'taproot', ' densely hairy', 'тыкыватый shrub', 'seed pod explodes'])
iteration: 90 generation: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub'])
iteration: 91 generation: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub'])
iteration: 92 generation: def newfun(image): return image.score(['lichen-covered branches', 'rosaceous flowers', 'hairy leaves', 'sticky', 'leaf-like sepals', 'goblet-shaped flowers'])
iteration: 93 generation: def newfun(image): return image.score(['upright shrub', 'shrub with showy flowers', 'goblet-shaped flowers', 'opposite branching', 'grape-like clusters of small fruit', 'hairy leaves'])
iteration: 94 generation: def newfun(image): return image.score(['shiny black berries', 'shrub with dark green leaves', ' Small white flowers in clusters'])
iteration: 95 generation: def newfun(image): return image.score(['spiked fruits', 'woolly or hairy', 'thorns', 'prickly stems', 'woolly leaves', 'small yellow or green flowers'])
iteration: 96 generation: def newfun(image): return image.score(['evergreen shrub', 'wading bird', 'tangled Halophyte plant', 'small fruits', 'golden stamens', 'elliptical leaf'])
iteration: 97 generation: def newfun(image): return image.score(['curly top', 'a hedge plant', 'grows on water', 'yellow or orange flowers', 'called for its use as a medicine', ' large clusters of white flowers'])
iteration: 98 generation: def newfun(image): return image.score(['shrub with pendulous racemes of white flowers'])
iteration: 99 generation: def newfun(image): return image.score(['spreading tree with fern-like leaves'])
iteration: 100 generation: def newfun(image): return image.score(['leaves with jagged teeth', 'a dwarf shrub', 'pink or white flowers', 'red fall color', 'a deciduous shrub', ' clusters of tubular flowers'])
iteration: 101 generation: def newfun(image): return image.score(['bush with yellowish flowers'])
iteration: 102 generation: def newfun(image): return image.score(['shrub with fuzzy leaves'])
iteration: 103 generation: def newfun(image): return image.score(['red maple-like leaves', 'shrub with clusters of small flowers'])
iteration: 104 generation: def newfun(image): return image.score(['hairy leaves', 'clustered flowers', 'woolly leaves', 'spiny burs', 'grayish-green leaves', 'small fruits'])
iteration: 105 generation: def newfun(image): return image.score(['leaves that stay tightly shut during rain', 'a shrub/plant with branches covered in needles', 'dark green leaves', 'bundles of green twigs', 'shiny leaves, green on top and brown underneath', 'frequented by birds'])
iteration: 106 generation: def newfun(image): return image.score(['twisted, gnarled trunk', 'shrub with yellow flowers', 'bunches of golden flowers', 'ornamental', ' evergreen shrub', 'tan-colored bark'])
iteration: 107 generation: def newfun(image): return image.score(['spiky branches and twigs', 'spiny fruits', 'olive green leaves', 'chunky bunches of small, starry flowers', 'an herb plant'])
iteration: 108 generation: def newfun(image): return image.score(['twigs with clustered flowers', 'papery white bark', 'elderberries'])
iteration: 109 generation: def newfun(image): return image.score([' a hedge usually made of this shrub', 'intensely fragrant flowers', 'purple-tinged stems', 'small purple flowers', 'serrated leaves', 'sharp prickles'])
iteration: 110 generation: def newfun(image): return image.score([' Also called snowball bush', ' round clusters of white flowers', 'opposite branching', 'often pruned into ornamental shapes', 'shrub with white flower clusters'])
iteration: 111 generation: def newfun(image): return image.score(['a thorny shrub', 'a deciduous shrub', 'olive-green fruit', 'yellow flowers'])
iteration: 112 generation: def newfun(image): return image.score(['shrub with hairy leaves'])
iteration: 113 generation: def newfun(image): return image.score(['a low-growing shrub', 'erect cluster of flowers'])
iteration: 114 generation: def newfun(image): return image.score(['grayish-white or greenish-brown bark', 'light-colored flowers', 'scale-like leaves', 'often branching', 'evergreen shrub or small tree', 'sessile leaves'])
iteration: 115 generation: def newfun(image): return image.score(['bush with clusters of small white flowers'])
iteration: 116 generation: def newfun(image): return image.score(['shrub with spiky branches'])
iteration: 117 generation: def newfun(image): return image.score(['prickly plant with sweet-smelling flowers'])
iteration: 118 generation: def newfun(image): return image.score(['a coniferous evergreen with scale-like leaves', 'dwarf shrub', 'wiry branches', 'evergreen shrub', 'yellow flowers', 'flattened branches'])
iteration: 119 generation: def newfun(image): return image.score(['a fuzzy leaved shrub', 'bunches of pointy flowers'])
iteration: 120 generation: def newfun(image): return image.score([' round clusters of white flowers', 'opposite branching', 'shrub with white flower clusters', 'white petals', 'often pruned into ornamental shapes', 'typically an herb or a shrub'])
iteration: 121 generation: def newfun(image): return image.score(['connate pairs of leaves', 'flowers in whorls', 'yellowish green flowers', 'ternate or quaternate branching', 'ligulate flowers', 'fruit with two pyrenes'])
iteration: 122 generation: def newfun(image): return image.score(['shrub with many yellow flowers'])
iteration: 123 generation: def newfun(image): return image.score(['yellow or orange flowers', 'grows on trees', 'green leaves', 'spiny shrub', 'bunches of small, fragrant flowers', 'native to Mediterranean region'])
iteration: 124 generation: def newfun(image): return image.score(['bush with orange berries'])
iteration: 125 generation: def newfun(image): return image.score(['shiny green leaves', 'blooms in early spring', 'yellow flowers shaped like bells or trumpets'])
iteration: 126 generation: def newfun(image): return image.score(['shrub with pointed leaves', 'clusters of small white flowers', 'pink or red berry-like structures', 'thorny stems', 'toothed leaves', 'growing in a dense thicket'])
iteration: 127 generation: def newfun(image): return image.score(['shiny black berries', 'oak tree', 'covered with moss and lichen'])
iteration: 128 generation: def newfun(image): return image.score(['evergreen tree with needle-like leaves'])
iteration: 129 generation: def newfun(image): return image.score(['a green shrub', 'a cup-shaped calyx', 'ligulate flowers', 'red stamens', 'bracts that resemble flowers', 'delicate paper-like flowers'])
iteration: 130 generation: def newfun(image): return image.score(['shrub with branches that have several directions of growth', 'dense foliage', 'doubly-toothed leaves', 'dense cluster of small flowers', 'often planted as a border'])
iteration: 131 generation: def newfun(image): return image.score(['evergreen tree with fresh green needles'])
iteration: 132 generation: def newfun(image): return image.score(['plants covered in ice crystals'])
iteration: 133 generation: def newfun(image): return image.score(['short shrub with blue flowers', ' fuzzy green leaves'])
iteration: 134 generation: def newfun(image): return image.score(['a flowering vine or shrub'])
iteration: 135 generation: def newfun(image): return image.score(['shrub with hairy leaves and many yellow flowers'])
iteration: 136 generation: def newfun(image): return image.score(['a minature tree with ornamental leaves'])
iteration: 137 generation: def newfun(image): return image.score(['spiny shrub with red flowers'])
iteration: 138 generation: def newfun(image): return image.score(['dark green leaves', 'flowers with five petals', 'Y-shaped branches', 'shrub or small tree', 'reddish-colored stems', 'catkin-like inflorescence'])
iteration: 139 generation: def newfun(image): return image.score(['spiky shrub with sword-like leaves'])
iteration: 140 generation: def newfun(image): return image.score(['a tree with yellow flowers'])
iteration: 141 generation: def newfun(image): return image.score(['a small tree with brightly colored flowers'])
iteration: 142 generation: def newfun(image): return image.score(['red fruit', 'shrub or tree', 'leaves or branches', ' prickly shrub', 'ornamental tree', 'citrus fruit'])
iteration: 143 generation: def newfun(image): return image.score(['hedge with holly-like leaves'])
iteration: 144 generation: def newfun(image): return image.score(['treelike plant with showy flowers'])
iteration: 145 generation: def newfun(image): return image.score(['shrub with fuzzy leaves'])
iteration: 146 generation: def newfun(image): return image.score(['a low-growing shrub covered in small white flowers'])
iteration: 147 generation: def newfun(image): return image.score(['purple flowers', 'round blue-purple berries', 'woody shrub with small yellowish-green leaves'])
iteration: 148 generation: def newfun(image): return image.score(['a forked branches covered in flowers'])
iteration: 149 generation: def newfun(image): return image.score(['tall shrub with small white flowers'])
iteration: 150 generation: def newfun(image): return image.score(['tufted hair grass', 'staghorn sumac', 'growing on rocks or in rocky soil', 'leaves and twigs eaten by animals', 'fuzzy white flowers', 'fuzzy red or purple berries'])
iteration: 151 generation: def newfun(image): return image.score(['white or green berries', 'a spreading shrub', 'glossy green leaves', 'crimson flowers', 'stems with spines', 'red stamens'])
iteration: 152 generation: def newfun(image): return image.score(['branches and twigs covered with lichen'])
iteration: 153 generation: def newfun(image): return image.score(['prickly shrub with purple or pink flowers'])
iteration: 154 generation: def newfun(image): return image.score(['a tree with showy round clusters of flowers'])
iteration: 155 generation: def newfun(image): return image.score(['bush with tangled branches'])
iteration: 156 generation: def newfun(image): return image.score(['shrub with small blue flowers'])
iteration: 157 generation: def newfun(image): return image.score(['thorny shrub with bright orange flowers'])
iteration: 158 generation: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'spinescent shrub'])
iteration: 159 generation: def newfun(image): return image.score(['a thorny shrub'])
iteration: 160 generation: def newfun(image): return image.score(['a plant with showy flowers'])
iteration: 161 generation: def newfun(image): return image.score(['thorns or spines', 'spiky leaves', 'bundle-like clusters of flowers', 'unbranched stem', 'a craype berry plant', 'reddish purple flowers'])
iteration: 162 generation: def newfun(image): return image.score(['fuzzy or woolly leaves', 'spiky branches', 'thorns on branches', 'round clusters of flowers', 'grow in Aleppo pine forests', 'a type of moss'])
iteration: 163 generation: def newfun(image): return image.score(['thorny shrub with red orange or yellow flowers'])
iteration: 164 generation: def newfun(image): return image.score(['bushy shrub with yellow showy flowers'])
iteration: 165 generation: def newfun(image): return image.score(['evergreen tree with golden needles'])
iteration: 166 generation: def newfun(image): return image.score(['a tree with yellow flowers'])
iteration: 167 generation: def newfun(image): return image.score([' bushy shrub with clusters of small purple flowers'])
iteration: 168 generation: def newfun(image): return image.score(['a tree with greenish-yellow flowers'])
iteration: 169 generation: def newfun(image): return image.score(['orange-red berries', 'leaves with a waxy bloom', 'its red berries are poisonous'])
iteration: 170 generation: def newfun(image): return image.score(['shrub with green leaves', 'fuzzy fruit', 'spiny shrub', 'berry-like fruits', 'white flowers', 'nutlet-like seeds'])
iteration: 171 generation: def newfun(image): return image.score(['deciduous shrub with clusters of yellow flowers'])
iteration: 172 generation: def newfun(image): return image.score(['bushes with hairy leaves', 'grows near streams', '4-petaled flowers', 'small tree', 'round clusters of fruit'])
iteration: 173 generation: def newfun(image): return image.score(['shrubs with white flowers'])
iteration: 174 generation: def newfun(image): return image.score(['spiky bush with bright yellow flowers'])
iteration: 175 generation: def newfun(image): return image.score(['bark covered in lichen', 'thorny shrub', 'woolly herb', 'yellowish-green flowers', 'feathery leaves', 'thicket-forming shrub', 'thorns of leaves'])
iteration: 176 generation: def newfun(image): return image.score(['a spiny or prickly shrub with fragrant yellow flowers'])
iteration: 177 generation: def newfun(image): return image.score(['a shrub with round clusters of red berries'])
iteration: 178 generation: def newfun(image): return image.score(['bush or small tree with fragrant flowers'])
iteration: 179 generation: def newfun(image): return image.score(['tree with bright red berries'])
iteration: 180 generation: def newfun(image): return image.score(['tall prickly shrub with yellow flowers'])
iteration: 181 generation: def newfun(image): return image.score(['thorny shrub or small tree'])
iteration: 182 generation: def newfun(image): return image.score([' large showy flowers', ' fuzzy green leaves'])
iteration: 183 generation: def newfun(image): return image.score(['thorny shrub with green leaves'])
iteration: 184 generation: def newfun(image): return image.score(['a slender spike of flowers', 'spiky branches', 'scale-like leaves', 'shrub or small tree', 'silvery-gray leaves', 'white powdery patches'])
iteration: 185 generation: def newfun(image): return image.score(['a climbing plant with showy flowers'])
iteration: 186 generation: def newfun(image): return image.score(['deciduous shrub with many small leaves'])
iteration: 187 generation: def newfun(image): return image.score(['woody herb with yellow flowers'])
iteration: 188 generation: def newfun(image): return image.score(['woody herbs with yellow flowers'])
iteration: 189 generation: def newfun(image): return image.score(['deciduous shrub with red berries'])
iteration: 190 generation: def newfun(image): return image.score(['a shrub with yellow flowers and hairy leaves'])
iteration: 191 generation: def newfun(image): return image.score(['a vine with hairy leaves and bright orange flowers'])
iteration: 192 generation: def newfun(image): return image.score(['old mans beard lichen'])
iteration: 193 generation: def newfun(image): return image.score(['hanging clusters of yellow flowers'])
iteration: 194 generation: def newfun(image): return image.score(['prickly shrub with pretty flowers'])
iteration: 195 generation: def newfun(image): return image.score(['a fuzzy shrub with yellow flowers'])
iteration: 196 generation: def newfun(image): return image.score(['bushy shrub with blue flowers'])
iteration: 197 generation: def newfun(image): return image.score(['hrub/shrub with flowers'])
iteration: 198 generation: def newfun(image): return image.score(['spiny shrub with yellow flowers'])
iteration: 199 generation: def newfun(image): return image.score(['woody vine with yellow flowers'])
